/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../PopupTemplate.js";import{clone as r,b as i,i as s}from"../core/lang.js";import{M as o}from"../chunks/MultiOriginJSONSupport.js";import{when as n,throwIfAbortError as a}from"../core/promiseUtils.js";import{property as l,ensureRange as p}from"../core/accessorSupport/decorators/property.js";import{k as u,I as m,l as c}from"../chunks/ensureType.js";import{L as d}from"../chunks/Logger.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import{w as y}from"../chunks/writer.js";import f from"./Layer.js";import"../geometry.js";import g from"../Graphic.js";import{read as b,rasterRendererTypes as R,websceneRasterRendererTypes as v}from"../rasterRenderers.js";import j from"../request.js";import S from"../core/Error.js";import{s as x}from"../chunks/jsonMap.js";import{urlToObject as I}from"../core/urlUtils.js";import{aliasOf as w}from"../core/accessorSupport/decorators/aliasOf.js";import{r as P}from"../chunks/reader.js";import{o as _,u as T,b as C,p as k}from"../chunks/commonProperties2.js";import O from"./support/DimensionalDefinition.js";import{a as D}from"../chunks/JSONSupport.js";import N from"./support/RasterFunction.js";import{c as F,g as V}from"../chunks/colorRampUtils.js";import{s as M}from"../renderers/RasterStretchRenderer.js";import A from"../renderers/visualVariables/SizeVariable.js";import L from"./support/MosaicRule.js";import{i as J,n as U}from"../chunks/rasterEnums.js";import z from"./support/Field.js";import q from"./support/FieldsIndex.js";import E from"./support/PixelBlock.js";import Q from"./support/RasterInfo.js";import{R as B}from"../chunks/RasterJobHandler.js";import{R as H,d as G,g as W}from"../chunks/RasterSymbolizer.js";import{g as X,a as Y,c as K,n as Z}from"../chunks/rasterRendererHelper.js";import{computeHistograms as $,computeStatisticsHistograms as ee,getSamples as te}from"../rest/imageService.js";import re from"../rest/support/FeatureSet.js";import ie from"../rest/support/ImageHistogramParameters.js";import se from"../rest/support/ImageIdentifyParameters.js";import oe from"../rest/support/ImageSampleParameters.js";import ne from"../rest/support/Query.js";import ae from"../tasks/ImageIdentifyTask.js";import le from"../tasks/QueryTask.js";import pe from"../geometry/SpatialReference.js";import ue from"../geometry/Extent.js";import me from"../geometry/Point.js";import ce from"../geometry/Polygon.js";import{A as de}from"../chunks/ArcGISService.js";import{B as he}from"../chunks/BlendLayer.js";import{C as ye}from"../chunks/CustomParametersMixin.js";import{O as fe}from"../chunks/OperationalLayer.js";import{P as ge}from"../chunks/PortalLayer.js";import{R as be}from"../chunks/RefreshableLayer.js";import{S as Re}from"../chunks/ScaleRangeLayer.js";import{T as ve}from"../chunks/TemporalLayer.js";import{createPopupTemplate as je}from"../support/popupUtils.js";import"../core/Collection.js";import"../chunks/ArrayPool.js";import"../chunks/Evented.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/metadata.js";import"../chunks/handleUtils.js";import"../chunks/arrayUtils.js";import"../core/scheduling.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/Message.js";import"../core/accessorSupport/decorators/cast.js";import"./support/fieldUtils.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"../chunks/enumeration.js";import"./support/Domain.js";import"../chunks/write.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/arcadeOnDemand.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/number.js";import"../chunks/locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../chunks/chartMediaInfoUtils.js";import"../chunks/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"../chunks/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../chunks/ReadOnlyMultiOriginJSONSupport.js";import"../chunks/Loadable.js";import"../chunks/Promise.js";import"../kernel.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/colors.js";import"../chunks/Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../intl.js";import"../chunks/assets.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../chunks/Thumbnail.js";import"../chunks/Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../chunks/uid.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../chunks/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/support/ClassBreakInfo.js";import"../symbols/support/jsonUtils.js";import"../chunks/symbolConversion.js";import"../chunks/commonProperties.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../renderers/RasterColormapRenderer.js";import"../renderers/support/ColormapInfo.js";import"../chunks/colorUtils2.js";import"../renderers/RasterShadedReliefRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../chunks/devEnvironmentUtils.js";import"../renderers/VectorFieldRenderer.js";import"../geometry/support/normalizeUtils.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/vectorFieldUtils.js";import"../chunks/utils2.js";import"../chunks/asyncUtils.js";import"../chunks/ItemCache.js";import"../chunks/MemCache.js";import"../symbols/support/cimSymbolUtils.js";import"../chunks/utils3.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/fieldType.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"../chunks/LercCodec.js";import"../chunks/pixelUtils.js";import"../chunks/generateRendererUtils.js";import"../chunks/utils5.js";import"../rest/support/ImageIdentifyResult.js";import"../rest/support/ImageSampleResult.js";import"../rest/support/ImageSample.js";import"../chunks/DataLayerSource.js";import"../rest/support/StatisticDefinition.js";import"../tasks/Task.js";import"../chunks/executeForTopCount.js";import"../rest/query/support/AttachmentInfo.js";import"../chunks/query.js";import"../chunks/pbfQueryUtils.js";import"../chunks/pbf.js";import"../chunks/OptimizedFeature.js";import"../chunks/OptimizedFeatureSet.js";import"../chunks/queryZScale.js";import"../chunks/zscale.js";import"../rest/support/AttachmentQuery.js";import"../chunks/featureConversionUtils.js";import"../rest/support/RelationshipQuery.js";import"../rest/support/TopFeaturesQuery.js";import"../rest/support/TopFilter.js";import"../chunks/arcgisLayerUrl.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../TimeInterval.js";import"./support/TimeInfo.js";const Se={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},xe={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ie=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function we(e){return Ie.has(e.type)}function Pe(e,t){if(!e||!t)return r(e||t);const i=r(e);if("none"!==t.functionName.toLowerCase()){Te(i.functionArguments).Raster=t}return i}function _e(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new N;r.functionName="Stretch";const i=Ce[M.toJSON(e.stretchType)],s="u8",o=function(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}(e.statistics),n={StretchType:i,Statistics:o,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};null!=e.outputMin&&(n.Min=e.outputMin);null!=e.outputMax&&(n.Max=e.outputMax);i===Ce.standardDeviation?(n.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=s):i===Ce.percentClip?(n.MinPercent=e.minPercent,n.MaxPercent=e.maxPercent,r.outputPixelType=s):i===Ce.minMax?r.outputPixelType=s:i===Ce.sigmoid&&(n.SigmoidStrengthLevel=e.sigmoidStrengthLevel);if(r.functionArguments=n,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,s=new N,o=V(i);return o?s.functionArguments={colorRamp:o}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?s.functionArguments={colorRamp:e.colorRamp.toJSON()}:s.functionArguments={Colormap:F(i,256)},s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=r,s}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],s=[],o=[],n=1e-6,{pixelType:a,rasterAttributeTable:l}=t,p=l&&l.features,u=Oe(l);if(p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let s;i.a&&p.forEach((n=>{s=n.attributes[e.field],(s>=t.minValue&&s<t.maxValue||r===e.classBreakInfos.length-1&&s>=t.minValue)&&o.push([n.attributes[u],i.r,i.g,i.b])}))}));const t=a?ke(o,a):o,r=new N;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const a=e.symbol&&e.symbol.color;a.a?(0===t?r.push(e.minValue,e.maxValue+n):r.push(e.minValue+n,e.maxValue+n),i.push(t),o.push([t,a.r,a.g,a.b])):s.push(e.minValue,e.maxValue)}));const m=a?ke(o,a):o,c=new N;c.functionName="Remap",c.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:s},c.variableName="Raster";const d=new N;return d.functionName="Colormap",d.functionArguments={Colormap:m,Raster:c},d}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:s}=t,o=s&&s.features,n=Oe(s);let a=!1;e.uniqueValueInfos&&e.uniqueValueInfos.forEach((t=>{const i=t.symbol.color;null!=i&&i.a&&(e.field!==n&&o?o&&o.forEach((s=>{String(s.attributes[e.field])===String(t.value)&&r.push([s.attributes[n],i.r,i.g,i.b])})):isNaN(+t.value)?a=!0:r.push([+t.value,i.r,i.g,i.b]))}));if(a)return null;const l=i&&r.length>0?ke(r,i):r,p=new N;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=l,p.variableName="Raster",p}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,s=i?ke(r,i):r,o=new N;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=s,o}(e,t);case"vector-field":return function(e,t){const r=new N;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:s}=t,o="vector-uv"===i;let n,a;s&&2===s.length&&(n=s.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),a=s.map((e=>e.BandName.toLowerCase())).indexOf("direction"));-1!==n&&null!==n||(n=0,a=1);const l="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new A,m={magnitudeBandID:n,directionBandID:a,isUVComponents:o,referenceSystem:l,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:xe[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return r.functionArguments=m,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new N;const r=new N;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,o={HillshadeType:i,SlopeType:s,ZFactor:e.zFactor};0===i&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude);3===s&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor);r.functionArguments=o,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",o.Colormap=F(e.colorRamp,256));return r}(e,t)}}function Te(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?Te(t.functionArguments):e}const Ce={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function ke(e,t){const r=Se[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function Oe(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}let De=class extends D{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new L({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:s}=t;if(!s||!we(s))return i;return Pe(_e(s,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i)}_addResampleRasterFunction(e){var t;if(!("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type))||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;return Pe(new N({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}),e)}};e([l()],De.prototype,"layer",void 0),e([l({json:{write:!0}})],De.prototype,"adjustAspectRatio",void 0),e([y("adjustAspectRatio")],De.prototype,"writeAdjustAspectRatio",null),e([l({json:{write:!0}}),w("layer.bandIds")],De.prototype,"bandIds",void 0),e([l({json:{write:!0}})],De.prototype,"compression",void 0),e([l({json:{write:!0}}),w("layer.compressionQuality")],De.prototype,"compressionQuality",void 0),e([y("compressionQuality")],De.prototype,"writeCompressionQuality",null),e([l({json:{write:!0}}),w("layer.compressionTolerance")],De.prototype,"compressionTolerance",void 0),e([y("compressionTolerance")],De.prototype,"writeCompressionTolerance",null),e([l({json:{write:!0}}),w("layer.format")],De.prototype,"format",void 0),e([l({type:String,json:{read:{reader:J.read},write:{writer:J.write}}}),w("layer.interpolation")],De.prototype,"interpolation",void 0),e([l({json:{write:!0}}),w("layer.noData")],De.prototype,"noData",void 0),e([l({type:String,json:{read:{reader:U.read},write:{writer:U.write}}}),w("layer.noDataInterpretation")],De.prototype,"noDataInterpretation",void 0),e([l({json:{write:!0}})],De.prototype,"pixelType",void 0),e([l({json:{write:!0}})],De.prototype,"lercVersion",void 0),e([y("lercVersion")],De.prototype,"writeLercVersion",null),e([l({type:Number})],De.prototype,"version",null),e([l({json:{write:!0}})],De.prototype,"mosaicRule",null),e([l({json:{write:!0}})],De.prototype,"renderingRule",null),De=e([h("esri.layers.mixins.ExportImageServiceParameters")],De);const Ne=d.getLogger("esri.layers.mixins.ArcGISImageService"),Fe=x()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Ve=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Me=p(c,{min:0,max:255});const Ae=t=>{let o=class extends t{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new De({layer:this}))}readDefaultServiceMosaicRule(e,t){return L.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}get queryTask(){return new le({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new q(this.fields):null}set format(e){e&&Ve.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=L.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return L.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new L({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Me(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?I(this.url):null}readRenderer(e,t,r){var i,s;const o=null==t||null==(i=t.layerDefinition)||null==(s=i.drawingInfo)?void 0:s.renderer,n=b(o,r);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!o.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),we(n)||Ne.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let o=this.fields?r(this.fields):[];o.push(i),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&o.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&o.push(s),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{o.push(new z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(o.push(new z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),o.push(new z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const i=r(t);return i.name=e+t.name,i}));o=o.concat(t)}return o}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=N.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?N.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?pe.fromJSON(r):null}readPixelType(e){return Fe.fromJSON(e)||e}writePixelType(e,t,r){(i(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Fe.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:o}=this;if(s){i&&(this._symbolizer.bind(),await s.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const n=await s.symbolize({bandIds:o,...e},t);r={extent:e.extent,pixelBlock:n}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:o,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new S("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=u(ie,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),$(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new S("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=u(ie,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),ee(this.url,e,this._getRequestOptions(t))}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new S("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return n(s).then((s=>{s&&(this.rasterInfo=s);const o={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(o)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return j(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new S("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):j(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>re.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=j(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=j(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const o=ue.fromJSON(s[0].extent),n=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new Q({bandCount:s[0].bandCount,extent:o,spatialReference:o.sr,pixelSize:new me({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:o.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:n,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await j(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await j(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?j(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},n=s.spatialReference,a={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+e},l=j(this.parsedUrl.path+"/project",{query:this._getQueryParams(a),...t}).then((e=>e.data)).catch((()=>({}))),p=(s.xmin+s.xmax)/2,u=(s.ymax-s.ymin)/6,m=s.ymin+u,c=[];for(let e=0;e<5;e++)c.push({x:p,y:m+u*e});const d={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:c}),inSR:n.wkid||JSON.stringify(n),outSR:"0:"+e},h=j(this.parsedUrl.path+"/project",{query:this._getQueryParams(d),...t}).then((e=>e.data)).catch((()=>({}))),y=await Promise.all([o,l,h]);let f=y[0].ipxf;if(null==f){var g,b,R;const e=null==(g=i.geodataXform)?void 0:g.xf_0;"topup"===(null==e||null==(b=e.name)?void 0:b.toLowerCase())&&6===(null==e||null==(R=e.coefficients)?void 0:R.length)&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=ue.fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);v&&(v.spatialReference=new pe({wkid:0,imageCoordinateSystem:i}));const S=y[2].geometries?y[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],x=S.length;if(x<3)return{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:null};let I=0,w=0,P=0,_=0;for(let e=0;e<x;e++)I+=S[e].x,w+=S[e].y,P+=S[e].x*S[e].x,_+=S[e].x*S[e].y;const T=(x*_-I*w)/(x*P-I*I);let C=0;const k=S[4].x>S[0].x,O=S[4].y>S[0].y;return T===1/0?C=O?90:270:0===T?C=k?0:180:T>0?C=k?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(C=O?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:C}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&s(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const o=(e=e.clone().shiftCentralMeridian()).spatialReference;let n;if(o.imageCoordinateSystem){const{id:e,referenceServiceName:t}=o.imageCoordinateSystem;n=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:o.imageCoordinateSystem})}else n=o.wkid||JSON.stringify(o.toJSON());s(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const a=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:p,mosaicRule:u}=a;let{renderingRule:m}=a;if(l instanceof Array&&l.length>0&&!this.renderingRule?a.bandIds=l.join(","):a.bandIds=void 0,null!=l&&l.length&&this.renderingRule)if("Colormap"===m.rasterFunction){const e=new N({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:m.rasterFunctionArguments.Raster}});m.rasterFunctionArguments.Raster=e}else{m=new N({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:m}})}p instanceof Array&&p.length>0&&(a.noData=p.join(","));const c=this.timeInfo;u&&u.multidimensionalDefinition&&i&&c&&c.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter((e=>e.dimensionName!==c.startField))),a.mosaicRule=u&&JSON.stringify(u),a.renderingRule=m&&JSON.stringify(m);const d={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...a,...d}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new S("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=u(oe,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),te(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new S("imagery-layer:query-rasters","query operation is not supported on the input image service");e=u(se,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r);return new ae({url:this.url}).execute(e,this._getRequestOptions(t))}async queryRasters(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new S("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=u(ne,e),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new S("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:o,returnTopmostRaster:n,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let l=!1,p=null,u=null;const m="raster.servicepixelvalue",c=this.rasterFunctionNamesIndex;if(s(e.outFields)&&(l=e.outFields.some((e=>-1===e.toLowerCase().indexOf(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(m)>-1&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));p=t.map((e=>new N({functionName:e[0]}))),u=t.map((e=>e[1])),0===p.length?this.renderingRule?(p.push(this.renderingRule),u.push(this.renderingRule.functionName)):p=null:this.renderingRule&&!p.some((e=>e.functionName===this.renderingRule.functionName))&&(p.push(this.renderingRule),u.push(this.renderingRule.functionName))}const d=i(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),h=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent||this.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:p,pixelSize:r,returnCatalogItems:l,returnGeometry:d,raster:this.raster,maxItemCount:n?1:null});delete h.f;const y=new se(h),f=new ae({url:this.url}),g=this.generateRasterInfo(this.renderingRule);return new Promise((r=>{g.then((()=>{f.execute(y,{signal:null==t?void 0:t.signal,query:{...this.customParameters}}).then((t=>{const i=e.outFields;if(l&&!d&&t.catalogItems&&t.catalogItems.features&&t.catalogItems.features.length>0){const s=this.objectIdField||"ObjectId",n=t.catalogItems.features,l=n.map((e=>e.attributes&&e.attributes[s])),p=new ne({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[s]});return this.queryRasters(p).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{n.forEach((r=>{r.attributes[s]===t.attributes[s]&&(r.geometry=new ce(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),r(this._processVisibleRastersResponse(t,{returnDomainValues:o,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:i}))})).catch((()=>{throw new S("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}r(this._processVisibleRastersResponse(t,{returnDomainValues:o,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:i}))})).catch((()=>{throw new S("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))}async fetchVariableStatisticsHistograms(e,t){const r=j(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=j(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),s(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=s(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Promise.all([r,i]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,Ne.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=s(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new B;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||X(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await j(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new S("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isVectorFieldResampleFunction(e){if(!s(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),o=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===o||10===o)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Y(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;if(!this.renderer)this.renderer=K(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName});this._symbolizer?(this._symbolizer.rendererJSON=Z(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new H({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):G(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await j(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new S("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,s=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&j(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>re.fromJSON(e.data))).catch((()=>null)),o=!!(t.hasColormap&&this.version>=10.1)&&j(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),n=!!(t.hasHistograms&&this.version>=10.1)&&j(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=this.version>=10.3&&j(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([s,o,n,a,l]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),o=pe.fromJSON(t.spatialReference||t.extent.spatialReference);return new Q({width:i,height:s,bandCount:t.bandCount,extent:ue.fromJSON(t.extent),spatialReference:o,pixelSize:new me({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:o}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return j(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const s=this._initJobHandler(),o=j(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([o,s]).then((e=>{const r=e[0].data,s=t.format||"jpgpng";let o=s;if("bsq"!==o&&"bip"!==o&&(o=W(r)),!o){throw new S("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)))}const n="gif"===s||"bmp"===s||s.indexOf("png")>-1&&("png"===o||"jpg"===o),a={signal:i};return n?G(r,{useCanvas:!0,...t},a).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:s},a).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await j(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],s=i.extent;let o=!0,n=[s[0]];i.hasRanges&&!0===i.hasRanges?(o=!1,n=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(s[1])<=Math.abs(s[0])&&(n=[s[1]]),r.push(new O({variableName:"",dimensionName:t[e].name,isSlice:o,values:n}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new L;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:o,returnDomainValues:n,templateFields:a}=t,l=e.processedValues;let p=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const m=this.objectIdField||"ObjectId",c="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,d=[];if(r&&!p&&!c){const e={};e[m]=0;u=[r],p=[new g(this.fullExtent,null,e)]}if(!p)return[];let h,y,f;this._updateResponseFieldNames(p,a),c&&!o&&(p=[]);for(let e=0;e<p.length;e++){if(h=p[e],null!=r&&!c){if(y=u[e],f=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!o)continue;const t="Raster.ItemPixelValue",n="Raster.ServicePixelValue";h.attributes[t]=this._formatAttributeValue(y,t),h.attributes[n]=this._formatAttributeValue(f,n),this._updateFeatureWithMagDirValues(h,y);const a=this.fields&&this.fields.length>0;let p=this.renderingRule&&s(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?y:r:f;this.renderingRule||(p=a?y:r),this._updateFeatureWithRasterAttributeTableValues(h,p)}if(h.sourceLayer=this,n&&this._updateFeatureWithDomainValues(h),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];h.attributes[t]=this._formatAttributeValue(l[e],t)}d.push(p[e])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||s(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const o=r.fields,n=o.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),a=n&&n[0];if(!a)return;const l=i.filter((e=>e.attributes[a]===(null!=t?parseInt(t,10):null)));l&&l[0]&&o.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),o=new E({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});this.pixelFilter({pixelBlock:o,extent:new ue(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=o.pixels[0][0],e.attributes["Raster.Direction"]=o.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,o=t.indexOf("image")>-1,n="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:o,supportsExportImage:o,supportsIdentify:o,supportsMeasure:t.indexOf("mensuration")>-1&&a,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&o,supportsProject:r>=10.3&&o,supportsComputeStatisticsHistograms:r>=10.4&&o,supportsQueryBoundary:r>=10.6&&o,supportsCalculateVolume:r>=10.7&&n,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:s}}}};return e([l()],o.prototype,"_functionRasterInfos",void 0),e([l()],o.prototype,"_rasterJobHandler",void 0),e([l()],o.prototype,"_symbolizer",void 0),e([l()],o.prototype,"_defaultServiceMosaicRule",void 0),e([P("_defaultServiceMosaicRule",["defaultMosaicMethod"])],o.prototype,"readDefaultServiceMosaicRule",null),e([l()],o.prototype,"_cachedRendererJson",void 0),e([l()],o.prototype,"rasterAttributeTableFieldPrefix",void 0),e([l({readOnly:!0})],o.prototype,"rasterFunctionNamesIndex",null),e([l({readOnly:!0})],o.prototype,"queryTask",null),e([l()],o.prototype,"adjustAspectRatio",void 0),e([l({readOnly:!0}),w("serviceRasterInfo.bandCount")],o.prototype,"bandCount",void 0),e([l({type:[m],json:{write:!0}})],o.prototype,"bandIds",void 0),e([P("bandIds")],o.prototype,"readBandIds",null),e([l({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",void 0),e([P("service","capabilities",["capabilities","currentVersion","serviceDataType"])],o.prototype,"readCapabilities",null),e([l({type:Number})],o.prototype,"compressionQuality",void 0),e([y("compressionQuality")],o.prototype,"writeCompressionQuality",null),e([l({type:Number})],o.prototype,"compressionTolerance",void 0),e([y("compressionTolerance")],o.prototype,"writeCompressionTolerance",null),e([l({json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),e([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),e([l({readOnly:!0,constructOnly:!0})],o.prototype,"exportImageServiceParameters",void 0),e([l()],o.prototype,"rasterInfo",void 0),e([l({readOnly:!0,type:[z]})],o.prototype,"fields",void 0),e([l({readOnly:!0})],o.prototype,"fieldsIndex",null),e([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],o.prototype,"format",null),e([P("service","format",["serviceDataType"])],o.prototype,"readFormat",null),e([l({type:ue})],o.prototype,"fullExtent",void 0),e([l({readOnly:!0})],o.prototype,"hasMultidimensions",void 0),e([l({json:{read:{source:"maxImageHeight"}}})],o.prototype,"imageMaxHeight",void 0),e([l({json:{read:{source:"maxImageWidth"}}})],o.prototype,"imageMaxWidth",void 0),e([l({type:String,json:{type:J.jsonValues,read:J.read,write:J.write}})],o.prototype,"interpolation",void 0),e([l()],o.prototype,"minScale",void 0),e([P("service","minScale")],o.prototype,"readMinScale",null),e([l()],o.prototype,"maxScale",void 0),e([P("service","maxScale")],o.prototype,"readMaxScale",null),e([l({type:L})],o.prototype,"mosaicRule",null),e([P("mosaicRule",["mosaicRule","defaultMosaicMethod"])],o.prototype,"readMosaicRule",null),e([y("mosaicRule")],o.prototype,"writeMosaicRule",null),e([l({readOnly:!0}),w("serviceRasterInfo.multidimensionalInfo")],o.prototype,"multidimensionalInfo",void 0),e([l({json:{type:m}})],o.prototype,"noData",void 0),e([y("noData")],o.prototype,"writeNoData",null),e([l({type:String,json:{type:U.jsonValues,read:U.read,write:U.write}})],o.prototype,"noDataInterpretation",void 0),e([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],o.prototype,"objectIdField",void 0),e([P("objectIdField")],o.prototype,"readObjectIdField",null),e([l({readOnly:!0})],o.prototype,"parsedUrl",null),e([l({readOnly:!0}),w("serviceRasterInfo.pixelSize.x")],o.prototype,"pixelSizeX",void 0),e([l({readOnly:!0}),w("serviceRasterInfo.pixelSize.y")],o.prototype,"pixelSizeY",void 0),e([l({type:Function})],o.prototype,"pixelFilter",void 0),e([l()],o.prototype,"raster",void 0),e([l()],o.prototype,"viewId",void 0),e([l({types:R,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:v,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],o.prototype,"renderer",void 0),e([P("renderer")],o.prototype,"readRenderer",null),e([y("renderer")],o.prototype,"writeRenderer",null),e([l(_)],o.prototype,"opacity",void 0),e([l({readOnly:!0}),w("serviceRasterInfo.attributeTable")],o.prototype,"rasterAttributeTable",void 0),e([l({readOnly:!0})],o.prototype,"rasterFields",null),e([l({readOnly:!0})],o.prototype,"rasterFunctionInfos",void 0),e([l({type:N})],o.prototype,"renderingRule",null),e([P("renderingRule",["renderingRule","rasterFunctionInfos"])],o.prototype,"readRenderingRule",null),e([y("renderingRule")],o.prototype,"writeRenderingRule",null),e([l()],o.prototype,"serviceDataType",void 0),e([l({readOnly:!0,type:pe})],o.prototype,"spatialReference",void 0),e([P("spatialReference",["spatialReference","extent"])],o.prototype,"readSpatialReference",null),e([l({json:{type:Fe.jsonValues}})],o.prototype,"pixelType",void 0),e([P("pixelType")],o.prototype,"readPixelType",null),e([y("pixelType")],o.prototype,"writePixelType",null),e([l({constructOnly:!0,type:Q})],o.prototype,"serviceRasterInfo",void 0),e([l()],o.prototype,"sourceJSON",void 0),e([l(T)],o.prototype,"url",void 0),e([l({readOnly:!0})],o.prototype,"version",void 0),e([P("version",["currentVersion","fields","timeInfo"])],o.prototype,"readVersion",null),o=e([h("esri.layers.mixins.ArcGISImageService")],o),o};let Le=class extends(he(ve(be(Re(fe(ge(Ae(ye(de(o(f))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=s(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(a).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const s="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=s?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let s=!1,o=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,o=s&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const n=new Set;s&&(n.add("raster.itempixelvalue"),o&&n.add("raster.magnitude").add("raster.direction"));for(const e of t){const t=e.name.toLowerCase();n.has(t)||t.indexOf("raster.servicepixelvalue.")>-1||i.add(e.name)}return je({fields:t,title:r},{...e,visibleFieldNames:i})}redraw(){this.emit("redraw")}};e([l(C)],Le.prototype,"legendEnabled",void 0),e([l({type:["show","hide"]})],Le.prototype,"listMode",void 0),e([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Le.prototype,"isReference",void 0),e([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Le.prototype,"operationalLayerType",void 0),e([y("web-map","operationalLayerType")],Le.prototype,"writeOperationalLayerType",null),e([l(k)],Le.prototype,"popupEnabled",void 0),e([l({type:t,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Le.prototype,"popupTemplate",void 0),e([l({readOnly:!0})],Le.prototype,"defaultPopupTemplate",null),e([l({readOnly:!0,json:{read:!1}})],Le.prototype,"type",void 0),Le=e([h("esri.layers.ImageryLayer")],Le);var Je=Le;export default Je;
