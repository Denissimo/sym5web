/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../PopupTemplate.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/DictionaryRenderer.js";import"../renderers/DotDensityRenderer.js";import"../renderers/HeatmapRenderer.js";import"../renderers/Renderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import{w as r}from"../renderers/support/jsonUtils.js";import s from"../request.js";import o from"../core/Error.js";import{L as i}from"../chunks/Logger.js";import{i as n,b as p}from"../core/lang.js";import{M as a}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAbortError as l,isAbortError as m}from"../core/promiseUtils.js";import{join as u}from"../core/urlUtils.js";import{whenValidOnce as d}from"../core/watchUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import{g as y}from"../chunks/metadata.js";import"../chunks/ensureType.js";import{r as h}from"../chunks/reader.js";import{subclass as j}from"../core/accessorSupport/decorators/subclass.js";import f from"./Layer.js";import{A as b}from"../chunks/APIKeyMixin.js";import{A as g}from"../chunks/ArcGISService.js";import{O as I}from"../chunks/OperationalLayer.js";import{P as v}from"../chunks/PortalLayer.js";import{S}from"../chunks/ScaleRangeLayer.js";import{S as k}from"../chunks/SceneService.js";import{z as L}from"../chunks/capabilities.js";import{e as w,l as F,b as U,p as P,d as D}from"../chunks/commonProperties2.js";import O,{F as T}from"./support/FeatureReductionSelection.js";import{F as E}from"../chunks/FetchAssociatedFeatureLayer.js";import{d as x}from"../chunks/fieldProperties.js";import R from"./support/FieldsIndex.js";import{fixRendererFields as C}from"./support/fieldUtils.js";import{I as A,a as _,b as M,c as V}from"../chunks/I3SLayerDefinitions.js";import Q from"./support/LabelClass.js";import{r as q}from"../chunks/labelingInfo.js";import N from"./support/LayerFloorInfo.js";import{a as G}from"../chunks/JSONSupport.js";import{l as B}from"../chunks/styleUtils2.js";import z from"../rest/support/Query.js";import{createPopupTemplate as K}from"../support/popupUtils.js";import{t as J}from"../chunks/opacityUtils.js";import"../core/Collection.js";import"../chunks/ArrayPool.js";import"../chunks/Evented.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/arrayUtils.js";import"../core/scheduling.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/Message.js";import"../chunks/handleUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/writer.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../chunks/write.js";import"../popup/content/CustomContent.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../chunks/jsonMap.js";import"../chunks/enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/number.js";import"../chunks/locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../chunks/chartMediaInfoUtils.js";import"../chunks/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"../chunks/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/arcadeOnDemand.js";import"../geometry.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/colors.js";import"../chunks/Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../intl.js";import"../chunks/assets.js";import"../kernel.js";import"../chunks/Loadable.js";import"../chunks/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../chunks/Thumbnail.js";import"../chunks/Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../chunks/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../Graphic.js";import"../chunks/uid.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../renderers/support/ClassBreakInfo.js";import"../symbols/support/jsonUtils.js";import"../chunks/symbolConversion.js";import"../chunks/commonProperties.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/support/HeatmapColorStop.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../chunks/devEnvironmentUtils.js";import"../chunks/ReadOnlyMultiOriginJSONSupport.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/asyncUtils.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/originUtils.js";import"../chunks/multiOriginJSONSupportUtils.js";import"../geometry/HeightModelInfo.js";import"../chunks/I3SIndexInfo.js";import"../chunks/saveUtils.js";import"../chunks/uuid.js";import"../chunks/resourceUtils.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"./FeatureLayer.js";import"../core/Handles.js";import"../form/FormTemplate.js";import"../form/ExpressionInfo.js";import"../form/elements/GroupElement.js";import"../form/elements/FieldElement.js";import"../form/elements/support/inputs.js";import"../form/elements/inputs/BarcodeScannerInput.js";import"../form/elements/inputs/TextInput.js";import"../form/elements/inputs/Input.js";import"../form/elements/inputs/ComboBoxInput.js";import"../form/elements/inputs/DateTimePickerInput.js";import"../form/elements/inputs/RadioButtonsInput.js";import"../form/elements/inputs/SwitchInput.js";import"../form/elements/inputs/TextAreaInput.js";import"../form/elements/inputs/TextBoxInput.js";import"../form/support/elements.js";import"../chunks/FeatureIndex.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"../chunks/shared.js";import"../chunks/queryZScale.js";import"../chunks/zscale.js";import"../rest/support/FeatureSet.js";import"./support/Field.js";import"../chunks/fieldType.js";import"../chunks/BlendLayer.js";import"../chunks/CustomParametersMixin.js";import"../chunks/RefreshableLayer.js";import"../chunks/TemporalLayer.js";import"../TimeInterval.js";import"./support/TimeInfo.js";import"./support/FeatureReductionCluster.js";import"../chunks/labelUtils.js";import"../chunks/defaults.js";import"../chunks/defaultsJSON.js";import"../chunks/featureReductionUtils.js";import"./support/FeatureTemplate.js";import"./support/FeatureType.js";import"./support/GeometryFieldsInfo.js";import"./support/Relationship.js";import"../chunks/DataLayerSource.js";import"../rest/support/AttachmentQuery.js";import"../rest/support/RelationshipQuery.js";import"../rest/support/TopFeaturesQuery.js";import"../rest/support/TopFilter.js";import"../rest/support/StatisticDefinition.js";let W=class extends G{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};e([c({type:String,json:{read:!0,write:!0}})],W.prototype,"name",void 0),e([c({type:String,json:{read:!0,write:!0}})],W.prototype,"field",void 0),e([c({type:[Number],json:{read:!0,write:!0}})],W.prototype,"currentRangeExtent",void 0),e([c({type:[Number],json:{read:!0,write:!0}})],W.prototype,"fullRangeExtent",void 0),e([c({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],W.prototype,"type",void 0),W=e([j("esri.layers.support.RangeInfo")],W);var H=W;const $=["3DObject","Point"],Z=i.getLogger("esri.layers.SceneLayer"),X=x();let Y=class extends(k(g(I(v(S(a(b(f)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r,s,o,i;const n=null==(r=this.getFeatureType(null==t?void 0:t.feature))||null==(s=r.domains)?void 0:s[e];return n&&"inherited"!==n.type?n:null!=(o=null==(i=this.getField(e))?void 0:i.domain)?o:null}getFeatureType(e){return e&&n(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return n(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return n(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return n(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new R(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:A.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return te[this.profile]||"mesh"}set renderer(e){C(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=n(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:L,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:s,supportsUploadWithItemId:o,supportsReturnServiceEditsInSourceSpatialReference:i},data:{supportsZ:p,supportsM:a,isVersioned:l,supportsAttachment:m},operations:{supportsEditing:u,supportsUpdate:d,supportsQuery:c,supportsQueryAttachments:y}}=e,h=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:i,supportsRollbackOnFailure:s,supportsGeometryUpdate:!1,supportsUploadWithItemId:o},data:{supportsAttachment:m,supportsZ:p,supportsM:a,isVersioned:l},operations:{supportsQuery:c,supportsQueryAttachments:y,supportsEditing:u&&h,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&h}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){null!=e?this._override("editingEnabled",e):this._clearOverride("editingEnabled")}get defaultPopupTemplate(){return n(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return n(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&ee[r]?ee[r]:(Z.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=n(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(l).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>B(this,{origin:"service"},t))).then((()=>C(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new z;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(Z.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return K(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return n(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),p(this.associatedLayer))throw new o("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new o("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new o("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new o("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=u(this.parsedUrl.path,e.href);return s(r,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new o("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const r=await import("../chunks/editingSupport.js");if(await this.load(),p(this.associatedLayer))throw new o(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),r.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===$.indexOf(e.layerType))throw new o("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new o("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new o("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,s=!1;if(null==e)r=!0,s=!0;else{const o=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,s=o;break;case"vertex-reference-frame":r=!0,s=!o;break;default:r=!1}}if(!r)throw new o("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!s)throw new o("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new o("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!(n(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),s={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=s}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(p(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(p(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=y(this);for(let r=0;r<e.length;r++){const s=e[r],o=this.originIdOf(s),i=this.associatedLayer.originIdOf(s);o<i&&(2===i||3===i)&&t.setAtOrigin(s,this.associatedLayer[s],i)}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new E(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(e){m(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){d(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?Z.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):Z.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&Z.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&Z.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};e([c({types:{key:"type",base:T,typeMap:{selection:O}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],Y.prototype,"featureReduction",void 0),e([c({type:[H],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],Y.prototype,"rangeInfos",void 0),e([c({json:{read:!1}})],Y.prototype,"associatedLayer",void 0),e([c({type:["show","hide"]})],Y.prototype,"listMode",void 0),e([c({type:["ArcGISSceneServiceLayer"]})],Y.prototype,"operationalLayerType",void 0),e([c({json:{read:!1},readOnly:!0})],Y.prototype,"type",void 0),e([c({...X.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Y.prototype,"fields",void 0),e([c()],Y.prototype,"types",null),e([c()],Y.prototype,"typeIdField",null),e([c()],Y.prototype,"formTemplate",null),e([c({readOnly:!0})],Y.prototype,"fieldsIndex",null),e([c({type:N,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],Y.prototype,"floorInfo",void 0),e([c(X.outFields)],Y.prototype,"outFields",void 0),e([c({type:A,readOnly:!0,json:{read:!1}})],Y.prototype,"nodePages",void 0),e([h("service","nodePages",["nodePages","pointNodePages"])],Y.prototype,"readNodePages",null),e([c({type:[_],readOnly:!0})],Y.prototype,"materialDefinitions",void 0),e([c({type:[M],readOnly:!0})],Y.prototype,"textureSetDefinitions",void 0),e([c({type:[V],readOnly:!0})],Y.prototype,"geometryDefinitions",void 0),e([c({readOnly:!0})],Y.prototype,"serviceUpdateTimeStamp",void 0),e([c({readOnly:!0})],Y.prototype,"attributeStorageInfo",void 0),e([c({readOnly:!0})],Y.prototype,"statisticsInfo",void 0),e([c({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Y.prototype,"definitionExpression",void 0),e([c({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Y.prototype,"path",void 0),e([c(w)],Y.prototype,"elevationInfo",null),e([c({type:String})],Y.prototype,"geometryType",null),e([c(F)],Y.prototype,"labelsVisible",void 0),e([c({type:[Q],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:q},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:q},write:!0}})],Y.prototype,"labelingInfo",void 0),e([c(U)],Y.prototype,"legendEnabled",void 0),e([c({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var r,s;if("number"==typeof e&&e>=0&&e<=1)return e;const o=null==(r=t.layerDefinition)||null==(s=r.drawingInfo)?void 0:s.transparency;return void 0!==o?J(o):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],Y.prototype,"opacity",void 0),e([c({types:r,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],Y.prototype,"renderer",null),e([c({json:{read:!1}})],Y.prototype,"cachedDrawingInfo",void 0),e([h("service","cachedDrawingInfo")],Y.prototype,"readCachedDrawingInfo",null),e([c({readOnly:!0,json:{read:!1}})],Y.prototype,"capabilities",null),e([c({type:Boolean,json:{read:!1}})],Y.prototype,"editingEnabled",null),e([c(P)],Y.prototype,"popupEnabled",void 0),e([c({type:t,json:{name:"popupInfo",write:!0}})],Y.prototype,"popupTemplate",void 0),e([c({readOnly:!0,json:{read:!1}})],Y.prototype,"defaultPopupTemplate",null),e([c({type:String,json:{read:!1}})],Y.prototype,"objectIdField",void 0),e([h("service","objectIdField",["objectIdField","fields"])],Y.prototype,"readObjectIdField",null),e([c({type:String,json:{read:!1}})],Y.prototype,"globalIdField",void 0),e([h("service","globalIdField",["globalIdField","fields"])],Y.prototype,"readGlobalIdField",null),e([c({readOnly:!0,type:String,json:{read:!1}})],Y.prototype,"displayField",null),e([c({type:String,json:{read:!1}})],Y.prototype,"profile",void 0),e([h("service","profile",["store.profile"])],Y.prototype,"readProfile",null),e([c({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],Y.prototype,"normalReferenceFrame",void 0),e([c(D)],Y.prototype,"screenSizePerspectiveEnabled",void 0),Y=e([j("esri.layers.SceneLayer")],Y);const ee={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},te={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var re=Y;export default re;
