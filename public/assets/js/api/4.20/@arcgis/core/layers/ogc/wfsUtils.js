/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/_rollupPluginBabelHelpers.js";import"../../geometry.js";import t from"../../request.js";import r from"../../core/Error.js";import{b as n,i as o}from"../../core/lang.js";import{eachAlways as s}from"../../core/promiseUtils.js";import{isHTTPSProtocol as i,hasSameOrigin as a,toHTTPS as u}from"../../core/urlUtils.js";import{initializeProjection as p,project as l}from"../../geometry/projection.js";import c,{e as m,W as f}from"../../geometry/SpatialReference.js";import{f as y}from"../../chunks/typeUtils.js";import{g as d}from"../../chunks/geojson.js";import g from"../support/Field.js";import h from"../../geometry/Extent.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../geometry/Geometry.js";import"../../chunks/tslib.es6.js";import"../../chunks/JSONSupport.js";import"../../core/Accessor.js";import"../../chunks/deprecate.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/metadata.js";import"../../chunks/handleUtils.js";import"../../chunks/ArrayPool.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Message.js";import"../../chunks/arrayUtils.js";import"../../core/scheduling.js";import"../../chunks/write.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Multipoint.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/jsonMap.js";import"../../kernel.js";import"../../chunks/mathUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/OptimizedFeature.js";import"../../chunks/enumeration.js";import"../../chunks/domains.js";import"../support/CodedValueDomain.js";import"../support/Domain.js";import"../support/InheritedDomain.js";import"../support/RangeDomain.js";import"../../chunks/fieldType.js";function w(e,t){for(const r of e)if(null!=r&&t(r))return r}function b(e){var t;return null!=(t=function(e){var t,r,n,o;const s=j.exec(e);if(!s)return null;const i=s.groups,a=+i.year,u=+i.month-1,p=+i.day,l=+(null!=(t=i.hours)?t:"0"),c=+(null!=(r=i.minutes)?r:"0"),m=+(null!=(n=i.seconds)?n:"0");if(l>23)return null;if(c>59)return null;if(m>59)return null;const f=null!=(o=i.ms)?o:"0",y=f?+f.padEnd(3,"0").substring(0,3):0;let d;if(i.isUTC)d=Date.UTC(a,u,p,l,c,m,y);else if(i.offsetSign){const e=+i.offsetHours,t=+i.offsetMinutes;d=6e4*("+"===i.offsetSign?-1:1)*(60*e+t)+Date.UTC(a,u,p,l,c,m,y)}else d=new Date(a,u,p,l,c,m,y).getTime();return Number.isNaN(d)?null:d}(e))?t:function(e){const t=new Date(e).getTime();return Number.isNaN(t)?null:t}(e)}const j=e(/^(?:(\x2D?[0-9]{4,})\x2D([0-9]{2})\x2D([0-9]{2}))(?:T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\.([0-9]+))?)?(?:(Z)|(?:(\+|\x2D)([0-9]{2}):([0-9]{2})))?$/,{year:1,month:2,day:3,hours:4,minutes:5,seconds:6,ms:7,isUTC:8,offsetSign:9,offsetHours:10,offsetMinutes:11});function T(e,t){for(const r of e.children)if(r.localName in t){const e=t[r.localName];if("function"==typeof e){const t=e(r);t&&T(r,t)}else T(r,e)}}function*S(e,t){for(const r of e.children)if(r.localName in t){const e=t[r.localName];"function"==typeof e?yield e(r):yield*S(r,e)}}const k="__esri_wfs_id__";async function F(e,r){const n=x((await t(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...null==r?void 0:r.customParameters},signal:null==r?void 0:r.signal})).data);return function(e,t){if(!i(e))return;a(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=u(t.operations.DescribeFeatureType.url));a(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=u(t.operations.GetFeature.url))}(e,n),n}function x(e){const t=L(e);!function(e){const t=e.firstElementChild.getAttribute("version");if(!t)return;if("2.0.0"!==t)throw new r("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${t}. Supported version: 2.0.0`)}(t),$(t);const n=t.firstElementChild,o=new Map;return{operations:v(n),get featureTypes(){return Array.from(E(n,o))},readFeatureTypes:()=>E(n,o)}}const C=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function v(e){let t=!1;const o={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(T(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{o.GetCapabilities.url=e.getAttribute("xlink:href")}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{o.DescribeFeatureType.url=e.getAttribute("xlink:href")}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{o.GetFeature.url=e.getAttribute("xlink:href")}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;C.has(t.toLowerCase())&&(o.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{o.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!t)throw new r("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(n(o.GetFeature.outputFormat))throw new r("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return o}function E(t,r){return S(t,{FeatureTypeList:{FeatureType:t=>{if(r.has(t))return r.get(t);const n={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},o=new Set([4326]),s=t=>{var r,n;const s=parseInt(null==(r=t.textContent.match(e(/([0-9]+$)/i,{wkid:1})))||null==(n=r.groups)?void 0:n.wkid,10);Number.isNaN(s)||o.add(s)};return T(t,{Name:e=>{const{name:t,prefix:r}=V(e.textContent);n.typeName=`${r}:${t}`,n.name=t,n.namespacePrefix=r,n.namespaceUri=e.lookupNamespaceURI(r)},Abstract:e=>{n.description=e.textContent},Title:e=>{n.title=e.textContent},WGS84BoundingBox:e=>{n.extent=function(e){let t,r,n,o;for(const s of e.children)switch(s.localName){case"LowerCorner":[t,r]=s.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[n,o]=s.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:o,spatialReference:f}}(e)},DefaultSRS:s,DefaultCRS:s,OtherSRS:s,OtherCRS:s}),n.title||(n.title=n.name),n.supportedSpatialReferences.push(...o),r.set(t,n),n}}})}function N(e,t,r){return w(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function P(e,t,o,i={}){var a;const{featureType:u,extent:p}=await R(e,t,o,i),{fields:l,geometryType:m,swapXY:f,objectIdField:y,geometryField:d}=await async function(e,t,o={}){const[i,a]=await s([G(e.operations.DescribeFeatureType.url,t,o),A(e,t,o)]);if(i.error||a.error)throw new r("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${t}'`,{error:i.error||a.error});const{fields:u,errors:p}=i.value,l=i.value.geometryType||a.value.geometryType,c=a.value.swapXY;if(n(l))throw new r("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${t}`,{typeName:t,geometryType:l,fields:u,errors:p});return{...U(u),geometryType:l,swapXY:c}}(e,u.typeName,i);return{url:e.operations.GetCapabilities.url,name:u.name,namespaceUri:u.namespaceUri,fields:l,geometryField:d,geometryType:m,objectIdField:y,spatialReference:null!=(a=i.spatialReference)?a:c.WGS84,extent:p,swapXY:f,wfsCapabilities:e,customParameters:i.customParameters}}async function R(e,t,o,s={}){const{spatialReference:i=c.WGS84}=s,a=e.readFeatureTypes(),u=t?N(a,t,o):a.next().value;if(n(u))throw t?new r("wfs-layer:feature-type-not-found",`The type '${t}' could not be found in the service`):new r("wfs-layer:empty-service","The service is empty");let y=new h({...u.extent,spatialReference:i});if(!m(i,f))try{await p(f,i,void 0,s),y=l(y,f)}catch{throw new r("wfs-layer:unsupported-spatial-reference","Projection not supported")}return{extent:y,spatialReference:i,featureType:u}}function U(e){var t;const r=e.find((e=>"geometry"===e.type));let n=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),n||(n=new g({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),e.unshift(n)),{geometryField:null!=(t=null==r?void 0:r.name)?t:null,objectIdField:n.name,fields:e}}async function A(e,r,n={}){var o;let s,i=!1;const[a,u]=await Promise.all([_(e.operations.GetFeature.url,r,e.operations.GetFeature.outputFormat,{...n,count:1}),t(e.operations.GetFeature.url,{responseType:"text",query:I(r,void 0,{...n,count:1}),signal:null==n?void 0:n.signal})]),p="FeatureCollection"===a.type&&(null==(o=a.features[0])?void 0:o.geometry);if(p){let e;switch(s=y.fromJSON(d(p.type)),p.type){case"Point":e=p.coordinates;break;case"LineString":case"MultiPoint":e=p.coordinates[0];break;case"MultiLineString":case"Polygon":e=p.coordinates[0][0];break;case"MultiPolygon":e=p.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(u.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),o=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===o&&(i=!0)}}return{geometryType:s,swapXY:i}}async function G(e,r,n){return D(r,(await t(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:r,...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data)}function D(e,t){const{name:n}=V(e),s=L(t);$(s);const i=w(S(s.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:V(e.getAttribute("type")).name})}),(({name:e})=>e===n));if(o(i)){const e=w(S(s.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===i.typeName));if(o(e))return function(e){var t,n;const o=[],s=[];let i;const a=S(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const u of a){const a=u.getAttribute("name");if(!a)continue;let p,l;if(u.hasAttribute("type")?p=V(u.getAttribute("type")).name:T(u,{simpleType:{restriction:e=>(p=V(e.getAttribute("base")).name,{maxLength:e=>{l=+e.getAttribute("value")}})}}),!p)continue;const c="true"===u.getAttribute("nillable");let m=!1;switch(p.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":s.push(new g({name:a,alias:a,type:"integer",nullable:c}));break;case"float":case"double":case"decimal":s.push(new g({name:a,alias:a,type:"double",nullable:c}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":s.push(new g({name:a,alias:a,type:"string",nullable:c,length:null!=(t=l)?t:255}));break;case"datetime":case"date":s.push(new g({name:a,alias:a,type:"date",nullable:c,length:null!=(n=l)?n:36}));break;case"pointpropertytype":i="point",m=!0;break;case"multipointpropertytype":i="multipoint",m=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":i="polyline",m=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":i="polygon",m=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":m=!0,o.push(new r("wfs-layer:unknown-geometry-type",`geometry type '${p}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:o.push(new r("wfs-layer:unknown-field-type",`Unknown field type '${p}'`,{type:(new XMLSerializer).serializeToString(e)}))}m&&s.push(new g({name:a,alias:a,type:"geometry",nullable:c}))}for(const e of s)if("integer"===e.type&&!e.nullable&&M.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:i,fields:s,errors:o}}(e)}throw new r("wfs-layer:feature-type-not-found",`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(s)})}const M=new Set(["objectid","fid"]);async function _(e,n,o,s){let{data:i}=await t(e,{responseType:"text",query:I(n,o,s),signal:null==s?void 0:s.signal});i=i.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{var a;if(null!=s&&null!=(a=s.dateFields)&&a.length){const e=new Set(s.dateFields);return JSON.parse(i,((t,r)=>e.has(t)?b(r):r))}return JSON.parse(i)}catch(e){throw new r("wfs-layer:malformed-json","Error while parsing the response",{response:i,error:e})}}function I(e,t,r){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:null==r?void 0:r.startIndex,COUNT:null==r?void 0:r.count,...null==r?void 0:r.customParameters}}async function O(e,r,n){const o=L((await t(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:r,RESULTTYPE:"hits",...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data);$(o);const s=Number.parseFloat(o.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(s)?0:s}function L(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function V(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:null!=r?r:t}}function $(e){let t,n;if(T(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),t)throw new r(`wfs-layer:${t}`,n)}export{k as WFS_OID_FIELD_NAME,G as describeFeatureType,N as findFeatureType,F as getCapabilities,_ as getFeature,O as getFeatureCount,R as getFeatureTypeInfo,P as getWFSLayerInfo,D as parseDescribeFeatureTypeResponse,x as parseGetCapabilitiesResponse,U as prepareWFSLayerFields};
