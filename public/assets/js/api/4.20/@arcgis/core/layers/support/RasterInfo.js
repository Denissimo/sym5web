/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{a as o}from"../../chunks/JSONSupport.js";import{i as e}from"../../core/lang.js";import{property as i}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import s from"../../geometry/Extent.js";import p from"../../geometry/SpatialReference.js";import n from"../../geometry/Point.js";import"../../core/Accessor.js";import"../../chunks/deprecate.js";import"../../chunks/metadata.js";import"../../chunks/handleUtils.js";import"../../chunks/ArrayPool.js";import"../../chunks/arrayUtils.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/Message.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/write.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../core/accessorSupport/decorators/cast.js";let l=class extends o{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null}};t([i({type:Number,json:{write:!0}})],l.prototype,"blockWidth",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"blockHeight",void 0),t([i({type:String,json:{write:!0}})],l.prototype,"compression",void 0),t([i({type:n,json:{write:!0}})],l.prototype,"origin",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"firstPyramidLevel",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"maximumPyramidLevel",void 0),t([i({json:{write:!0}})],l.prototype,"pyramidResolutions",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"pyramidScalingFactor",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"pyramidBlockWidth",void 0),t([i({type:Number,json:{write:!0}})],l.prototype,"pyramidBlockHeight",void 0),t([i({type:Boolean,json:{write:!0}})],l.prototype,"isVirtualTileInfo",void 0),t([i({json:{write:!0}})],l.prototype,"tileInfo",void 0),t([i()],l.prototype,"blockBoundary",void 0),l=t([r("esri.layers.support.RasterStorageInfo")],l);var a=l;let m=class extends o{constructor(t){super(t),this.attributeTable=null,this.bandCount=null,this.colormap=null,this.extent=null,this.format=void 0,this.height=null,this.width=null,this.histograms=null,this.keyProperties={},this.multidimensionalInfo=null,this.noDataValue=null,this.pixelSize=null,this.pixelType=null,this.isPseudoSpatialReference=!1,this.spatialReference=null,this.statistics=null,this.storageInfo=null,this.transform=null}get dataType(){var t,o,e;const i=null!=(t=null==(o=this.keyProperties)||null==(e=o.DataType)?void 0:e.toLowerCase())?t:"generic";return"stdtime"===i?"standard-time":i}get nativeExtent(){return this._get("nativeExtent")||this.extent}set nativeExtent(t){t&&this._set("nativeExtent",t)}get nativePixelSize(){if(!e(this.transform)||!this.transform.affectsPixelSize)return this.pixelSize;const t=this.nativeExtent;return{x:t.width/this.width,y:t.height/this.height}}};t([i({json:{write:!0}})],m.prototype,"attributeTable",void 0),t([i({json:{write:!0}})],m.prototype,"bandCount",void 0),t([i({json:{write:!0}})],m.prototype,"colormap",void 0),t([i({type:String,readOnly:!0})],m.prototype,"dataType",null),t([i({type:s,json:{write:!0}})],m.prototype,"extent",void 0),t([i({type:s,json:{write:!0}})],m.prototype,"nativeExtent",null),t([i({json:{write:!0}})],m.prototype,"nativePixelSize",null),t([i({json:{write:!0}})],m.prototype,"format",void 0),t([i({json:{write:!0}})],m.prototype,"height",void 0),t([i({json:{write:!0}})],m.prototype,"width",void 0),t([i({json:{write:!0}})],m.prototype,"histograms",void 0),t([i({json:{write:!0}})],m.prototype,"keyProperties",void 0),t([i({json:{write:!0}})],m.prototype,"multidimensionalInfo",void 0),t([i()],m.prototype,"noDataValue",void 0),t([i({json:{write:!0}})],m.prototype,"pixelSize",void 0),t([i({json:{write:!0}})],m.prototype,"pixelType",void 0),t([i()],m.prototype,"isPseudoSpatialReference",void 0),t([i({type:p,json:{write:!0}})],m.prototype,"spatialReference",void 0),t([i({json:{write:!0}})],m.prototype,"statistics",void 0),t([i({type:a,json:{write:!0}})],m.prototype,"storageInfo",void 0),t([i({json:{write:!0}})],m.prototype,"transform",void 0),m=t([r("esri.layers.support.RasterInfo")],m);var u=m;export default u;export{a as R};
