/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../PopupTemplate.js";import{read as s,rasterRendererTypes as r,websceneRasterRendererTypes as i}from"../rasterRenderers.js";import o from"../core/Error.js";import{i as n,u as a}from"../core/lang.js";import{M as l}from"../chunks/MultiOriginJSONSupport.js";import{eachAlways as p,createAbortError as u,throwIfAbortError as m}from"../core/promiseUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import{I as f}from"../chunks/ensureType.js";import"../chunks/Logger.js";import{e as h}from"../chunks/enumeration.js";import{r as d}from"../chunks/reader.js";import{subclass as y}from"../core/accessorSupport/decorators/subclass.js";import g from"./Layer.js";import{B as x}from"../chunks/BlendLayer.js";import{C as w}from"../chunks/CustomParametersMixin.js";import{B as v,i as j,g as I,a as b,b as S,c as k,d as T,I as C}from"../chunks/xmlUtilities.js";import{O as R}from"../chunks/OperationalLayer.js";import{P}from"../chunks/PortalLayer.js";import{R as M}from"../chunks/RefreshableLayer.js";import{S as F}from"../chunks/ScaleRangeLayer.js";import{b as _}from"../chunks/commonProperties2.js";import O from"./support/Field.js";import{i as D}from"../chunks/rasterEnums.js";import"../geometry.js";import L,{R as E}from"./support/RasterInfo.js";import U from"./support/TileInfo.js";import{b as A,g as B,i as z,p as N,a as H,T as V,c as G,e as q,f as J}from"../chunks/RasterSymbolizer.js";import{a as W}from"../chunks/JSONSupport.js";import{w as X}from"../chunks/writer.js";import $ from"../geometry/Point.js";import Y from"../geometry/Extent.js";import K from"../rest/support/FeatureSet.js";import Q from"../geometry/SpatialReference.js";import{g as Z,f as ee,h as te,i as se}from"../chunks/pixelUtils.js";import{urlToObject as re}from"../core/urlUtils.js";import{r as ie}from"../chunks/serviceTileInfoProperty.js";import{T as oe}from"../chunks/TilemapCache.js";import ne from"./support/PixelBlock.js";import{createPopupTemplate as ae}from"../support/popupUtils.js";import"../core/Collection.js";import"../chunks/ArrayPool.js";import"../chunks/Evented.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/metadata.js";import"../chunks/handleUtils.js";import"../chunks/arrayUtils.js";import"../core/scheduling.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/Message.js";import"../core/accessorSupport/decorators/cast.js";import"./support/fieldUtils.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"../chunks/jsonMap.js";import"../chunks/write.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/arcadeOnDemand.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../chunks/number.js";import"../chunks/locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../chunks/chartMediaInfoUtils.js";import"../chunks/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"../chunks/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../renderers/ClassBreaksRenderer.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/colors.js";import"../chunks/Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../intl.js";import"../request.js";import"../kernel.js";import"../chunks/assets.js";import"../chunks/Loadable.js";import"../chunks/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../chunks/Thumbnail.js";import"../chunks/Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../chunks/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../chunks/LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../Graphic.js";import"../chunks/uid.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../renderers/support/ClassBreakInfo.js";import"../symbols/support/jsonUtils.js";import"../chunks/symbolConversion.js";import"../chunks/commonProperties.js";import"../renderers/RasterColormapRenderer.js";import"../renderers/support/ColormapInfo.js";import"../chunks/colorRampUtils.js";import"../chunks/colorUtils2.js";import"../renderers/RasterShadedReliefRenderer.js";import"../renderers/RasterStretchRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../chunks/devEnvironmentUtils.js";import"../renderers/VectorFieldRenderer.js";import"../geometry/support/normalizeUtils.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/vectorFieldUtils.js";import"../chunks/utils2.js";import"../chunks/asyncUtils.js";import"../chunks/ItemCache.js";import"../chunks/MemCache.js";import"../symbols/support/cimSymbolUtils.js";import"../chunks/utils3.js";import"../chunks/ReadOnlyMultiOriginJSONSupport.js";import"../chunks/arcgisLayerUrl.js";import"./support/DimensionalDefinition.js";import"../chunks/RasterJobHandler.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"../chunks/rasterRendererHelper.js";import"../chunks/generateRendererUtils.js";import"../chunks/RawBlockCache.js";import"../chunks/rasterProjectionHelper.js";import"../geometry/projection.js";import"../chunks/mat4.js";import"../chunks/pe.js";import"../chunks/aaBoundingRect.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../chunks/fieldType.js";import"./support/LOD.js";import"../chunks/LercCodec.js";import"../core/Handles.js";import"../chunks/LRUCache.js";import"../core/watchUtils.js";let le=class extends W{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(e){return e}inverseTransform(e){return e}};e([c()],le.prototype,"affectsPixelSize",void 0),e([c({json:{write:!0}})],le.prototype,"spatialReference",void 0),le=e([y("esri.layers.support.rasterTransforms.BaseRasterTransform")],le);var pe=le;let ue=class extends pe{constructor(){super(...arguments),this.type="identity"}};e([h({IdentityXform:"identity"})],ue.prototype,"type",void 0),ue=e([y("esri.layers.support.rasterTransforms.IdentityTransform")],ue);var me=ue;function ce(e,t,s){const{x:r,y:i}=t;if(s<2){return{x:e[0]+r*e[2]+i*e[4],y:e[1]+r*e[3]+i*e[5]}}if(2===s){const t=r*r,s=i*i,o=r*i;return{x:e[0]+r*e[2]+i*e[4]+t*e[6]+o*e[8]+s*e[10],y:e[1]+r*e[3]+i*e[5]+t*e[7]+o*e[9]+s*e[11]}}const o=r*r,n=i*i,a=r*i,l=o*r,p=o*i,u=r*n,m=i*n;return{x:e[0]+r*e[2]+i*e[4]+o*e[6]+a*e[8]+n*e[10]+l*e[12]+p*e[14]+u*e[16]+m*e[18],y:e[1]+r*e[3]+i*e[5]+o*e[7]+a*e[9]+n*e[11]+l*e[13]+p*e[15]+u*e[17]+m*e[19]}}function fe(e,t,s){const{xmin:r,ymin:i,xmax:o,ymax:n,spatialReference:a}=t;let l=[];if(s<2)l.push({x:r,y:n}),l.push({x:o,y:n}),l.push({x:r,y:i}),l.push({x:o,y:i});else{let e=10;for(let t=0;t<e;t++)l.push({x:r,y:i+(n-i)*t/(e-1)}),l.push({x:o,y:i+(n-i)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:r+(o-r)*t/e,y:i}),l.push({x:r+(o-r)*t/e,y:n})}l=l.map((t=>ce(e,t,s)));const p=l.map((e=>e.x)),u=l.map((e=>e.y));return new Y({xmin:Math.min.apply(null,p),xmax:Math.max.apply(null,p),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:a})}let he=class extends pe{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:s,coeffY:r}=t;if(null==s||!s.length||null==r||!r.length||s.length!==r.length)return null;const i=[];for(let e=0;e<s.length;e++)i.push(s[e]),i.push(r[e]);return i}writeForwardCoefficients(e,t,s){const r=[],i=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):i.push(e[t]);t.coeffX=r,t.coeffY=i}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,s,r,i,o,n]=e,a=r*n-o*i,l=o*i-r*n;return[(o*s-t*n)/a,(r*s-t*i)/l,n/a,i/l,-o/a,-r/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:s,inverseCoeffY:r}=t;if(null==s||!s.length||null==r||!r.length||s.length!==r.length)return null;const i=[];for(let e=0;e<s.length;e++)i.push(s[e]),i.push(r[e]);return i}writeInverseCoefficients(e,t,s){const r=[],i=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?r.push(e[t]):i.push(e[t]);t.inverseCoeffX=r,t.inverseCoeffY=i}forwardTransform(e){if("point"===e.type){const t=ce(this.forwardCoefficients,e,this.polynomialOrder);return new $({x:t.x,y:t.y,spatialReference:e.spatialReference})}return fe(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=ce(this.inverseCoefficients,e,this.polynomialOrder);return new $({x:t.x,y:t.y,spatialReference:e.spatialReference})}return fe(this.inverseCoefficients,e,this.polynomialOrder)}};e([c({json:{write:!0}})],he.prototype,"polynomialOrder",void 0),e([c()],he.prototype,"forwardCoefficients",void 0),e([d("forwardCoefficients",["coeffX","coeffY"])],he.prototype,"readForwardCoefficients",null),e([X("forwardCoefficients")],he.prototype,"writeForwardCoefficients",null),e([c({json:{write:!0}})],he.prototype,"inverseCoefficients",null),e([d("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],he.prototype,"readInverseCoefficients",null),e([X("inverseCoefficients")],he.prototype,"writeInverseCoefficients",null),e([c()],he.prototype,"affectsPixelSize",void 0),e([h({PolynomialXform:"polynomial"})],he.prototype,"type",void 0),he=e([y("esri.layers.support.rasterTransforms.PolynomialTransform")],he);var de=he;const ye={PolynomialXform:de,IdentityXform:me},ge=Object.keys(ye);const xe=new Map;xe.set("int16","esriFieldTypeSmallInteger"),xe.set("int32","esriFieldTypeInteger"),xe.set("int64","esriFieldTypeInteger"),xe.set("float32","esriFieldTypeSingle"),xe.set("float64","esriFieldTypeDouble"),xe.set("text","esriFieldTypeString");let we=class extends v{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new o("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:s,rasterInfo:r}=this._parseHeader(t);if("thematic"===r.dataType){const e=await this._fetchAuxiliaryInformation();r.attributeTable=e}this._set("storageInfo",s),this._set("rasterInfo",r),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,s,r={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const o=this._buildCacheFilePath(i,t,s,r.multidimensionalDefinition),n=this._getIndexRecordFromBundle(t,s),a=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:r.signal});if(!a)return null;const l=new Uint8Array(a.data),p=this._getTileEndAndContentType(l,n);if(0===p.recordSize)return null;const u=await this.request(o,{range:{from:p.position,to:p.position+p.recordSize},responseType:"array-buffer",signal:r.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,s;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:o,colormap:n,blockWidth:a,blockHeight:l,firstPyramidLevel:p,maximumPyramidLevel:u}=e,m=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),c=e.extent.spatialReference,f=null==(t=e.geodataXform)?void 0:t.spatialReference,h=new Q(null!=c&&c.wkid||null!=c&&c.wkt?c:f);let d=new Y({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h});const y=new $({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),g=Math.round((d.xmax-d.xmin)/y.x),x=Math.round((d.ymax-d.ymin)/y.y),w=this._parseTransform(e.geodataXform),v=w?d:null;w&&(d=w.forwardTransform(d),y.x=(d.xmax-d.xmin)/g,y.y=(d.ymax-d.ymin)/x);const j=null!=(s=e.properties)?s:{},I=e.format.toLowerCase().replace("cache/",""),b=new $(e.origin.x,e.origin.y,h);let S,k,T,C;if(n&&n.colors)for(S=[],k=0;k<n.colors.length;k++)T=n.colors[k],C=n.values?n.values[k]:k,S.push([C,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const R=e.LODInfos,P=[];for(k=0;k<R.levels.length;k++)P.push({level:R.levels[k],resolution:R.resolutions[k],scale:96/.0254*R.resolutions[k]});const M=new U({dpi:96,lods:P,format:I,origin:b,size:[a,l],spatialReference:h}),F={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},_=[{maxCol:Math.ceil(g/a)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let O=2;if(u>0)for(k=0;k<u;k++)_.push({maxCol:Math.ceil(g/O/a)-1,maxRow:Math.ceil(x/O/l)-1,minCol:0,minRow:0}),O*=2;const D=e.mdInfo;return{storageInfo:F,rasterInfo:new L({width:g,height:x,pixelType:r,bandCount:i,extent:d,nativeExtent:v,transform:w,spatialReference:h,pixelSize:y,keyProperties:j,statistics:m,histograms:o,multidimensionalInfo:D,colormap:S,storageInfo:new E({blockWidth:a,blockHeight:l,pyramidBlockWidth:a,pyramidBlockHeight:l,origin:b,tileInfo:M,firstPyramidLevel:p,maximumPyramidLevel:u,blockBoundary:_})})}}_parseTransform(e){var t,s;if(!function(e){const t=null==e?void 0:e.type;return!e||ge.includes(t)}(e))throw new o("cloudraster:open","the data contains unsupported geodata transform types");const r=function(e){if(!(null==e?void 0:e.type))return null;const t=ye[null==e?void 0:e.type];if(t){const s=new t;return s.read(e),s}return null}(e);if("identity"===r.type)return null;if("polynomial"!==r.type||null==(t=r.forwardCoefficients)||!t.length||null==(s=r.inverseCoefficients)||!s.length)throw new o("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),s=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),r=await Promise.all([t,s]);let i;if(r[0]){let e=r[0].fields;const t=r[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":xe.get(e.type),name:e.name,alias:e.alias||e.name})));const s=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:s})}}if(!i&&r[1]){i=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),s=3&t.getUint8(0);if(3!==s)return{header:{version:s},recordSet:null};const r=t.getUint32(4,!0),i=t.getUint16(8,!0),o=t.getUint16(10,!0),n={version:s,recordCount:r,headerByteCount:i,recordByteCount:o};let a=32;const l=[],p=[];let u;if(3===s){for(;13!==t.getUint8(a);)u=String.fromCharCode(t.getUint8(a+11)).trim(),l.push({name:A(new Uint8Array(e,a,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(a+16)}),a+=32;if(a+=1,l.length>0)for(;p.length<r&&e.byteLength-a>o;){const s=[];32===t.getUint8(a)?(a+=1,l.forEach((t=>{if("C"===t.type)s.push(A(new Uint8Array(e,a,t.length)).trim());else if("N"===t.type)s.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim(),10));else if("F"===t.type)s.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim()));else if("D"===t.type){const r=String.fromCharCode.apply(null,new Uint8Array(e,a,t.length)).trim();s.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}a+=t.length})),p.push(s)):a+=o}}const m=function(e){const t=e.fields,s=e.records,r=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),o=i.map((e=>e.name)),n=[];let a=0,l=0;return s.forEach((e=>{const t={};for(t[r]=a++,l=1;l<o.length;l++)t[o[l]]=e[l-1];n.push({attributes:t})})),{displayFieldName:"",fields:i,features:n}}({fields:l,records:p});return{header:n,fields:l,records:p,recordSet:m}}}.parse(r[1]).recordSet}return K.fromJSON(i)}_buildCacheFilePath(e,t,s,r){const i=this.storageInfo.packetSize,o=Math.floor(t/i)*i,a=Math.floor(s/i)*i,l="R"+this._toHexString4(o)+"C"+this._toHexString4(a);let p="L";p+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,m=null==r?void 0:r[0];if(!n(u)||!m)return`${this.url}/_alllayers/${p}/${l}.bundle`;let c=u.variables.filter((e=>e.name===m.variableName))[0].dimensions[0].values.indexOf(m.values[0]).toString(16);const f=4-c.length;for(let e=0;e<f;e++)c="0"+c;return c="S"+c,`${this.url}/_alllayers/${m.variableName}/${c}/${p}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const s=this.storageInfo.packetSize,r=s*(e%s)+t%s;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const s=e.subarray(t,t+8);let r,i=0;for(r=0;r<5;r++)i|=(255&s[r])<<8*r;const o=0xffffffffff&i;for(i=0,r=5;r<8;r++)i|=(255&s[r])<<8*(r-5);return{position:o,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};e([c({readOnly:!0})],we.prototype,"storageInfo",void 0),e([c({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),we=e([y("esri.layers.support.rasterDatasets.CloudRaster")],we);var ve=we;let je=class extends v{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:n,nativeExtent:a,transform:l}=this.data,{width:p,height:u,pixelType:m}=s,c=this.data.extent||new Y({xmin:-.5,ymin:.5,xmax:p-.5,ymax:u-.5,spatialReference:new Q({wkid:3857})}),f=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,h={x:c.width/p,y:c.height/u},d=new L({width:p,height:u,pixelType:m,extent:c,nativeExtent:a,transform:l,pixelSize:h,spatialReference:c.spatialReference,bandCount:3,keyProperties:n||{},statistics:r,isPseudoSpatialReference:f,histograms:i});this.createRemoteDatasetStorageInfo(d,512,512),this._set("rasterInfo",d),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},e),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(e,t,s,r={}){const i=this._pixelBlockTiles.get(`${e}/${t}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(e,t,s){const r=this.rasterInfo.storageInfo.maximumPyramidLevel,i=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:r},s):Promise.resolve(Z(e,t,r)),a=n(this.rasterInfo.statistics),l=n(this.rasterInfo.histograms),u=a&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},s):Promise.resolve(ee(e)),m=await p([i,u]);if(!m[0].value&&m[1].value)throw new o("inmemory-raster:open","failed to build in memory raster");var c,f;(this._pixelBlockTiles=m[0].value,a)||(this.rasterInfo.statistics=null==(c=m[1].value)?void 0:c.statistics);l&&(this.rasterInfo.histograms=null==(f=m[1].value)?void 0:f.histograms)}};e([c({type:String,json:{write:!0}})],je.prototype,"datasetFormat",void 0),e([c()],je.prototype,"data",void 0),je=e([y("esri.layers.support.rasterDatasets.InMemoryRaster")],je);var Ie=je;function be(e,t){if(!e||!t)return null;const s=[];for(let r=0;r<e.length;r++)s.push(e[r]),s.push(t[r]);return s}function Se(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new Q({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const s=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),i=r>-1?r:e.indexOf("GEOGCS");if(-1===i)return null;const o=e.slice(i,e.lastIndexOf("]",s)+1).trim(),n=e.slice(i,e.lastIndexOf("]")).trim();t=ke(o);const a=new Q(t?{wkid:t}:{wkt:o}),l=ke(n);return l&&(a.vcsWkid=l),a}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=ke(e),new Q(0!==t?{wkid:t}:{wkt:e})):null}function ke(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),s=t[t.length-1].split(",");if("EPSG"===s[0]&&e.endsWith('"]]')){const e=Number(s[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Te(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const s={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(j(e,"SRS")){if(!s.spatialReference){const t=I(e);s.spatialReference=Se(t)}}else if(j(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:r}=function(e){var t;const s=S(e,"GeodataXform"),r=Se(k(s,"SpatialReference/WKID")||I(s,"SpatialReference/WKT"));if("typens:PolynomialXform"!==s.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const i=null!=(t=k(s,"PolynomialOrder"))?t:1,o=T(s,"CoeffX/Double"),n=T(s,"CoeffY/Double"),a=T(s,"InverseCoeffX/Double"),l=T(s,"InverseCoeffY/Double"),p=be(o,n),u=be(a,l);return{spatialReference:r,transform:new de({spatialReference:r,polynomialOrder:i,forwardCoefficients:p,inverseCoefficients:u})}}(e);s.transform=r,s.spatialReference||(s.spatialReference=t)}else{b(e,"MDI").forEach((e=>s.metadata[e.getAttribute("key")]=I(e)))}else if(j(e,"PAMRasterBand")){const t=function(e){var t;const s=k(e,"NoDataValue"),r=S(e,"Histograms/HistItem"),i=k(r,"HistMin"),o=k(r,"HistMax"),n=k(r,"BucketCount"),a=null==(t=I(r,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,p,u,m;b(e,"Metadata/MDI").forEach((e=>{var t;const s=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=s;break;case"STATISTICS_MAXIMUM":p=s;break;case"STATISTICS_MEAN":u=s;break;case"STATISTICS_STDDEV":m=s}}));const c=k(e,"Metadata/SourceBandIndex");return{noDataValue:s,histogram:null!=a&&a.length&&null!=l&&null!=p?{min:i,max:o,size:n||a.length,counts:a}:null,sourceBandIndex:c,statistics:null!=l&&null!=p?{min:l,max:p,avg:u,stddev:m}:null}}(e);null!=t.sourceBandIndex&&null==s.rasterBands[t.sourceBandIndex]?s.rasterBands[t.sourceBandIndex]=t:s.rasterBands.push(t)}}));const r=s.rasterBands;if(r){const e=!!r[0].statistics;s.statistics=e?r.map((e=>e.statistics)):null;const t=!!r[0].histogram;s.histograms=t?r.map((e=>e.histogram)):null}return s}let Ce=class extends v{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:s,statistics:r,histograms:i,transform:o}=await this._fetchAuxiliaryData(e);const n=!s;n&&(s=new Q({wkid:3857})),null!=i&&i.length&&null==r&&(r=te(i));const{width:a,height:l}=t;let p=new Y({xmin:-.5,ymin:.5-l,xmax:a-.5,ymax:.5,spatialReference:s});const u=o?o.forwardTransform(p):p;let m=!0;if(o){const e=o.forwardCoefficients;m=e&&0===e[1]&&0===e[2],m&&(o=null,p=u)}const c=new Ie({data:{extent:u,nativeExtent:p,transform:o,pixelBlock:t,statistics:r,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n}});await c.open(),this._set("rasterInfo",c.rasterInfo),this._inMemoryRaster=c}fetchRawTile(e,t,s,r={}){return this._inMemoryRaster.fetchRawTile(e,t,s,r)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),s=B(t).toUpperCase();if("JPG"!==s&&"PNG"!==s&&"GIF"!==s&&"BMP"!==s)throw new o("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);return await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,s;const r=a(null==e?void 0:e.signal),i=null!=(t=this.ioConfig.skipExtensions)?t:[],o=i.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:r}),n=this.datasetFormat,l="JPG"===n?"jgw":"PNG"===n?"pgw":"BMP"===n?"bpw":null,m=i.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:r}),c=await p([o,m]);if(null!=r&&r.aborted)throw u();const f=Te(null==(s=c[0].value)?void 0:s.data);if(!f.transform){const e=c[1].value?c[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;f.transform=6===(null==e?void 0:e.length)?new de({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return f}};e([c({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),Ce=e([y("esri.layers.support.rasterDatasets.ImageAuxRaster")],Ce);var Re=Ce;let Pe=class extends pe{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};e([h({GCSShiftXform:"gcs-shift"})],Pe.prototype,"type",void 0),e([c()],Pe.prototype,"tolerance",void 0),Pe=e([y("esri.layers.support.rasterTransforms.GCSShiftTransform")],Pe);var Me=Pe;let Fe=class extends v{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=s.data;if(this.sourceJSON=r,!r)throw new o("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new o("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const i=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=r.cacheType,null==this.tileType&&(i.indexOf(r.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===r.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=r.name.slice(r.name.indexOf("/")+1);const a=await this._fetchRasterInfo({signal:t});if(!n(a))throw new o("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?ie(r.tileInfo,r):U.fromJSON(r.tileInfo),{extent:t,pixelSize:s}=a,i=.5/a.width*s.x;let o,n;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==r.maxScale&&("Raster"===this.tileType?(o=e.lods.filter((e=>e.resolution===s.x))[0],o||(o=e.lods[e.lods.length-1])):(o=e.lods.filter((e=>Math.abs(e.scale-r.maxScale)<i))[0],o||(o=e.lods.filter((e=>e.scale>r.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),s.x=s.y=o.resolution,a.width=Math.ceil((t.xmax-t.xmin)/s.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/s.y-.1)),o||(o=l);const p=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==r.minScale&&"Elevation"===this.tileType&&(n=e.lods.filter((e=>Math.abs(e.scale-r.minScale)<i))[0],this._levelOffset=n.level-p.level),n||(n=p);const u=Math.max(s.x,s.y);(Math.abs(s.x-s.y)>i||!e.lods.some((e=>Math.abs(e.resolution-u)<i)))&&(s.x=s.y=o.resolution,a.width=Math.ceil((t.xmax-t.xmin)/s.x-.1),a.height=Math.ceil((t.ymax-t.ymin)/s.y-.1));const m=o.level-n.level,[c,f]=e.size,h=[];e.lods.forEach((e=>{e.level>=n.level&&e.level<=o.level&&h.push({x:e.resolution,y:e.resolution})})),h.sort(((e,t)=>e.x-t.x));const d=this.computeBlockBoundary(t,c,f,e.origin,h,m),y=h.length>1?h.slice(1):null;a.storageInfo=new E({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:y,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:m,tileInfo:e,blockBoundary:d}),this._fixGCSShift(a),this._set("rasterInfo",a)}if(r.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:a.storageInfo.tileInfo,parsedUrl:re(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new oe({layer:e})}}async fetchRawTile(e,t,s,r={}){const{storageInfo:i,extent:o}=this.rasterInfo,n=i.maximumPyramidLevel-e+this._levelOffset,a=`${this.url}/tile/${n}/${t}/${s}`,l=this._slices?{sliceId:r.sliceId||0}:null,{data:p}=await this.request(a,{query:l,responseType:"array-buffer",signal:r.signal});if(!p)return null;const u=await this.decodePixelBlock(p,{width:i.tileInfo.size[0],height:i.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),m=i.blockBoundary[e];if("jpg"!==i.compression||s>m.minCol&&s<m.maxCol&&t>m.minRow&&t<m.maxRow)return u;const{origin:c,blockWidth:f,blockHeight:h}=i,{x:d,y}=this.getPyramidPixelSize(e),g=Math.round((o.xmin-c.x)/d)%f,x=Math.round((o.xmax-c.x)/d)%f,w=Math.round((c.y-o.ymax)/y)%h,v=Math.round((c.y-o.ymin)/y)%h,j=s===m.minCol?g:0,I=t===m.minRow?w:0,b=s===m.maxCol?x:f,S=t===m.maxRow?v:h;return se(u,{x:j,y:I},{width:b-j,height:S-I}),u}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const s=this._slices[e].multidimensionalDefinition;if(s.length===t.length&&!s.some((e=>{const s=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!s)return!0;return(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(s.values[0])?s.values[0][0]:s.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const s=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),i=await Promise.all([s,r]);return i[0]&&i[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:i[0]||null,histograms:i[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(e,0,a(t.datumTransformation));if(null===s)return null;let r=0;const{maximumPyramidLevel:i}=this.rasterInfo.storageInfo;let o=i-r+this._levelOffset;const n=s.srcLocation;for(;o>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(o,s.row,s.col,t))break}catch{}if(o--,r++,s=this.identifyPixelLocation(n,r,a(t.datumTransformation)),null===s)return null}return-1===o||null==s?null:r}async _fetchRasterInfo(e){const t=this.sourceJSON,s=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),r=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),i=Q.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new L({width:s,height:r,bandCount:3,extent:Y.fromJSON(t.extent),spatialReference:i,pixelSize:new $({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:i}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:o,signal:n}=e,a=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:o,f:"json"},signal:n}).then((e=>K.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:o,f:"json"},signal:n}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),p=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:o,f:"json"},signal:n}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:n}).then((e=>e.data)).catch((()=>{})),m=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),c=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:n}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([a,l,p,u,m,c]).then((e=>{let o=null;if(t.minValues&&t.minValues.length===t.bandCount){o=[];for(let e=0;e<t.minValues.length;e++)o.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new L({width:s,height:r,bandCount:t.bandCount,extent:Y.fromJSON(t.extent),spatialReference:i,pixelSize:new $({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:i}),pixelType:t.pixelType.toLowerCase(),statistics:o,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const s=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=s.variables)&&t.length&&s.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),s}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:s}=e;0===t.xmin&&360===t.xmax&&s.wkid&&s.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Me,e.extent=e.transform.forwardTransform(t))}};e([c({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),e([c()],Fe.prototype,"tileType",void 0),Fe=e([y("esri.layers.support.rasterDatasets.ImageServerRaster")],Fe);var _e=Fe;const Oe=new Map;Oe.set("Int8","s8"),Oe.set("UInt8","u8"),Oe.set("Int16","s16"),Oe.set("UInt16","u16"),Oe.set("Int32","s32"),Oe.set("UInt32","u32"),Oe.set("Float32","f32"),Oe.set("Float64","f32"),Oe.set("Double64","f32");const De=new Map;De.set("lerc",".lrc"),De.set("none",".til"),De.set("deflate",".pzp"),De.set("jpeg",".jzp");let Le=class extends v{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const s=e?a(e.signal):null,r=await this.request(this.url,{responseType:"xml",signal:s}),{rasterInfo:i,files:o}=this._parseHeader(r.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var l;if(null!=t)i.statistics=null!=(l=t.statistics)?l:i.statistics,i.histograms=t.histograms,t.histograms&&!n(i.statistics)&&(i.statistics=te(t.histograms))}this._set("rasterInfo",i),this._files=o;const p=await this.request(o.index,{responseType:"array-buffer",signal:s});this._storageIndex=this._parseIndex(p.data);let u,m,c=0,f=-1;const{blockWidth:h,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,g=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:x,height:w,bandCount:v}=this.rasterInfo,j=[],I="none"===y?1:v;for(;c<this._storageIndex.length;)f++,u=Math.ceil(x/h/g**f),m=Math.ceil(w/d/g**f),c+=u*m*I*4,j.push({maxRow:m,maxCol:u,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=j,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,s,r={}){const{blockWidth:i,blockHeight:o,blockBoundary:n,compression:a}=this.rasterInfo.storageInfo,l=n[e];if(!l||l.maxRow<t||l.maxCol<s||l.minRow>t||l.minCol>s)return null;const{bandCount:p,pixelType:u}=this.rasterInfo,{ranges:m,actualTileWidth:c,actualTileHeight:f}=this._getTileLocation(e,t,s);if(!m||0===m.length)return null;if(0===m[0].from&&0===m[0].to){const e=new Uint8Array(i*o);return new ne({width:i,height:o,pixels:null,mask:e,validPixelCount:0})}const{bandIds:h}=this.ioConfig,d="none"===a?1:p,y=[];let g=0;for(g=0;g<d;g++)(!h||h.indexOf[g]>-1)&&y.push(this.request(this._files.data,{range:{from:m[g].from,to:m[g].to},responseType:"array-buffer",signal:r.signal}));const x=await Promise.all(y),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),v=new Uint8Array(w);let j=0;for(g=0;g<d;g++)v.set(new Uint8Array(x[g].data),j),j+=x[g].data.byteLength;const I="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",b=await this.decodePixelBlock(v.buffer,{width:i,height:o,format:I,pixelType:u});let S=0,k=0;if(c!==i||f!==o){let e=b.mask;if(e)for(g=0;g<o;g++)if(k=g*i,g<f)for(S=c;S<i;S++)e[k+S]=0;else for(S=0;S<i;S++)e[k+S]=0;else for(e=new Uint8Array(i*o),b.mask=e,g=0;g<f;g++)for(k=g*i,S=0;S<c;S++)e[k+S]=1}return b}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,s,r,i,o,n;if(z){for(s=new Uint8Array(e),i=new ArrayBuffer(e.byteLength),r=new Uint8Array(i),o=0;o<e.byteLength/4;o++)for(n=0;n<4;n++)r[4*o+n]=s[4*o+3-n];t=new Uint32Array(i)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,s){const{blockWidth:r,blockHeight:i,pyramidScalingFactor:o,compression:n}=this.rasterInfo.storageInfo,{width:a,height:l,bandCount:p}=this.rasterInfo,u="none"===n?1:p;let m,c,f,h=0,d=0;for(f=0;f<e;f++)d=o**f,m=Math.ceil(a/r/d),c=Math.ceil(l/i/d),h+=m*c;d=o**e,m=Math.ceil(a/r/d),c=Math.ceil(l/i/d),h+=t*m+s,h*=4*u;const y=this._storageIndex.subarray(h,h+4*u);let g=0,x=0;const w=[];for(let e=0;e<u;e++)g=y[4*e+0]*2**32+y[4*e+1],x=g+y[4*e+2]*2**32+y[4*e+3],w.push({from:g,to:x});return{ranges:w,actualTileWidth:s<m-1?r:Math.ceil(a/d)-r*(m-1),actualTileHeight:t<c-1?i:Math.ceil(l/d)-i*(c-1)}}_parseHeader(e){const t=S(e,"MRF_META/Raster");if(!t)throw new o("mrf:open","not a valid MRF format");const s=S(t,"Size"),r=parseInt(s.getAttribute("x"),10),i=parseInt(s.getAttribute("y"),10),n=parseInt(s.getAttribute("c"),10),a=(I(t,"Compression")||"none").toLowerCase();if(!a||-1===["none","lerc"].indexOf(a))throw new o("mrf:open","currently does not support compression "+a);const l=I(t,"DataType")||"UInt8",p=Oe.get(l);if(null==p)throw new o("mrf:open","currently does not support pixel type "+l);const u=S(t,"PageSize"),m=parseInt(u.getAttribute("x"),10),c=parseInt(u.getAttribute("y"),10),f=S(t,"DataValues");let h,d;f&&(d=f.getAttribute("NoData"),null!=d&&(h=d.trim().split(" ").map((e=>parseFloat(e)))));if(S(e,"MRF_META/CachedSource"))throw new o("mrf:open","currently does not support MRF referencing other data files");const y=S(e,"MRF_META/GeoTags"),g=S(y,"BoundingBox");if(null==g)throw new o("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const x=parseFloat(g.getAttribute("minx")),w=parseFloat(g.getAttribute("miny")),v=parseFloat(g.getAttribute("maxx")),j=parseFloat(g.getAttribute("maxy")),b=I(y,"Projection")||"",k=I(e,"datafile"),T=I(e,"IndexFile");let C;if("LOCAL_CS[]"!==b)if(b.toLowerCase().startsWith("epsg:")){const e=Number(b.slice(5));isNaN(e)||0===e||(C=new Q({wkid:e}))}else C=Se(b);const R=new Y(x,w,v,j);R.spatialReference=C;const P=S(e,"MRF_META/Rsets"),M=parseInt(P&&P.getAttribute("scale")||"2",10),F=new E({origin:new $({x:R.xmin,y:R.ymax,spatialReference:C}),blockWidth:m,blockHeight:c,pyramidBlockWidth:m,pyramidBlockHeight:c,compression:a,pyramidScalingFactor:M}),_=new $({x:(v-x)/r,y:(j-w)/i,spatialReference:C});return{rasterInfo:new L({width:r,height:i,extent:R,spatialReference:C,bandCount:n,pixelType:p,pixelSize:_,noDataValue:h,storageInfo:F}),files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:k||this.url.replace(".mrf",De.get(a))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Te(t)}catch{return null}}};e([c()],Le.prototype,"_files",void 0),e([c()],Le.prototype,"_storageIndex",void 0),e([c({type:String,json:{write:!0}})],Le.prototype,"datasetFormat",void 0),Le=e([y("esri.layers.support.rasterIO.MRFRaster")],Le);var Ee=Le;const Ue=function(e,t){const s=e.get(t);return s&&s.values},Ae=function(e,t){const s=e.get(t);return s&&s.values[0]};let Be=class extends v{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,s,r;await this.init();const i=e?a(e.signal):null,{data:l}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!l)throw new o("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:p,firstIFD:u,isBigTiff:m}=N(l),c=[];await this.readIFDs(c,l,p,u,0,m?8:4,i);const f=H(c),{width:h,height:d,tileWidth:y,tileHeight:g,planes:x,pixelType:w,compression:v,firstPyramidLevel:j,maximumPyramidLevel:I,pyramidBlockWidth:b,pyramidBlockHeight:S,tileBoundary:k,affine:T,metadata:C}=f;let R=Se((null==(t=f.extent.spatialReference)?void 0:t.wkt)||(null==(s=f.extent.spatialReference)?void 0:s.wkid)),P=!1;null==R&&(P=!0,R=new Q({wkid:3857}));const M=new Y({...f.extent,spatialReference:R}),F=new $(M?{x:M.xmin,y:M.ymax,spatialReference:R}:{x:0,y:0}),_=new E({blockWidth:y,blockHeight:g,pyramidBlockWidth:b,pyramidBlockHeight:S,compression:v,origin:F,firstPyramidLevel:j,maximumPyramidLevel:I,blockBoundary:k}),O=new $({x:(M.xmax-M.xmin)/h,y:(M.ymax-M.ymin)/d,spatialReference:R}),D=C?{BandProperties:C.bandProperties,DataType:C.dataType}:{},U=new L({width:h,height:d,bandCount:x,pixelType:w,compression:v,pixelSize:O,storageInfo:_,spatialReference:R,isPseudoSpatialReference:P,keyProperties:D,extent:M,statistics:C?C.statistics:null});if(null!=T&&T.length&&(U.nativeExtent=new Y({xmin:-.5,ymin:.5-d,xmax:h-.5,ymax:.5,spatialReference:R}),U.transform=new de({polynomialOrder:1,forwardCoefficients:[T[2]+T[0]/2,T[5]-T[3]/2,T[0],T[3],-T[1],-T[4]]}),U.extent=U.transform.forwardTransform(U.nativeExtent),U.pixelSize=new $({x:(M.xmax-M.xmin)/h,y:(M.ymax-M.ymin)/d,spatialReference:R}),_.origin.x=-.5,_.origin.y=.5),null==(r=this.ioConfig.skipExtensions)||!r.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var A;if(U.statistics=null!=(A=t.statistics)?A:U.statistics,U.histograms=t.histograms,t.histograms&&!n(U.statistics)&&(U.statistics=te(t.histograms)),t.transform&&!T){U.transform=t.transform,U.nativeExtent=U.extent;const e=U.transform.forwardTransform(U.nativeExtent);U.pixelSize=new $({x:(e.xmax-e.xmin)/h,y:(e.ymax-e.ymin)/d,spatialReference:R}),U.extent=e}U.spatialReference||(U.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",U),this._headerInfo={littleEndian:p,isBigTiff:m,ifds:c,...f},!this._headerInfo.isSupported)throw new o("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,s,r={}){var i;if(null==(i=this._headerInfo)||!i.isSupported||this.isBlockOutside(e,t,s))return null;const o=this.getTileLocation(e,t,s);if(!o)return null;const{ranges:n,actualTileWidth:a,actualTileHeight:l,ifd:p}=o,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:r.signal}))),m=await Promise.all(u),c=m.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),f=1===m.length?m[0].data:new ArrayBuffer(c),h=[0],d=[0];if(m.length>1){const e=new Uint8Array(f);for(let t=0,s=0;t<m.length;t++){const r=m[t].data;e.set(new Uint8Array(r),s),h[t]=s,s+=r.byteLength,d[t]=r.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:p,offsets:h,sizes:d},width:y,height:g,planes:null,pixelType:null});let w,v,j;if(a!==y||l!==g){let e=x.mask;if(e)for(w=0;w<g;w++)if(j=w*y,w<l)for(v=a;v<y;v++)e[j+v]=0;else for(v=0;v<y;v++)e[j+v]=0;else for(e=new Uint8Array(y*g),x.mask=e,w=0;w<l;w++)for(j=w*y,v=0;v<a;v++)e[j+v]=1}return x}async readIFDs(e,t,s,r,i,o=4,n){if(!r)return null;if(r>=t.byteLength||r<0){t=(await this.request(this.url,{range:{from:r+i,to:r+i+this._bufferSize},responseType:"array-buffer",signal:n})).data,i=r+i,r=0}const a=await this.readIFD(t,s,r,i,V.TIFF_TAGS,o,n);if(e.push(a.ifd),!a.nextIFD)return null;await this.readIFDs(e,t,s,a.nextIFD-i,i,o,n)}async readIFD(e,t,s,r,i=V.TIFF_TAGS,o=4,n){if(!e)return null;const a=G(e,t,s,r,i,o);if(a.success){const s=[];if(a.ifd.forEach((e=>{e.values||s.push(e)})),s.length>0){const i=s.map((e=>e.offlineOffsetSize)),o=Math.min.apply(null,i.map((e=>e[0])));if(Math.min.apply(null,i.map((e=>e[0]+e[1])))-o<=this._bufferSize){const{data:i}=await this.request(this.url,{range:{from:o,to:o+this._bufferSize},responseType:"array-buffer",signal:n});e=i,r=o,s.forEach((s=>q(e,t,s,r)))}}if(a.ifd.has("GEOKEYDIRECTORY")){const s=a.ifd.get("GEOKEYDIRECTORY"),i=s.values;if(i&&i.length>4){const o=i[0]+"."+i[1]+"."+i[2],a=await this.readIFD(e,t,s.valueOffset+6-r,r,V.GEO_KEYS,2,n);s.data=a.ifd,s.data&&s.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[o]})}}return a}if(a.requiredBufferSize&&a.requiredBufferSize!==e.byteLength){const s=await this.request(this.url,{range:{from:r,to:r+a.requiredBufferSize+4},responseType:"array-buffer",signal:n});return(e=s.data).byteLength<a.requiredBufferSize?null:this.readIFD(e,t,0,r,V.TIFF_TAGS,4,n)}}getTileLocation(e,t,s){const{firstPyramidLevel:r,blockBoundary:i}=this.rasterInfo.storageInfo,o=0===e?0:e-(r-1),n=this._headerInfo.ifds[o];if(!n)return null;const a=J(n,this._headerInfo),l=Ue(n,"TILEOFFSETS");if(void 0===l)return null;const p=Ue(n,"TILEBYTECOUNTS"),{minRow:u,minCol:m,maxRow:c,maxCol:f}=i[o];if(t>c||s>f||t<u||s<m)return null;const h=Ae(n,"IMAGEWIDTH"),d=Ae(n,"IMAGELENGTH"),y=Ae(n,"TILEWIDTH"),g=Ae(n,"TILELENGTH"),x=a?this.rasterInfo.bandCount:1,w=x*t*(f+1)+s,v=[{from:l[w],to:l[w+x-1]+p[w+x-1]-1}];if(a){let e=!0;for(let t=0;t<x;t++)if(l[w+t]+p[w+t]!==l[w+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)v[e]={from:l[w+e],to:l[w+e]+p[w+e]-1}}const j=l[w],I=p[w];if(null==j||null==I)return null;return{ranges:v,ifd:n,actualTileWidth:s===f?h%y:y,actualTileHeight:t===c?d%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Te(t)}catch{return null}}};e([c()],Be.prototype,"_files",void 0),e([c()],Be.prototype,"_headerInfo",void 0),e([c()],Be.prototype,"_bufferSize",void 0),e([c({type:String,json:{write:!0}})],Be.prototype,"datasetFormat",void 0),Be=e([y("esri.layers.support.rasterDatasets.TIFFRaster")],Be);var ze=Be;const Ne=new Map;Ne.set("CRF",{desc:"Cloud Raster Format",constructor:ve}),Ne.set("MRF",{desc:"Meta Raster Format",constructor:Ee}),Ne.set("TIFF",{desc:"GeoTIFF",constructor:ze}),Ne.set("RasterTileServer",{desc:"Raster Tile Server",constructor:_e}),Ne.set("JPG",{desc:"JPG Raster Format",constructor:Re}),Ne.set("PNG",{desc:"PNG Raster Format",constructor:Re}),Ne.set("GIF",{desc:"GIF Raster Format",constructor:Re}),Ne.set("BMP",{desc:"BMP Raster Format",constructor:Re});function He(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let Ve=class extends(x(F(M(R(P(w(C(l(g))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=n(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(m).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let s=[new O({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const r=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(r){const e=r.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));s=s.concat(e)}return s}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,o=s(i,r)||void 0;if(null!=o)return o}createPopupTemplate(e){return ae({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:s}=this;if(this.loaded?"RasterTileServer"===s.datasetFormat&&("Raster"===s.tileType||"Map"===s.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new o("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return Ne.forEach(((t,s)=>e.add(s))),e}static async open(e){const{url:t,ioConfig:s,sourceJSON:r}=e;let i=e.datasetFormat;null==i&&t.lastIndexOf(".")&&(i=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===i||"TIF"===i?i="TIFF":"JPG"!==i&&"JPEG"!==i&&"JFIF"!==i||(i="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(i="RasterTileServer");const n={url:t,sourceJSON:r,datasetFormat:i,ioConfig:s||{bandIds:null,sampling:null}};let a,l;if(this.supportedFormats.has(i))return a=Ne.get(i).constructor,l=new a(n),await l.open({signal:e.signal}),l;if(i)throw new o("rasterfactory:open","not a supported format "+i);const p=Array.from(Ne.keys());let u=0;const m=function(){return i=p[u++],i?(a=Ne.get(i).constructor,l=new a(n),l.open({signal:e.signal}).then((()=>l)).catch((()=>m()))):null};return m()}static register(e,t,s){Ne.has(e.toUpperCase())||Ne.set(e.toUpperCase(),{desc:t,constructor:s})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new o("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};e([c({type:[f],json:{write:{overridePolicy:He}}})],Ve.prototype,"bandIds",void 0),e([c({json:{write:{overridePolicy:He}}}),h(D)],Ve.prototype,"interpolation",void 0),e([c({json:{write:!0}})],Ve.prototype,"multidimensionalDefinition",void 0),e([c(_)],Ve.prototype,"legendEnabled",void 0),e([c({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ve.prototype,"isReference",void 0),e([c({type:["show","hide"]})],Ve.prototype,"listMode",void 0),e([c()],Ve.prototype,"sourceJSON",void 0),e([c({readOnly:!0})],Ve.prototype,"version",void 0),e([c()],Ve.prototype,"title",void 0),e([c({readOnly:!0,json:{read:!1}})],Ve.prototype,"type",void 0),e([c({type:["ArcGISTiledImageServiceLayer"]})],Ve.prototype,"operationalLayerType",void 0),e([c({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:He,writer(e,t,s){t[s]=!e}}}})],Ve.prototype,"popupEnabled",void 0),e([c({type:t,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:He}}})],Ve.prototype,"popupTemplate",void 0),e([c({readOnly:!0})],Ve.prototype,"defaultPopupTemplate",null),e([c({readOnly:!0,type:[O]})],Ve.prototype,"fields",void 0),e([c({readOnly:!0,type:[O]})],Ve.prototype,"rasterFields",null),e([c({types:r,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:He},origins:{"web-scene":{types:i,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],Ve.prototype,"renderer",null),e([d("renderer")],Ve.prototype,"readRenderer",null),Ve=e([y("esri.layers.ImageryTileLayer")],Ve);var Ge=Ve;export default Ge;
