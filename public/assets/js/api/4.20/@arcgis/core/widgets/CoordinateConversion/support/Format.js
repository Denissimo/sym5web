/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Accessor.js";import r from"../../../core/Error.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/ensureType.js";import"../../../chunks/Logger.js";import{subclass as i}from"../../../core/accessorSupport/decorators/subclass.js";import{fromUsng as s,fromUtm as n,fromMgrs as a,fromLatitudeLongitude as c,toUtm as l,toUsng as p,toMgrs as m,toLatitudeLongitude as u}from"../../../geometry/coordinateFormatter.js";import{isLoaded as h,project as d}from"../../../geometry/projection.js";import f,{e as g}from"../../../geometry/SpatialReference.js";import{project as v,canProject as j}from"../../../geometry/support/webMercatorUtils.js";import y from"../../../rest/support/ProjectParameters.js";import w from"../../../geometry/Point.js";import"../../../geometry/Extent.js";import"../../../chunks/string.js";import"../../../chunks/object.js";import"../../../geometry/Geometry.js";import"../../../chunks/JSONSupport.js";import"../../../chunks/write.js";import"../../../chunks/metadata.js";import"../../../chunks/handleUtils.js";import"../../../chunks/arrayUtils.js";import"../../../chunks/reader.js";import"../../../chunks/deprecate.js";import"../../../chunks/ArrayPool.js";import"../../../core/scheduling.js";import"../../../core/promiseUtils.js";import"../../../chunks/Message.js";import"../../../config.js";import"../../../chunks/writer.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../chunks/Ellipsoid.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/extentUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/typeUtils.js";import"../../../chunks/jsonMap.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/mathUtils.js";import"../../../chunks/unitUtils.js";import"../../../chunks/projectionEllipsoid.js";import"../../../chunks/mat4.js";import"../../../chunks/aaBoundingRect.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";const P={utm:{conversionMode:"utmDefault",addSpaces:!0},usng:{numOfDigits:5,rounding:!1,addSpaces:!1},mgrs:{rounding:!1}},S=new Array(3);function R(e){return e>=500?6:e<500&&e>=50?7:e<50&&e>=5?8:9}function k(e){return"number"==typeof e&&isFinite(e)}function b(e){return e&&k(e.x)&&k(e.y)}function M(e,t){if(e.spatialReference.isGeographic&&t){const[r,o]=function(e,t){const r=R(t);return[e[0].toFixed(r),e[1].toFixed(r)]}([e.x,e.y],t);return`${r}, ${o}`}return`${e.x.toFixed(3)}, ${e.y.toFixed(3)}`}function _(e){return"dd"===e||"dms"===e||"ddm"===e||"mgrs"===e||"usng"===e||"utm"===e}let x=class extends t{constructor(e){super(e),this.conversionInfo=null,this.coordinateSegments=null,this.defaultPattern=null,this.name=null,this.viewModel=null}get currentPattern(){return this._get("currentPattern")||this._get("defaultPattern")}set currentPattern(e){this._set("currentPattern",e)}get hasDisplayProperties(){return!(!this.defaultPattern||!this.coordinateSegments)}get spatialReference(){const e=this.get("conversionInfo.spatialReference")||f.WGS84;return"basemap"===this.name?this._viewSpatialReference:e}set spatialReference(e){void 0===e&&this._clearOverride("spatialReference"),this._override("spatialReference",e)}get _viewSpatialReference(){return this.get("viewModel.view.spatialReference")||f.WGS84}get _additionalCharactersPattern(){const e=this.get("coordinateSegments");if(!e)return null;const t=e.map((e=>e.alias)),r=this.currentPattern.replace(new RegExp(`["nsew${t.join()}]`,"gi"),"").replace(/\ /g,"");return new RegExp(`[${r}]`,"g")}convert(e,t){if(!b(e))return Promise.reject(new r("format:invalid-point","Could not convert invalid point.",{point:e}));const o=this.get("conversionInfo.convert");return o?Promise.resolve().then((()=>o(e))):this._project(e,this.spatialReference,t).then((e=>this._getCoordinate(e).then((t=>({location:e,coordinate:t})))))}getConversionStrategy(){const e=this._viewSpatialReference;return this.get("conversionInfo.convert")||this.get("viewModel.formatterAvailable")||"xy"===this.name&&(e.isWebMercator||e.isWGS84)||"basemap"===this.name?"client":"server"}getDisplayCoordinate(e){if(!e)return null;if(!this.coordinateSegments||!this.currentPattern)return e;let t=this.currentPattern;const r=this._getSegmentMatches(e,!1);for(let e=this.coordinateSegments.length-1;e>=0;e--){const o=this.coordinateSegments[e];t=t.replace(o.alias,r[e])}return t}parseUserInput(e){let t=this.defaultPattern.replace(this._additionalCharactersPattern,"");e=e.replace(this._additionalCharactersPattern,"");const r=this._getSegmentMatches(e,!0);for(let e=this.coordinateSegments.length-1;e>=0;e--){const o=this.coordinateSegments[e];t=t.replace(o.alias,r[e])}return t}_getSegmentMatches(e,t){const r=[];for(let o=0;o<this.coordinateSegments.length;o++){const i=this.coordinateSegments[o],s=e.match(i.searchPattern);if(!s){r.push("");continue}let n=s[0];if(e=e.replace(n,"").trim(),i.substitution){const e=t?i.substitution.input(n):i.substitution.output(n);e&&(n=e)}r.push(n)}return r}reverseConvert(e){const t=this.parseUserInput(e),o=this.get("conversionInfo.reverseConvert"),i=_(this.name);let l;if(o)l=o(t);else if("xy"===this.name||"basemap"===this.name)l=function(e,t){const r=e.indexOf(",")>=0?",":" ",[o,i,s]=e.split(r).map((e=>{const t=e.trim();return t?Number(t):null}));if(!k(o)||!k(i))return null;const n=new w({x:o,y:i,spatialReference:t||f.WGS84});return s&&(n.z=s,n.hasZ=!0),n}(t,this.spatialReference);else if(this.viewModel.formatterAvailable)switch(this.name){case"dd":case"ddm":case"dms":l=c(t,this.spatialReference);break;case"mgrs":{const e="automatic";l=a(t,this.spatialReference,e);break}case"utm":{const e="latitude-band-indicators";l=n(t,this.spatialReference,e);break}case"usng":l=s(t,this.spatialReference);break;default:l=null}else if(i)return function(e){const{geometryServicePromise:t,coordinate:o,spatialReference:i,formatName:s}=e;return t.then((e=>e.fromGeoCoordinateString({strings:[o],sr:i,conversionType:s}).then((e=>{const t=new w({x:e[0][0],y:e[0][1],spatialReference:i});if(!b(t))throw e;return t})).catch((e=>{throw new r("coordinate-conversion:from-geo-coordinate-string-failed","Failed to convert coordinate notation",{notationResult:e})}))))}({coordinate:t,spatialReference:this.spatialReference,formatName:this.name,geometryServicePromise:this.get("viewModel.geometryServicePromise")});return l?this._project(l,this._viewSpatialReference):Promise.reject(new r("format:invalid-input","Could not parse input into point.",{userInput:e}))}_getCoordinate(e){const t=this.get("viewModel.view.scale");if(!b(e))return Promise.reject(new r("format:invalid-point","Could not transform invalid point into coordinate.",{point:e}));if(this.get("viewModel.formatterAvailable")||"basemap"===this.name||"xy"===this.name)switch(this.name){case"dd":case"ddm":case"dms":{const r=R(t);return Promise.resolve(u(e,this.name,r))}case"mgrs":{const t=!1,r=5,o="automatic";return Promise.resolve(m(e,o,r,t))}case"usng":{const t=!1,r=5;return Promise.resolve(p(e,r,t))}case"utm":{const t=!0,r="latitude-band-indicators";return Promise.resolve(l(e,r,t))}default:return Promise.resolve(M(e,t))}return _(this.name)?function(e){const{formatName:t,location:o,geometryServicePromise:i}=e,s=P[t]||{},n={coordinates:[[o.x,o.y]],sr:o.spatialReference,conversionType:t,...s};return i.then((e=>e.toGeoCoordinateString(n).then((e=>{const t=e[0];if(!t)throw e;return t})).catch((e=>{throw new r("coordinate-conversion:to-geo-coordinate-string-failed","Failed to convert coordinate notation",{notationResult:e})}))))}({formatName:this.name,location:e,geometryServicePromise:this.get("viewModel.geometryServicePromise")}):Promise.resolve(M(e,t))}_project(e,t,o){return g(e.spatialReference,t)||!t?Promise.resolve(e):this.get("viewModel.formatterAvailable")&&h()?Promise.resolve(d(e,t)):this.get("viewModel.formatterAvailable")?null:j(e,t)?Promise.resolve(v(e,t)):function(e,t){const{spatialReference:o,geometryServicePromise:i,location:s,scale:n}=e;if(!o||s.spatialReference.wkid===o.wkid)return Promise.resolve({location:s,coordinate:M(s,n)});if((s.spatialReference.isWGS84||s.spatialReference.isWebMercator)&&(o.isWGS84||o.isWebMercator))return Promise.resolve({location:v(s,o),coordinate:M(s,n)});if(S[0]===s&&S[1]===o.wkid)return S[2];S[0]=s,S[1]=o.wkid;const a=i.then((e=>e.project(new y({geometries:[s],outSpatialReference:o}),{signal:t}).then((e=>{if(!b(e[0]))throw e[0];return{location:e[0],coordinate:M(e[0],n)}})).catch((e=>{throw new r("coordinate-conversion:projection-failed","Failed to project point",{projectionResult:e})}))));return S[2]=a,a}({location:e,spatialReference:t,geometryServicePromise:this.get("viewModel.geometryServicePromise"),scale:this.get("viewModel.view.scale")},o).then((e=>e.location))}};e([o()],x.prototype,"conversionInfo",void 0),e([o()],x.prototype,"coordinateSegments",void 0),e([o()],x.prototype,"currentPattern",null),e([o()],x.prototype,"defaultPattern",void 0),e([o({readOnly:!0})],x.prototype,"hasDisplayProperties",null),e([o()],x.prototype,"name",void 0),e([o({type:f})],x.prototype,"spatialReference",null),e([o()],x.prototype,"viewModel",void 0),e([o({readOnly:!0})],x.prototype,"_viewSpatialReference",null),e([o({readOnly:!0})],x.prototype,"_additionalCharactersPattern",null),x=e([i("esri.widgets.CoordinateConversion.support.Format")],x);var C=x;export default C;export{_ as a,b as i};
