/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import s,{r as t}from"./Accessor.js";import n from"./Handles.js";import{property as r,v as d}from"./accessorSupport/decorators/property.js";import{subclass as i}from"./accessorSupport/decorators/subclass.js";import{b as a}from"./lang.js";import{schedule as o}from"./scheduling.js";import{init as h,on as l}from"./watchUtils.js";import"../chunks/deprecate.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/metadata.js";import"../chunks/handleUtils.js";import"../chunks/ArrayPool.js";import"../chunks/arrayUtils.js";import"../chunks/ensureType.js";import"../chunks/Message.js";import"./promiseUtils.js";import"./Error.js";import"./Collection.js";import"../chunks/Evented.js";let c=class extends s{constructor(){super(...arguments),this.updating=!1,this.handleId=0,this.handles=new n,this.scheduleHandleId=0,this.pendingPromises=new Set}destroy(){this.removeAll(),this.handles.destroy()}add(e,s,t,n=0){const r=0!=(1&n),d=++this.handleId;r||this.installSyncUpdatingWatch(e,s,d);const i=0!=(2&n)?h(e,s,t,r):e.watch(s,t,r);return this.handles.add(i,d),{remove:()=>this.handles.remove(d)}}addOnCollectionPropertyChange(e,s,t,n=0){const r=0!=(2&n),d=++this.handleId;return this.handles.add([l(e,s,"after-changes",this.createSyncUpdatingCallback()),l(e,s,"change",t,r?e=>{t({added:e.items,removed:[],moved:[],target:e})}:void 0)],d),{remove:()=>{this.handles.remove(d)}}}addOnCollectionChange(e,s,t=0){const n=0!=(2&t),r=++this.handleId;return this.handles.add([e.on("after-changes",this.createSyncUpdatingCallback()),e.on("change",s)],r),n&&s({added:e.items,removed:[],moved:[],target:e}),{remove:()=>{this.handles.remove(r)}}}addPromise(e){if(a(e))return e;const s=++this.handleId;this.handles.add({remove:()=>{this.pendingPromises.delete(e)&&(0!==this.pendingPromises.size||this.handles.has(p)||this._set("updating",!1))}},s),this.pendingPromises.add(e),this._set("updating",!0);const t=()=>this.handles.remove(s);return e.then(t,t),e}removeAll(){this.pendingPromises.clear(),this.handles.removeAll(),this._set("updating",!1)}installSyncUpdatingWatch(e,s,n){const r=this.createSyncUpdatingCallback(),i=t((()=>d(e,s)),r);return this.handles.add(i,n),i}createSyncUpdatingCallback(){return()=>{this.handles.remove(p),++this.scheduleHandleId;const e=this.scheduleHandleId;this._get("updating")||this._set("updating",!0),this.handles.add(o((()=>{e===this.scheduleHandleId&&(this._set("updating",this.pendingPromises.size>0),this.handles.remove(p))})),p)}}};e([r({readOnly:!0})],c.prototype,"updating",void 0),c=e([i("esri.views.support.WatchUpdatingTracking")],c);const p=-42,m=s=>{let t=class extends s{destroy(){this.destroyed||(this.handles.destroy(),this.updatingHandles.destroy())}get handles(){return this._get("handles")||new n}get updatingHandles(){return this._get("updatingHandles")||new c}};return e([r({readOnly:!0})],t.prototype,"handles",null),e([r({readOnly:!0})],t.prototype,"updatingHandles",null),t=e([i("esri.core.HandleOwner")],t),t};let u=class extends(m(s)){};u=e([i("esri.core.HandleOwner")],u);export{u as HandleOwner,m as HandleOwnerMixin,c as W};
