/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import{ensureType as o}from"../symbols.js";import{J as t}from"../chunks/jsonMap.js";import{clone as e,b as r,d as i,u as l}from"../core/lang.js";import{L as a}from"../chunks/Logger.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import{cast as p}from"../core/accessorSupport/decorators/cast.js";import{e as m}from"../chunks/enumeration.js";import{r as u}from"../chunks/reader.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import{w as h}from"../chunks/writer.js";import{e as y,n as j,l as d}from"../chunks/ensureType.js";import{collectArcadeFieldNames as b,collectField as f}from"../layers/support/fieldUtils.js";import k from"./Renderer.js";import{V as g}from"../chunks/VisualVariablesMixin.js";import S from"./support/ClassBreakInfo.js";import{r as I,a as v}from"../chunks/commonProperties.js";import{L as x}from"../chunks/LegendOptions.js";import{l as V}from"../chunks/arcadeOnDemand.js";import"../symbols/CIMSymbol.js";import"../chunks/string.js";import"../chunks/object.js";import"../symbols/Symbol.js";import"../Color.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../config.js";import"../chunks/JSONSupport.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/metadata.js";import"../chunks/handleUtils.js";import"../chunks/ArrayPool.js";import"../chunks/arrayUtils.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../chunks/Message.js";import"../chunks/write.js";import"../chunks/domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"../geometry.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/Ellipsoid.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils.js";import"../symbols/edges/Edges3D.js";import"../chunks/screenUtils.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/colors.js";import"../chunks/Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"../chunks/persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../core/Collection.js";import"../chunks/Evented.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../portal/Portal.js";import"../intl.js";import"../chunks/number.js";import"../chunks/locale.js";import"../request.js";import"../kernel.js";import"../chunks/assets.js";import"../chunks/Loadable.js";import"../chunks/Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../chunks/Thumbnail.js";import"../chunks/Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./support/AuthoringInfo.js";import"./support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"./visualVariables/ColorVariable.js";import"./visualVariables/VisualVariable.js";import"./visualVariables/support/ColorStop.js";import"./visualVariables/OpacityVariable.js";import"./visualVariables/support/OpacityStop.js";import"./visualVariables/RotationVariable.js";import"./visualVariables/SizeVariable.js";import"./visualVariables/support/SizeStop.js";import"../chunks/sizeVariableUtils.js";import"../chunks/visualVariableUtils.js";import"../Graphic.js";import"../PopupTemplate.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"../chunks/date.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../chunks/chartMediaInfoUtils.js";import"../chunks/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"../chunks/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../chunks/uid.js";import"../chunks/compilerUtils.js";import"../chunks/lengthUtils.js";import"../chunks/unitUtils.js";import"../chunks/projectionEllipsoid.js";import"../symbols/support/jsonUtils.js";import"../chunks/symbolConversion.js";var B;const F=a.getLogger("esri.renderers.ClassBreaksRenderer"),E=new t({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"}),C=y(S);let M=B=class extends(g(k)){constructor(s){super(s),this._compiledValueExpression={valueExpression:null,compiledFunction:null},this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type="class-breaks",this.valueExpression=null,this.valueExpressionTitle=null,this._set("classBreakInfos",[])}readClassBreakInfos(s,o,t){if(!Array.isArray(s))return;let e=o.minValue;return s.map((s=>{const o=new S;return o.read(s,t),null==o.minValue&&(o.minValue=e),null==o.maxValue&&(o.maxValue=o.minValue),e=o.maxValue,o}))}writeClassBreakInfos(s,o,t,e){const r=s.map((s=>s.write({},e)));this._areClassBreaksConsecutive()&&r.forEach((s=>delete s.classMinValue)),o[t]=r}castField(s){return null==s?s:"function"==typeof s?(F.error(".field: field must be a string value"),null):j(s)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let s=this._get("normalizationType");const o=!!this.normalizationField,t=null!=this.normalizationTotal;return o||t?(s=(o?"field":t&&"percent-of-total")||null,o&&t&&F.warn("warning: both normalizationField and normalizationTotal are set!")):"field"!==s&&"percent-of-total"!==s||(s=null),s}set normalizationType(s){this._set("normalizationType",s)}addClassBreakInfo(s,t,r){let i=null;i="number"==typeof s?new S({minValue:s,maxValue:t,symbol:o(r)}):C(e(s)),this.classBreakInfos.push(i),1===this.classBreakInfos.length&&this.notifyChange("minValue")}removeClassBreakInfo(s,o){const t=this.classBreakInfos.length;for(let e=0;e<t;e++){const t=[this.classBreakInfos[e].minValue,this.classBreakInfos[e].maxValue];if(t[0]===s&&t[1]===o){this.classBreakInfos.splice(e,1);break}}}getBreakIndex(s,o){return this.valueExpression&&(r(o)||r(o.arcade))&&F.warn(""),this.valueExpression?this._getBreakIndexForExpression(s,o):this._getBreakIndexForField(s)}async getClassBreakInfo(s,o){let t=o;this.valueExpression&&(r(o)||r(o.arcade))&&(t={...t,arcade:await V()});const e=this.getBreakIndex(s,t);return-1!==e?this.classBreakInfos[e]:null}getSymbol(s,o){if(this.valueExpression&&(r(o)||r(o.arcade)))return void F.error("#getSymbol()","Please use getSymbolAsync if valueExpression is used");const t=this.getBreakIndex(s,o);return t>-1?this.classBreakInfos[t].symbol:this.defaultSymbol}async getSymbolAsync(s,o){let t=o;if(this.valueExpression&&(r(o)||r(o.arcade))){const s=await V(),{arcadeUtils:o}=s;o.hasGeometryOperations(this.valueExpression)&&await o.enableGeometryOperations(),t={...t,arcade:s}}const e=this.getBreakIndex(s,t);return e>-1?this.classBreakInfos[e].symbol:this.defaultSymbol}getSymbols(){const s=[];return this.classBreakInfos.forEach((o=>{o.symbol&&s.push(o.symbol)})),this.defaultSymbol&&s.push(this.defaultSymbol),s}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce(((s,o)=>s+o.getAttributeHash()),"")}getMeshHash(){const s=JSON.stringify(this.backgroundFillSymbol),o=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${s}.${o}.${this.classBreakInfos.reduce(((s,o)=>s+o.getMeshHash()),"")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new B({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol&&this.backgroundFillSymbol.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol&&this.defaultSymbol.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:e(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:e(this.visualVariables),legendOptions:e(this.legendOptions),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}async collectRequiredFields(s,o){const t=[this.collectVVRequiredFields(s,o),this.collectSymbolFields(s,o)];await Promise.all(t)}async collectSymbolFields(s,o){const t=[...this.getSymbols().map((t=>t.collectRequiredFields(s,o))),b(s,o,this.valueExpression)];f(s,o,this.field),f(s,o,this.normalizationField),await Promise.all(t)}_getBreakIndexForExpression(s,o){const{viewingMode:t,scale:e,spatialReference:r,arcade:a}=i(o,{});let n=this._compiledValueExpression.valueExpression===this.valueExpression?this._compiledValueExpression.compiledFunction:null;const p=l(a).arcadeUtils;if(!n){const s=p.createSyntaxTree(this.valueExpression);n=p.createFunction(s),this._compiledValueExpression.compiledFunction=n}this._compiledValueExpression.valueExpression=this.valueExpression;const m=p.executeFunction(n,p.createExecContext(s,p.getViewInfo({viewingMode:t,scale:e,spatialReference:r})));return this._getBreakIndexfromInfos(m)}_getBreakIndexForField(s){const o=this.field,t=s.attributes,e=this.normalizationType;let r=parseFloat(t[o]);if(e){const s=this.normalizationTotal,o=parseFloat(t[this.normalizationField]);if("log"===e)r=Math.log(r)*Math.LOG10E;else if("percent-of-total"!==e||isNaN(s)){if("field"===e&&!isNaN(o)){if(isNaN(r)||isNaN(o))return-1;r/=o}}else r=r/s*100}return this._getBreakIndexfromInfos(r)}_getBreakIndexfromInfos(s){const o=this.isMaxInclusive;if(null!=s&&"number"==typeof s&&!isNaN(s))for(let t=0;t<this.classBreakInfos.length;t++){const e=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(e[0]<=s&&(o?s<=e[1]:s<e[1]))return t}return-1}_areClassBreaksConsecutive(){const s=this.classBreakInfos,o=s.length;for(let t=1;t<o;t++)if(s[t-1].maxValue!==s[t].minValue)return!1;return!0}};s([n(I)],M.prototype,"backgroundFillSymbol",void 0),s([n({type:[S]})],M.prototype,"classBreakInfos",void 0),s([u("classBreakInfos")],M.prototype,"readClassBreakInfos",null),s([h("classBreakInfos")],M.prototype,"writeClassBreakInfos",null),s([n({type:String,json:{write:!0}})],M.prototype,"defaultLabel",void 0),s([n(v)],M.prototype,"defaultSymbol",void 0),s([n({type:String,json:{write:!0}})],M.prototype,"field",void 0),s([p("field")],M.prototype,"castField",null),s([n({type:Boolean})],M.prototype,"isMaxInclusive",void 0),s([n({type:x,json:{write:!0}})],M.prototype,"legendOptions",void 0),s([n({type:Number,readOnly:!0,value:null,json:{read:!1,write:{overridePolicy(){return 0!==this.classBreakInfos.length&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],M.prototype,"minValue",null),s([n({type:String,json:{write:!0}})],M.prototype,"normalizationField",void 0),s([n({type:Number,cast:s=>d(s),json:{write:!0}})],M.prototype,"normalizationTotal",void 0),s([n({type:E.apiValues,value:null,json:{type:E.jsonValues,read:E.read,write:E.write}})],M.prototype,"normalizationType",null),s([m({classBreaks:"class-breaks"})],M.prototype,"type",void 0),s([n({type:String,json:{write:!0}})],M.prototype,"valueExpression",void 0),s([n({type:String,json:{write:!0}})],M.prototype,"valueExpressionTitle",void 0),M=B=s([c("esri.renderers.ClassBreaksRenderer")],M);var z=M;export default z;
