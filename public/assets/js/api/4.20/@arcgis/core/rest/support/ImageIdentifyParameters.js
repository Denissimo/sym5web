/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../TimeExtent.js";import{a as r}from"../../chunks/JSONSupport.js";import{i as o,clone as i}from"../../core/lang.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{w as p}from"../../chunks/writer.js";import m from"../../geometry/Point.js";import{getJsonType as l}from"../../geometry/support/jsonUtils.js";import u from"../../layers/support/MosaicRule.js";import a from"../../layers/support/RasterFunction.js";import"../../chunks/timeUtils.js";import"../../chunks/reader.js";import"../../chunks/object.js";import"../../core/Accessor.js";import"../../chunks/deprecate.js";import"../../chunks/metadata.js";import"../../chunks/handleUtils.js";import"../../chunks/ArrayPool.js";import"../../chunks/arrayUtils.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/Message.js";import"../../config.js";import"../../chunks/string.js";import"../../chunks/write.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../geometry/Extent.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../chunks/jsonMap.js";import"../../layers/support/DimensionalDefinition.js";import"../../chunks/enumeration.js";var c;let y=c=class extends r{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=l(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=u.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=a.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=o(e.start)?e.start.getTime():null,s=o(e.end)?e.end.getTime():null;t[r]=null!=i?null!=s?`${i},${s}`:`${i}`:null}}clone(){return new c(i({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};e([s({json:{write:!0}})],y.prototype,"geometry",void 0),e([p("geometry")],y.prototype,"writeGeometry",null),e([s({type:u,json:{write:!0}})],y.prototype,"mosaicRule",null),e([p("mosaicRule")],y.prototype,"writeMosaicRule",null),e([s({type:a,json:{write:!0}})],y.prototype,"renderingRule",null),e([p("renderingRule")],y.prototype,"writeRenderingRule",null),e([s({type:[a],json:{write:!0}})],y.prototype,"renderingRules",void 0),e([p("renderingRules")],y.prototype,"writeRenderingRules",null),e([s({type:m,json:{write:!0}})],y.prototype,"pixelSize",void 0),e([p("pixelSize")],y.prototype,"writePixelSize",null),e([s({type:Boolean,json:{write:!0}})],y.prototype,"returnGeometry",void 0),e([s({type:Boolean,json:{write:!0}})],y.prototype,"returnCatalogItems",void 0),e([s({type:Boolean,json:{write:!0}})],y.prototype,"returnPixelValues",void 0),e([s({type:Number,json:{write:!0}})],y.prototype,"maxItemCount",void 0),e([s({type:t,json:{write:{target:"time"}}})],y.prototype,"timeExtent",void 0),e([p("timeExtent")],y.prototype,"writeTimeExtent",null),e([s({json:{write:!0}})],y.prototype,"raster",void 0),e([s({json:{write:!0}})],y.prototype,"viewId",void 0),y=c=e([n("esri.rest.support.ImageIdentifyParameters")],y);var j=y;export default j;
