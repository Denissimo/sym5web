/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as a}from"./tslib.es6.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{L as s}from"./Logger.js";import{r as e}from"./reader.js";import{subclass as i,W as t}from"../core/accessorSupport/decorators/subclass.js";import{w as o}from"./writer.js";import{collectField as l,collectArcadeFieldNames as n}from"../layers/support/fieldUtils.js";import u from"../renderers/visualVariables/ColorVariable.js";import V from"../renderers/visualVariables/OpacityVariable.js";import p from"../renderers/visualVariables/RotationVariable.js";import b from"../renderers/visualVariables/SizeVariable.js";import c from"../renderers/visualVariables/VisualVariable.js";import h from"../core/Accessor.js";import{J as y}from"./jsonMap.js";const f=s.getLogger("esri.renderers.visualVariables.VisualVariableFactory"),v={color:u,size:b,opacity:V,rotation:p},m=new y({colorInfo:"color",transparencyInfo:"opacity",rotationInfo:"rotation",sizeInfo:"size"}),d=/^\[([^\]]+)\]$/i;let g=class extends h{constructor(){super(...arguments),this.colorVariables=null,this.opacityVariables=null,this.rotationVariables=null,this.sizeVariables=null}set visualVariables(a){if(this._resetVariables(),(a=a&&a.filter((a=>!!a)))&&a.length){for(const r of a)switch(r.type){case"color":this.colorVariables.push(r);break;case"opacity":this.opacityVariables.push(r);break;case"rotation":this.rotationVariables.push(r);break;case"size":this.sizeVariables.push(r)}if(this.sizeVariables.length){this.sizeVariables.some((a=>!!a.target))&&a.sort(((a,r)=>{let s=null;return s=a.target===r.target?0:a.target?1:-1,s}))}for(let r=0;r<a.length;r++){a[r].index=r}this._set("visualVariables",a)}else this._set("visualVariables",a)}readVariables(a,r,s){const{rotationExpression:e,rotationType:i}=r,o=e&&e.match(d),l=o&&o[1];if(l&&(a||(a=[]),a.push({type:"rotationInfo",rotationType:i,field:l})),a)return a.map((a=>{const r=m.read(a.type),e=v[r];e||(f.warn(`Unknown variable type: ${r}`),s&&s.messages&&s.messages.push(new t("visual-variable:unsupported",`visualVariable of type '${r}' is not supported`,{definition:a,context:s})));const i=new e;return i.read(a,s),i}))}writeVariables(a,r){const s=[];for(const e of a){const a=e.toJSON(r);a&&s.push(a)}return s}_resetVariables(){this.colorVariables=[],this.opacityVariables=[],this.rotationVariables=[],this.sizeVariables=[]}};a([r()],g.prototype,"visualVariables",null),g=a([i("esri.renderers.visualVariables.VisualVariableFactory")],g);var j=g;const F={base:c,key:"type",typeMap:{opacity:V,color:u,rotation:p,size:b}},w=s=>{let t=class extends s{constructor(){super(...arguments),this._vvFactory=new j}set visualVariables(a){this._vvFactory.visualVariables=a,this._set("visualVariables",this._vvFactory.visualVariables)}readVisualVariables(a,r,s){return this._vvFactory.readVariables(a,r,s)}writeVisualVariables(a,r,s,e){r[s]=this._vvFactory.writeVariables(a,e)}get arcadeRequiredForVisualVariables(){if(!this.visualVariables)return!1;for(const a of this.visualVariables)if(a.arcadeRequired)return!0;return!1}hasVisualVariables(a,r){return a?!!this.getVisualVariablesForType(a,r):!!(this.getVisualVariablesForType("size",r)||this.getVisualVariablesForType("color",r)||this.getVisualVariablesForType("opacity",r)||this.getVisualVariablesForType("rotation",r))}getVisualVariablesForType(a,r){const s=this.visualVariables;if(!s)return;const e=s.filter((s=>s.type===a&&("string"==typeof r?s.target===r:!1!==r||!s.target)));return e&&0===e.length?void 0:e}async collectVVRequiredFields(a,r){let s=[];this.visualVariables&&(s=s.concat(this.visualVariables));for(const e of s)e&&(e.field&&l(a,r,e.field),e.normalizationField&&l(a,r,e.normalizationField),e.valueExpression&&await n(a,r,e.valueExpression))}};return a([r({types:[F],value:null,json:{write:!0}})],t.prototype,"visualVariables",null),a([e("visualVariables",["visualVariables","rotationType","rotationExpression"])],t.prototype,"readVisualVariables",null),a([o("visualVariables")],t.prototype,"writeVisualVariables",null),t=a([i("esri.renderers.mixins.VisualVariablesMixin")],t),t};export{w as V};
