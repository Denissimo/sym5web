/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{u as t,g as r}from"../core/lang.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./Message.js";let s;function a(a,o={}){let n=o.responseType;n?"array-buffer"!==n&&"blob"!==n&&"json"!==n&&"native"!==n&&"native-request-init"!==n&&"text"!==n&&(n="text"):n="json";const i=t(o.signal);return delete o.signal,r.invokeStaticMessage("request",{url:a,options:o},{signal:i}).then((async t=>{let r,l,c,u,f;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==n&&"text"!==n&&"blob"!==n||(r=new Blob([t.data]),"json"!==n&&"text"!==n||(s||(s=new FileReaderSync),u=s.readAsText(r),"json"!==n)))){try{l=JSON.parse(u||null)}catch(t){const r={...t,url:a,requestOptions:o};throw new e("request:server",t.message,r)}if(l.error){const t={...l.error,url:a,requestOptions:o};throw new e("request:server",l.error.message,t)}}}else"native"===n&&(t.data.signal=i,c=await fetch(t.data.url,t.data));switch(n){case"blob":f=r;break;case"json":f=l;break;case"native":f=c;break;case"text":f=u;break;default:f=t.data}return{data:f,requestOptions:o,ssl:t.ssl,url:a}}))}export{a as execute};
