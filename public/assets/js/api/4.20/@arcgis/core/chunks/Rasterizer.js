/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{S as e,C as a,R as r}from"./CIMSymbolHelper.js";import{g as t,c as n}from"./cimAnalyzer.js";import{r as i}from"./utils3.js";class s{dispose(){this._rasterizationCanvas=null}rasterizeJSONResource(i,s,o){if(this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),"simple-fill"===i.type||"esriSFS"===i.type){const[a,r,t]=e.rasterizeSimpleFill(this._rasterizationCanvas,i.style,s);return{size:[r,t],image:new Uint32Array(a.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0}}if("simple-line"===i.type||"esriSLS"===i.type){const[a,r,t]=e.rasterizeSimpleLine(i.style,i.cap);return{size:[r,t],image:new Uint32Array(a.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let m,l,f;if("simple-marker"===i.type||"esriSMS"===i.type||"line-marker"===i.type?(m=a.fromSimpleMarker(i),f=t(m)):"CIMHatchFill"===i.type?(m=a.fromCIMHatchFill(i),l=new r(m.frame.xmin,-m.frame.ymax,m.frame.xmax-m.frame.xmin,m.frame.ymax-m.frame.ymin)):i.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===i.markerPlacement.type?(m=a.fromCIMInsidePolygon(i),l=new r(m.frame.xmin,-m.frame.ymax,m.frame.xmax-m.frame.xmin,m.frame.ymax-m.frame.ymin)):(m=i,f=t(m)),f&&!o){const[e,a,r]=n(f);return e?{size:[a,r],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}const[c,h,p,y,u]=a.rasterize(this._rasterizationCanvas,m,l,!o);return c?{size:[h,p],image:new Uint32Array(c.buffer),sdf:!1,simplePattern:!1,anchorX:y,anchorY:u}:null}rasterizeImageResource(e,a,r,t){this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),this._rasterizationCanvas.width=e,this._rasterizationCanvas.height=a;const n=this._rasterizationCanvas.getContext("2d");r instanceof ImageData?n.putImageData(r,0,0):(r.setAttribute("width",`${e}px`),r.setAttribute("height",`${a}px`),n.drawImage(r,0,0,e,a));const s=n.getImageData(0,0,e,a),o=new Uint8Array(s.data);if(t)for(const e of t)if(e&&e.oldColor&&4===e.oldColor.length&&e.newColor&&4===e.newColor.length){const[a,r,t,n]=e.oldColor,[i,s,m,l]=e.newColor;if(a===i&&r===s&&t===m&&n===l)continue;for(let e=0;e<o.length;e+=4)a===o[e]&&r===o[e+1]&&t===o[e+2]&&n===o[e+3]&&(o[e]=i,o[e+1]=s,o[e+2]=m,o[e+3]=l)}let m;for(let e=0;e<o.length;e+=4)m=o[e+3]/255,o[e]=o[e]*m,o[e+1]=o[e+1]*m,o[e+2]=o[e+2]*m;let l=o,f=e,c=a;const h=512;if(f>=h||c>=h){const r=f/c;r>1?(f=h,c=Math.round(h/r)):(c=h,f=Math.round(h*r)),l=new Uint8Array(4*f*c);const t=new Uint8ClampedArray(l.buffer);i(o,e,a,t,f,c,!1)}return{size:[f,c],image:new Uint32Array(l.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}export{s as R};
