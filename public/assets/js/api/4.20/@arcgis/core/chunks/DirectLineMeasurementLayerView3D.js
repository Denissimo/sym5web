/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{j as t,b as i,i as s,d as r}from"../core/lang.js";import{property as o}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./Logger.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{d as n}from"./defaultUnit.js";import{L as l}from"./LayerView3D.js";import p,{e as m,a as d}from"../core/Accessor.js";import c from"../core/Handles.js";import{b as h,w as u,r as g,i as y,k as _,e as j,n as v,s as b,a as w,t as f,f as L,g as S,a8 as C,M as P}from"./mathUtils.js";import{U as V,Q as M,L as D,G as E,E as z,f as O,a as x,b as A,c as U,d as R,e as T,s as G,g as I}from"./Segment.js";import{whenOnce as F}from"../core/watchUtils.js";import{geodesicLength as k}from"../geometry/geometryEngine.js";import W from"../geometry/Polyline.js";import{canProjectWithoutEngine as H,projectPointToVector as q,projectPointToWGS84ComparableLonLat as B}from"../geometry/projection.js";import{c as Q,g as N,S as J,W as $}from"./projectionEllipsoid.js";import{isSupported as K,geodesicLengths as X,inverseGeodeticSolver as Y}from"../geometry/support/geodesicUtils.js";import{fetchMessageBundle as Z}from"../intl.js";import{d as ee,f as te}from"./screenUtils.js";import{j as ie,c as se}from"./unitUtils.js";import{j as re}from"./vec2.js";import{f as oe}from"./vec4f32.js";import{L as ae}from"./LineVisualElement.js";import{c as ne}from"./mat4f64.js";import{b as le}from"./vectorStacks.js";import{O as pe}from"./Object3DVisualElement.js";import{G as me}from"./ColorMaterial.js";import{n as de}from"./InterleavedLayout.js";import{S as ce,g as he,p as ue,a as ge,b as ye,P as _e,D as je,c as ve,a1 as be,R as we,a8 as fe,a6 as Le,a9 as Se}from"./VertexColor.glsl.js";import{m as Ce,c as Pe,d as Ve}from"./VertexArrayObject.js";import{R as Me}from"./RightAngleQuadVisualElement.js";import{a as De}from"./lineStippleUtils.js";import{o as Ee}from"./locale.js";import ze from"../views/layers/LayerView.js";import"./metadata.js";import"./handleUtils.js";import"../config.js";import"./object.js";import"./string.js";import"./Message.js";import"./heightModelInfoUtils.js";import"../core/Error.js";import"../geometry/HeightModelInfo.js";import"./arrayUtils.js";import"./jsonMap.js";import"./JSONSupport.js";import"./write.js";import"./reader.js";import"./writer.js";import"./deprecate.js";import"./ArrayPool.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../geometry/SpatialReference.js";import"./Ellipsoid.js";import"./arcgisLayerUrl.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../core/Collection.js";import"./Evented.js";import"../widgets/Attachments.js";import"./number.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import"../widgets/Widget.js";import"./domUtils.js";import"./Promise.js";import"./uuid.js";import"./projector.js";import"./widgetUtils.js";import"./assets.js";import"../request.js";import"../kernel.js";import"./jsxWidgetSupport.js";import"../widgets/Attachments/AttachmentsViewModel.js";import"../Graphic.js";import"../geometry.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../layers/support/fieldUtils.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"./enumeration.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"./chartMediaInfoUtils.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/StylePattern3D.js";import"./colors.js";import"./Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"./Loadable.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./uid.js";import"../core/HandleOwner.js";import"../rest/query/support/AttachmentInfo.js";import"../rest/support/AttachmentQuery.js";import"./messageBundle.js";import"./jsxFactory.js";import"./viewUtils.js";import"./VisualElement.js";import"./mathUtils2.js";import"./geometryEngineBase.js";import"./hydrated.js";import"./mat4.js";import"./pe.js";import"./aaBoundingRect.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./vec4.js";import"./lineUtils.js";import"./triangulationUtils.js";import"./earcut.js";import"./deduplicate.js";import"./vec4f64.js";import"./RibbonLineMaterial.js";import"./compilerUtils.js";import"./ElevationProvider.js";import"./lineSegment.js";import"./plane.js";import"./sphere.js";import"./ray.js";import"./geometryDataUtils.js";import"./triangle.js";import"./Util.js";import"./vec2f64.js";import"./quatf64.js";import"./vec3f32.js";import"./utils4.js";import"./PiUtils.glsl.js";import"./MapUtils.js";import"./vec2f32.js";import"./FramebufferObject.js";import"./Texture.js";import"./Camera.js";import"./frustum.js";import"./Object3D.js";import"./Intersector.js";import"./boundedPlane.js";import"./verticalOffsetUtils.js";import"./mat3.js";import"./quat.js";import"./glUtil.js";import"./PhysicallyBasedRendering.glsl.js";import"./Scheduler.js";import"./PromiseQueue.js";import"./aaBoundingBox.js";import"./dehydratedFeatures.js";import"./byteSizeEstimations.js";import"./quantizationUtils.js";import"../layers/support/Field.js";import"./fieldType.js";import"./BufferView.js";import"./types.js";import"./Program.js";import"./mat4f32.js";let Oe=class extends p{constructor(e){super(e),this._unitNormalizer=new V,this._handles=new c,this._tempStartPosition=h(),this._tempEndPosition=h(),this._tempCornerPosition=h()}initialize(){this._handles.add(F(this.view,"ready",(()=>this._initialize()),!0))}destroy(){this._handles=t(this._handles)}_initialize(){const e=this.view.spatialReference,t=Q(e),i=t===J?$:t;this._sphericalPCPF=i;const s=H(e,i);this._unitNormalizer.spatialReference=s?i:e,this._handles.add(m((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e})))}get _computedResult(){const{startPoint:e,endPoint:t}=this.layer;if(i(e)||i(t))return null;const s=this._euclideanDistances(e,t),r=this._exactGeodesicDistanceAndAngle(e,t,s.horizontal.value);return{directDistance:s.direct,horizontalDistance:s.horizontal,verticalDistance:s.vertical,geodesicDistance:r.distance,geodesicAngle:r.angle}}_euclideanDistances(e,t){const i=e.clone();i.z=t.z;const s=this._tempStartPosition,r=this._tempEndPosition,o=this._tempCornerPosition,a=this.view.spatialReference,n=this._sphericalPCPF,l=H(a,n)?n:a;q(e,s,l),q(t,r,l),q(i,o,l);const p=u(s,r),m=u(o,r),d=Math.abs(t.z-e.z),c=e=>this._unitNormalizer.normalizeDistance(e),h=c(p),g=c(m),y=c(d);return{direct:new M(h,"meters"),horizontal:new M(g,"meters"),vertical:new M(y,"meters")}}_exactGeodesicDistanceAndAngle(e,t,i){const s=e.spatialReference,r=new W({spatialReference:s});r.addPath([e,t]);const o=s.isGeographic&&K(s)?X([r],"meters")[0]:s.isWebMercator?k(r,"meters"):void 0,{distance:a,angle:n}=o?{distance:o,angle:this._fallbackGeodesicAngle(o,s)}:this._fallbackGeodesicDistance(e,t,i);return{distance:new M(a,"meters"),angle:new M(n,"degrees")}}_fallbackGeodesicAngle(e,t){return e/N(t).metersPerDegree}_fallbackGeodesicDistance(e,t,i){if(B(e,xe)){B(t,Ae);const e=_(xe[0]),i=_(xe[1]),s=_(Ae[0]),r=_(Ae[1]),o=Math.abs(s-e),a=y(Math.sin(i)*Math.sin(r)+Math.cos(i)*Math.cos(r)*Math.cos(o)),n=g(a),l={distance:0};return Y(l,[xe[0],xe[1]],[Ae[0],Ae[1]]),{distance:l.distance,angle:n}}const s=e.spatialReference,r=i;return{distance:r,angle:this._fallbackGeodesicAngle(r,s)}}};e([o()],Oe.prototype,"view",void 0),e([o()],Oe.prototype,"layer",void 0),e([o()],Oe.prototype,"viewData",void 0),e([o()],Oe.prototype,"_computedResult",null),Oe=e([a("esri.views.3d.layers.analysis.DirectLineMeasurement/DirectLineMeasurementController")],Oe);const xe=h(),Ae=h();var Ue=Object.freeze({__proto__:null,build:function(){const e=new ce;e.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),e.attributes.add("position","vec3"),e.attributes.add("normal","vec3"),e.attributes.add("uv0","vec2"),e.attributes.add("auxpos1","float"),e.varyings.add("vtc","vec2"),e.varyings.add("vlength","float"),e.varyings.add("vradius","float"),e.vertex.code.add(he`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),e.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const t=1/Math.sqrt(2);return e.fragment.code.add(he`
    const float INV_SQRT2 = ${he.float(t)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),e}});class Re extends ye{constructor(e,t,i){super(e,t,i)}initializeProgram(e){const t=Re.shader.get().build();return new _e(e.rctx,t,je)}bindPass(e,t){ve(this.program,t.camera.projectionMatrix),this.program.setUniform1f("width",e.width),this.program.setUniform1f("outlineSize",e.outlineSize),this.program.setUniform4fv("outlineColor",e.outlineColor),this.program.setUniform1f("stripeLength",e.stripeLength),this.program.setUniform4fv("stripeEvenColor",e.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",e.stripeOddColor)}bindDraw(e){be(this.program,e),this.program.rebindTextures()}initializePipeline(){return Ce({polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:Pe,colorWrite:Ve})}get primitiveType(){return 5}}Re.shader=new we(Ue,(()=>Promise.resolve().then((function(){return Ue}))));class Te extends ge{constructor(){super(...arguments),this.polygonOffsetEnabled=!1}}e([ue()],Te.prototype,"polygonOffsetEnabled",void 0);class Ge extends fe{constructor(e){super(e,Fe),this.techniqueConfig=new Te}getTechniqueConfig(){return this.techniqueConfig.polygonOffsetEnabled=this.params.polygonOffset,this.techniqueConfig}dispose(){}getPassParameters(){return this.params}intersect(){}createBufferWriter(){return new Ne}getGLMaterial(e){return 0===e.output?new Ie(e):void 0}}class Ie extends Le{constructor(e){super(e),this.updateParameters()}updateParameters(){this._technique=this._techniqueRep.releaseAndAcquire(Re,this._material.getTechniqueConfig(),this._technique)}beginSlot(e){return 3===e}bind(e){this._technique.bindPass(this._material.getPassParameters(),e)}}const Fe={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...Se},ke=de().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),We=h(),He=h(),qe=h(),Be=h(),Qe=h();class Ne{constructor(){this.vertexBufferLayout=ke}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices.get("position").length/2+1)}write(e,t,i,s){const r=t.vertexAttributes.get("position").data,o=t.vertexAttributes.get("normal").data,a=r.length/3,n=t&&t.indices&&t.indices.get("position");n&&n.length!==2*(a-1)&&console.warn("MeasurementArrowMaterial does not support indices");const l=We,p=He,m=qe,d=Be,c=Qe,h=e.transformation,g=e.invTranspTransformation,y=i.position,_=i.normal,L=i.uv0;let S=0;for(let e=0;e<a;++e){const t=3*e;if(j(l,r[t],r[t+1],r[t+2]),e<a-1){const t=3*(e+1);j(p,r[t],r[t+1],r[t+2]),j(c,o[t],o[t+1],o[t+2]),v(c,c),b(m,p,l),v(m,m),w(d,c,m),v(d,d)}const i=u(l,p);h&&g&&(f(l,l,h),f(p,p,h),f(d,d,g));const n=s+2*e,C=n+1;y.setVec(n,l),y.setVec(C,l),_.setVec(n,d),_.setVec(C,d),L.set(n,0,S),L.set(n,1,-1),L.set(C,0,S),L.set(C,1,1),e<a-1&&(S+=i)}const C=i.auxpos1;for(let e=0;e<2*a;++e)C.set(s+e,S)}}class Je extends pe{constructor(e){super(e),this._parameters=$e,this._handles=null,this._origin=h(),this._originTransform=ne(),this._arrowCenter=h(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameterValues({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameterValues({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this._stripesEnabled?this._parameters.arrowStripeEvenColor:this._parameters.arrowStripeOddColor;this._arrowMaterial.setParameterValues({stripeEvenColor:e})}}createExternalResources(){const e=this._stripesEnabled?this._parameters.arrowStripeEvenColor:this._parameters.arrowStripeOddColor;this._arrowMaterial=new Ge({outlineColor:this._parameters.arrowOutlineColor,stripeEvenColor:e,stripeOddColor:this._parameters.arrowStripeOddColor,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new c,this._handles.add(this.view.state.watch("camera",(()=>{this.viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(i(this._geometry)||i(this._geometry.startRenderSpace)||i(this._geometry.endRenderSpace))return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.addGeometry(t,this._arrowMaterial,this._originTransform),this.viewChanged()}_createArrowGeometry(e,t,i,s){const r=this.view.renderCoordsHelper,o=[],a=[],n=(e,t)=>{const s=le.get();b(s,e,i),o.push(s),a.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=le.get();r.worldUpAtPosition(this._arrowCenter,i),n(e,i),n(t,i)}else{s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const i=t/(e-1),o=le.get(),a=le.get();s.eval(i,o),r.worldUpAtPosition(o,a),n(o,a)}}return me.createPolylineGeometry(o,a)}geometryChanged(){this.recreateGeometry()}viewChanged(){if(this.view.ready&&this.attached&&s(this._geometry)){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameterValues({width:this._parameters.arrowWidth*e})}}}const $e={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128};let Ke=class extends p{constructor(e){super(e),this._params={...Ye},this._handles=new c,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=h(),this._endPosition=h(),this._cornerPosition=h(),this._startPositionAtSeaLevel=h(),this._endPositionAtSeaLevel=h(),this._state=0,this._segmentLabelDisplayedMeasurement=1,this._triangleOrientationOverride=null,this.messages=null,this.viewMode=0,this.visualizedMeasurement=0,this.actualVisualizedMeasurement=1,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03}get _geodesicDistanceExceeded(){var e;const t=this.layerView.result;return s(t)&&(null==(e=t.horizontalDistance)?void 0:e.value)>this.layer.geodesicDistanceThreshold}get ready(){return 1===this._state}get visible(){return this.layerView.visible&&!this.layerView.suspended}get allowVisualElementsOrientationChange(){return i(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){i(this._triangleOrientationOverride)!==e&&(i(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._getActualVisualElementsOrientation():this._triangleOrientationOverride=null)}get labels(){return 2===this.actualVisualizedMeasurement?{direct:this._horizontalLabel,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){return{labels:this.labels,stripeLength:this._segmentVisualElement.stripeLength}}initialize(){this._handles.add(F(this.view,"ready",(()=>this._initialize()),!0))}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new Je({...t,geometry:null,renderOccluded:4}),this._triangleVisualElement=new ae({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:4}),this._rightAngleQuad=new Me({...t,color:Xe,renderOccluded:4});const i={...t,polygonOffset:!0,stippleIntegerRepeats:!1,renderOccluded:4};this._projectedGeodesicLine=new ae({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:De(e.guideStippleLengthPixels)}),this._geodesicStartHint=new ae({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:De(e.guideStippleLengthPixels)}),this._geodesicEndHint=new ae({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:De(e.guideStippleLengthPixels)}),this._segmentLabel=new D({...t,fontSize:e.direcLabelFontSize}),this._verticalLabel=new D({...t,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new D({...t,fontSize:e.horizontalLabelFontSize}),this._handles.add([d((()=>this._updateGeometryAndViewMode())),d((()=>this._updateVisualElementVisibility())),d((()=>this._updateLabelText())),d((()=>this._updateLabelVisibility())),d((()=>this._updateSegmentStripeLength())),Ee((async()=>this._updateMessageBundle()))]),this._state=1,this._updateMessageBundle()}destroy(){2!==this._state&&(this._handles=t(this._handles),this._segmentVisualElement=t(this._segmentVisualElement),this._triangleVisualElement=t(this._triangleVisualElement),this._rightAngleQuad=t(this._rightAngleQuad),this._projectedGeodesicLine=t(this._projectedGeodesicLine),this._geodesicStartHint=t(this._geodesicStartHint),this._geodesicEndHint=t(this._geodesicEndHint),this._segmentLabel=t(this._segmentLabel),this._verticalLabel=t(this._verticalLabel),this._horizontalLabel=t(this._horizontalLabel),this.set("view",null),this._state=2)}async whenReady(){await F(this,"ready")}async whenMessages(){await this.whenReady(),await F(this,"messages")}_updateVisualElementVisibility(){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,this.visible)switch(this.viewMode){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode(){const e=this.view.renderCoordsHelper,{startPoint:t,endPoint:s}=this.layer;if(i(t)||i(s)||t.equals(s)){this.viewMode=0;const e=this.visualizedMeasurement,t=0===e;return void(this.actualVisualizedMeasurement=t?1:e)}e.toRenderCoords(t,this._startPosition),e.toRenderCoords(s,this._endPosition);const r=this._getActualVisualElementsOrientation(),o=this._updateActualVisualizedMeasurement();this.viewMode=this._computeViewMode(o);let a=this._startPosition,n=this._endPosition;const l=1===r?1:-1,p=l*(e.getAltitude(n)-e.getAltitude(a));p<0&&(a=this._endPosition,n=this._startPosition);const m=2===o?new E(this._startPosition,this._endPosition,e.spatialReference):new z(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=m,this._updateSegmentStripeLength(),this._segmentLabelDisplayedMeasurement=o,this.viewMode){case 1:this._updateSegment(m,r);break;case 2:this._updateSegmentAndTriangle(m,r,a,n,l,p);break;case 3:this._updateSegmentAndProjection(r)}}_updateSegment(e,t){this._segmentLabel.anchor=1===t?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle(e,t,i,s,r,o){const a=this.view,n=a.renderCoordsHelper,l=a.state.camera,p=this._cornerPosition;n.worldUpAtPosition(i,p),L(p,p,r*Math.abs(o)),S(p,p,i),this._triangleVisualElement.geometry=[[[i[0],i[1],i[2]],[p[0],p[1],p[2]],[s[0],s[1],s[2]]]],this._rightAngleQuad.geometry={previous:i,center:p,next:s};const m=new z(i,p),d=new z(p,s),c=function(e,t,i,s,r){const o=et,a=tt;r.projectToRenderScreen(i,o),r.projectToRenderScreen(t,a);const n={segment:"bottom",horizontal:"top",vertical:o[0]<a[0]?"left":"right"};{const s=it,o=st;if(G(e,i,s,r),G(e,t,o,r),re(s,o)>=Ze){const e=P(s[1])===P(o[1]);n.segment=e?I(n.vertical):n.vertical}else{const e=rt;G(i,t,e,r),re(e,o)>=Ze&&(n.segment=P(e[0])===P(o[0])?I(n.horizontal):n.horizontal)}}if(2===s){const e=e=>"top"===e?"bottom":"top";n.segment=e(n.segment),n.horizontal=e(n.horizontal),n.vertical=e(n.vertical)}return n}(i,s,p,t,l);this._segmentLabel.anchor=c.segment,this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:m,sampleLocation:"center"},this._verticalLabel.anchor=c.vertical,this._horizontalLabel.geometry={type:"segment",segment:d,sampleLocation:"center"},this._horizontalLabel.anchor=c.horizontal}_updateSegmentAndProjection(e){const t=this.view.renderCoordsHelper;t.setAltitude(this._startPositionAtSeaLevel,0,this._startPosition),t.setAltitude(this._endPositionAtSeaLevel,0,this._endPosition);const i=new E(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,t.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(i),this._geodesicStartHint.setGeometryFromSegment(new z(this._startPositionAtSeaLevel,this._startPosition)),this._geodesicEndHint.setGeometryFromSegment(new z(this._endPositionAtSeaLevel,this._endPosition)),this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._segmentLabel.anchor=1===e?"top":"bottom"}_updateLabelText(){if(1!==this._state)return;const e=this._segmentLabel,t=this._horizontalLabel,s=this._verticalLabel,r=this.messages,o=this.layerView.result;if(i(o)||i(r))return e.text=null,t.text=null,void(s.text=null);const a=this._getLabelsText(r,o),n=1===this._segmentLabelDisplayedMeasurement;e.text=n?a.euclideanDistance:a.geodesicDistance,t.text=a.horizontalDistance,s.text=a.verticalDistance,this.notifyChange("labels")}_updateLabelVisibility(){if(1!==this._state)return;const e=this._segmentLabel,t=this._horizontalLabel,i=this._verticalLabel;if(e.visible=!1,t.visible=!1,i.visible=!1,this.visible)switch(this.viewMode){case 1:e.visible=!0;break;case 2:e.visible=!0,t.visible=!0,i.visible=!0;break;case 3:e.visible=!0}}_getLabelsText(e,{directDistance:t,horizontalDistance:i,verticalDistance:s,geodesicDistance:r,geodesicAngle:o}){const a=this.layerView.unit,n=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(a){case"metric":return n({euclideanDistance:t&&R(e,t),geodesicDistance:r&&R(e,r),horizontalDistance:i&&R(e,i),verticalDistance:s&&T(e,s)});case"imperial":return n({euclideanDistance:t&&A(e,t),geodesicDistance:r&&A(e,r),horizontalDistance:i&&A(e,i),verticalDistance:s&&U(e,s)});case"degrees":{const t=o&&O(e,o,"degrees");return n({euclideanDistance:t,geodesicDistance:t,horizontalDistance:t})}case"degrees-minutes-seconds":return n({horizontalDistance:o&&x(o)});default:return n({euclideanDistance:t&&O(e,t,a),geodesicDistance:r&&O(e,r,a),horizontalDistance:i&&O(e,i,a),verticalDistance:s&&O(e,s,a)})}}_updateSegmentStripeLength(){const e=this._measurementArrowStripeLength,t=this._segmentVisualElement;s(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}_computeViewMode(e){if(2===e){if(!this._geodesicDistanceExceeded)return 1;if(this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition))return 3}const t=this.layerView.result;if(i(t))return 1;const{verticalDistance:s,horizontalDistance:r}=t,o=s.value,a=r.value;return Math.min(o/a,a/o)<this.triangleCollapseRatioThreshold?1:2}_getActualVisualElementsOrientation(){if(s(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return 0===e?this.view.state.camera.aboveGround?1:2:e}_updateActualVisualizedMeasurement(){if(0===this.visualizedMeasurement){this.actualVisualizedMeasurement=1;const e=this.layerView.unit;"degrees"!==e&&"degrees-minutes-seconds"!==e||(this.actualVisualizedMeasurement=2),this._geodesicDistanceExceeded&&(this.actualVisualizedMeasurement=2)}else this.actualVisualizedMeasurement=this.visualizedMeasurement;return this.actualVisualizedMeasurement}_requiresGeodesicGuideAt(e){const t=this.view;if(!t.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper,r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const e=this.view,{result:t,unit:i}=this.layerView;let r=null;if(s(t)){const e=t.directDistance;switch(i){case"metric":r=e&&e.toUnit("meters");break;case"imperial":r=e&&e.toUnit(ie(e.value,e.unit));break;case"degrees":case"degrees-minutes-seconds":{const e=t.geodesicAngle;r=e&&e.toUnit("degrees");break}default:r=e&&e.toUnit(i)}}if(r){let t=1;return t=C(r.value/30),t*="degrees"===r.unit?N(e.spatialReference).metersPerDegree:se(1,r.unit,"meters"),t}return null}_updateMessageBundle(){Z("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._updateLabelText()}))}};e([o()],Ke.prototype,"_state",void 0),e([o()],Ke.prototype,"_segmentLabelDisplayedMeasurement",void 0),e([o()],Ke.prototype,"_triangleOrientationOverride",void 0),e([o()],Ke.prototype,"_geodesicDistanceExceeded",null),e([o()],Ke.prototype,"messages",void 0),e([o()],Ke.prototype,"view",void 0),e([o()],Ke.prototype,"layer",void 0),e([o()],Ke.prototype,"layerView",void 0),e([o({readOnly:!0})],Ke.prototype,"ready",null),e([o({readOnly:!0})],Ke.prototype,"visible",null),e([o()],Ke.prototype,"viewMode",void 0),e([o()],Ke.prototype,"visualizedMeasurement",void 0),e([o()],Ke.prototype,"actualVisualizedMeasurement",void 0),e([o()],Ke.prototype,"visualElementOrientation",void 0),e([o()],Ke.prototype,"triangleCollapseRatioThreshold",void 0),e([o()],Ke.prototype,"allowVisualElementsOrientationChange",null),e([o()],Ke.prototype,"labels",null),e([o()],Ke.prototype,"testData",null),e([o()],Ke.prototype,"_measurementArrowStripeLength",null),Ke=e([a("esri.views.3d.layers.DirectLineMeasurement.DirectLineMeasurementView")],Ke);const Xe=oe(1,.5,0,.75),Ye={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:Xe,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:Xe,guideLineWidth:2,guideLineColor:Xe,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},Ze=Math.cos(_(12)),et=ee(),tt=ee(),it=te(),st=te(),rt=te();let ot=class extends(l(ze)){constructor(e){super(e),this._userUnit=null,this.type="direct-line-measurement-3d",this.result=null}set unit(e){this._userUnit=e}get unit(){return r(this._userUnit,this._defaultUnit)}get viewMode(){return this._analysisView.viewMode}get visualizedMeasurement(){return this._analysisView.visualizedMeasurement}set visualizedMeasurement(e){this._analysisView.visualizedMeasurement=e}get actualVisualizedMeasurement(){return this._analysisView.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisView.visualElementOrientation}set visualElementOrientation(e){this._analysisView.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisView.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisView.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisView.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisView.triangleCollapseRatioThreshold=e}get directLabelText(){return this._analysisView.labels.direct.text}get horizontalLabelText(){return this._analysisView.labels.horizontal.text}get verticalLabelText(){return this._analysisView.labels.vertical.text}get testData(){return this._analysisView.testData}initialize(){const e=this.view,t=this.layer;this._analysisView=new Ke({view:e,layer:t,layerView:this}),this._analysisController=new Oe({view:e,layer:t,viewData:this})}destroy(){t(this._analysisController),t(this._analysisView)}whenReady(){return this._analysisView.whenReady()}whenMessages(){return this._analysisView.whenMessages()}};e([o(n)],ot.prototype,"_defaultUnit",void 0),e([o()],ot.prototype,"_userUnit",void 0),e([o()],ot.prototype,"_analysisView",void 0),e([o()],ot.prototype,"_analysisController",void 0),e([o()],ot.prototype,"type",void 0),e([o()],ot.prototype,"unit",null),e([o()],ot.prototype,"layer",void 0),e([o()],ot.prototype,"result",void 0),e([o({readOnly:!0})],ot.prototype,"viewMode",null),e([o()],ot.prototype,"visualizedMeasurement",null),e([o({readOnly:!0})],ot.prototype,"actualVisualizedMeasurement",null),e([o()],ot.prototype,"visualElementOrientation",null),e([o()],ot.prototype,"allowVisualElementsOrientationChange",null),e([o()],ot.prototype,"triangleCollapseRatioThreshold",null),e([o({readOnly:!0})],ot.prototype,"directLabelText",null),e([o({readOnly:!0})],ot.prototype,"horizontalLabelText",null),e([o({readOnly:!0})],ot.prototype,"verticalLabelText",null),e([o()],ot.prototype,"testData",null),ot=e([a("esri.views.3d.layers.DirectLineMeasurementLayerView3D")],ot);var at=ot;export default at;
