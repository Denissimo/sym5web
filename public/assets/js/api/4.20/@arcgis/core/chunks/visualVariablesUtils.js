/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{b as e}from"../core/lang.js";import{t,a as s}from"./screenUtils.js";import{a as n}from"./number2.js";import{N as o}from"./definitions.js";import{b as i}from"./enums.js";import{g as r}from"./visualVariablesUtils2.js";function l(e,t=0,s=!1){const n=e[t+3];return e[t+0]*=n,e[t+1]*=n,e[t+2]*=n,s||(e[t+3]*=255),e}function a(e){if(!e)return 0;const{r:t,g:s,b:o,a:i}=e;return n(t*i,s*i,o*i,255*i)}function u(e){if(!e)return 0;const[t,s,o,i]=e;return n(t*(i/255),s*(i/255),o*(i/255),i)}const c=(e,t)=>e&&((...e)=>t.warn("DEBUG:",...e))||(()=>null),p=!1;function f(e,t){if(!e||!t)return e;switch(t){case"radius":case"distance":return 2*e;case"diameter":case"width":return e;case"area":return Math.sqrt(e)}return e}function m(e){return e.map((e=>function(e){return{value:e.value,size:t(e.size)}}(e)))}function v(e){if("string"==typeof e||"number"==typeof e)return t(e);const s=e;return{type:"size",expression:s.expression,stops:m(s.stops)}}const g=e=>{const t=[],n=[],i=m(e),r=i.length;for(let e=0;e<6;e++){const l=i[Math.min(e,r-1)];t.push(l.value),n.push(null==l.size?o:s(l.size))}return{values:new Float32Array(t),sizes:new Float32Array(n)}};function y(e){const t=e&&e.length>0?{}:null,s=t?{}:null;if(!t)return{vvFields:t,vvRanges:s};for(const n of e)if(n.field&&(t[n.type]=n.field),"size"===n.type){s.size||(s.size={});const e=n;switch(r(e)){case i.SIZE_MINMAX_VALUE:s.size.minMaxValue={minDataValue:e.minDataValue,maxDataValue:e.maxDataValue,minSize:v(e.minSize),maxSize:v(e.maxSize)};break;case i.SIZE_SCALE_STOPS:s.size.scaleStops={stops:m(e.stops)};break;case i.SIZE_FIELD_STOPS:if(e.levels){const t={};for(const s in e.levels)t[s]=g(e.levels[s]);s.size.fieldStops={type:"level-dependent",levels:t}}else s.size.fieldStops={type:"static",...g(e.stops)};break;case i.SIZE_UNIT_VALUE:s.size.unitValue={unit:e.valueUnit,valueRepresentation:e.valueRepresentation}}}else if("color"===n.type)s.color=z(n);else if("opacity"===n.type)s.opacity=d(n);else if("rotation"===n.type){const e=n;s.rotation={type:e.rotationType}}return{vvFields:t,vvRanges:s}}function d(e){const t={values:[0,0,0,0,0,0,0,0],opacities:[0,0,0,0,0,0,0,0]};if("string"==typeof e.field){if(!e.stops)return null;{if(e.stops.length>8)return null;const s=e.stops;for(let e=0;e<8;++e){const n=s[Math.min(e,s.length-1)];t.values[e]=n.value,t.opacities[e]=n.opacity}}}else{if(!(e.stops&&e.stops.length>=0))return null;{const s=e.stops&&e.stops.length>=0&&e.stops[0].opacity;for(let e=0;e<8;e++)t.values[e]=1/0,t.opacities[e]=s}}return t}function h(e,t,s){e[4*t+0]=s.r/255,e[4*t+1]=s.g/255,e[4*t+2]=s.b/255,e[4*t+3]=s.a}function z(t){if(e(t))return null;if(t.normalizationField)return null;const s={field:null,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};if("string"==typeof t.field){if(!t.stops)return null;{if(t.stops.length>8)return null;s.field=t.field;const e=t.stops;for(let t=0;t<8;++t){const n=e[Math.min(t,e.length-1)];s.values[t]=n.value,h(s.colors,t,n.color)}}}else{if(!(t.stops&&t.stops.length>=0))return null;{const e=t.stops&&t.stops.length>=0&&t.stops[0].color;for(let t=0;t<8;t++)s.values[t]=1/0,h(s.colors,t,e)}}for(let e=0;e<32;e+=4)l(s.colors,e,!0);return s}export{p as D,a,y as b,c,f as g,u as p};
