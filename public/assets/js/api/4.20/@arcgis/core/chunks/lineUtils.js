/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{b as e,p as t,G as r,s as i,e as s,j as a,c as o,q as n,f as d,g as l,n as h,i as c,d as u}from"./mathUtils.js";import{l as m,i as p,b as g,f,k as _,d as v,u as y,s as w}from"../core/lang.js";import{projectBuffer as R}from"../geometry/projection.js";import{p as T}from"./triangulationUtils.js";import{O as b,Z as C}from"./vec4f64.js";import{R as S,a as x}from"./RibbonLineMaterial.js";import{_ as E}from"./tslib.es6.js";import O,{s as M}from"../core/Accessor.js";import D from"../core/Handles.js";import{L as I}from"./Logger.js";import{s as P}from"./MapUtils.js";import{P as A,a as L}from"../core/scheduling.js";import{init as H}from"../core/watchUtils.js";import{property as F}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as z}from"../core/accessorSupport/decorators/subclass.js";import{c as N,e as G,m as V,o as j,i as U,t as W}from"./mat4.js";import{a as B}from"./vec2f64.js";import{s as k}from"./vec4.js";import{a as q,o as Z,s as Q}from"./aaBoundingRect.js";import{c as $}from"./vec2f32.js";import{m as Y,c as X,d as J,V as K,B as ee,f as te,s as re,v as ie}from"./VertexArrayObject.js";import{F as se}from"./FramebufferObject.js";import{T as ae}from"./Texture.js";import{a0 as oe,g as ne,z as de,S as le,T as he,y as ce,B as ue,m as me,C as pe,n as ge,p as fe,a as _e,b as ve,P as ye,D as we,c as Re,X as Te,E as be,a1 as Ce,a2 as Se,a3 as xe,F as Ee,G as Oe,H as Me,a4 as De,a5 as Ie,R as Pe,a6 as Ae,Z as Le,u as He,$ as Fe,_ as ze,d as Ne}from"./VertexColor.glsl.js";import{C as Ge}from"./Camera.js";import{a as Ve,s as je}from"./Util.js";import{I as Ue,b as We,c as Be}from"./mat4f64.js";import{O as ke}from"./Object3D.js";import{W as qe,S as Ze}from"./ColorMaterial.js";import{a as Qe}from"./Intersector.js";import{g as $e}from"./glUtil.js";import{P as Ye,F as Xe,R as Je,b as Ke}from"./PhysicallyBasedRendering.glsl.js";import{b as et,c as tt,d as rt}from"./utils4.js";import{o as it}from"./metadata.js";import{T as st,n as at}from"./Scheduler.js";class ot{constructor(t=e()){this.intensity=t}}class nt{constructor(r=e(),i=t(.57735,.57735,.57735)){this.intensity=r,this.direction=i}}class dt{constructor(r=e(),i=t(.57735,.57735,.57735),s=!0){this.intensity=r,this.direction=i,this.castShadows=s}}class lt{constructor(){this.r=[0],this.g=[0],this.b=[0]}}let ht=class extends O{constructor(){super(...arguments),this.SCENEVIEW_HITTEST_RETURN_INTERSECTOR=!1,this.SCENEVIEW_LOCKING_LOG=!1,this.HIGHLIGHTS_GRID_OPTIMIZATION_ENABLED=!0,this.HIGHLIGHTS_PROFILE_TO_CONSOLE=!1,this.DECONFLICTOR_SHOW_VISIBLE=!1,this.DECONFLICTOR_SHOW_INVISIBLE=!1,this.DECONFLICTOR_SHOW_GRID=!1,this.LABELS_SHOW_BORDER=!1,this.OVERLAY_DRAW_DEBUG_TEXTURE=!1,this.OVERLAY_SHOW_CENTER=!1,this.SHOW_POI=!1,this.TESTS_DISABLE_UPDATE_THRESHOLDS=!1,this.DISABLE_DECONFLICTOR_VISIBILITY_OFFSET=!1,this.DISABLE_ELEVATION_ALIGNERS_ITERATIVE_UPDATES=!1,this.DRAW_MESH_GEOMETRY_NORMALS=!1,this.FEATURE_TILE_FETCH_SHOW_TILES=!1,this.FEATURE_TILE_TREE_SHOW_TILES=!1,this.TERRAIN_TILE_TREE_SHOW_TILES=!1,this.I3S_TREE_SHOW_TILES=!1,this.I3S_SHOW_MODIFICATIONS=!1,this.ENABLE_PROFILE_DEPTH_RANGE=!1,this.DISABLE_FAST_UPDATES=!1,this.LOD_INSTANCE_RENDERER_DISABLE_UPDATES=!1,this.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL=!1,this.EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES=!1}};E([F()],ht.prototype,"SCENEVIEW_HITTEST_RETURN_INTERSECTOR",void 0),E([F()],ht.prototype,"SCENEVIEW_LOCKING_LOG",void 0),E([F()],ht.prototype,"HIGHLIGHTS_GRID_OPTIMIZATION_ENABLED",void 0),E([F()],ht.prototype,"HIGHLIGHTS_PROFILE_TO_CONSOLE",void 0),E([F()],ht.prototype,"DECONFLICTOR_SHOW_VISIBLE",void 0),E([F()],ht.prototype,"DECONFLICTOR_SHOW_INVISIBLE",void 0),E([F()],ht.prototype,"DECONFLICTOR_SHOW_GRID",void 0),E([F()],ht.prototype,"LABELS_SHOW_BORDER",void 0),E([F()],ht.prototype,"OVERLAY_DRAW_DEBUG_TEXTURE",void 0),E([F()],ht.prototype,"OVERLAY_SHOW_CENTER",void 0),E([F()],ht.prototype,"SHOW_POI",void 0),E([F()],ht.prototype,"TESTS_DISABLE_UPDATE_THRESHOLDS",void 0),E([F()],ht.prototype,"DISABLE_DECONFLICTOR_VISIBILITY_OFFSET",void 0),E([F()],ht.prototype,"DISABLE_ELEVATION_ALIGNERS_ITERATIVE_UPDATES",void 0),E([F()],ht.prototype,"DRAW_MESH_GEOMETRY_NORMALS",void 0),E([F()],ht.prototype,"FEATURE_TILE_FETCH_SHOW_TILES",void 0),E([F()],ht.prototype,"FEATURE_TILE_TREE_SHOW_TILES",void 0),E([F()],ht.prototype,"TERRAIN_TILE_TREE_SHOW_TILES",void 0),E([F()],ht.prototype,"I3S_TREE_SHOW_TILES",void 0),E([F()],ht.prototype,"I3S_SHOW_MODIFICATIONS",void 0),E([F()],ht.prototype,"ENABLE_PROFILE_DEPTH_RANGE",void 0),E([F()],ht.prototype,"DISABLE_FAST_UPDATES",void 0),E([F()],ht.prototype,"LOD_INSTANCE_RENDERER_DISABLE_UPDATES",void 0),E([F()],ht.prototype,"LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL",void 0),E([F()],ht.prototype,"EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES",void 0),ht=E([z("esri.views.3d.support.DebugFlags")],ht);const ct=new ht;class ut{constructor(e,t){this.vec3=e,this.id=t}}function mt(e,r,i,s){return new ut(t(e,r,i),s)}class pt{constructor(e,t){this.index=e,this.renderTargets=t,this.extent=q(),this.resolution=0,this.viewport=q(),this.renderLocalOrigin=mt(0,0,0,"O"),this.pixelRatio=1,this.canvasGeometries={extents:[q(),q(),q()],numViews:0},this.validTargets=null,this.hasDrapedFeatureSource=!1,this.hasDrapedRasterSource=!1,this.hasTargetWithoutRasterImage=!1,this.index=e,this.validTargets=new Array(t.renderTargets.length).fill(!1)}getValidTarget(e){return this.validTargets[e]?this.renderTargets.getTarget(e):null}get needsColorWithoutRasterImage(){return this.hasDrapedRasterSource&&this.hasDrapedFeatureSource&&this.hasTargetWithoutRasterImage}getColorTexture(e){const t=1===e?this.renderTargets.getTarget(0):2===e?this.renderTargets.getTarget(2):this.renderTargets.getTarget(4);return t?t.getTexture():null}getNormalTexture(e){const t=1===e?this.renderTargets.getTarget(3):null;return t?t.getTexture():null}draw(e,t){const r=this.computeRenderTargetValidityBitfield(),i=this.needsColorWithoutRasterImage;for(const r of this.renderTargets.renderTargets)1===r.type&&!1===i?this.validTargets[r.type]=!1:this.validTargets[r.type]=e.drawTarget(this,r,t);return r^this.computeRenderTargetValidityBitfield()?0:1}computeRenderTargetValidityBitfield(){const e=this.validTargets;return+e[0]|+e[1]<<1|+e[2]<<2|+e[3]<<3|+e[4]<<4}setupGeometryViewsCyclical(e){this.setupGeometryViewsDirect();const t=.001*e.range;if(this.extent[0]-t<=e.min){const t=this.canvasGeometries.extents[this.canvasGeometries.numViews++];Z(this.extent,e.range,0,t)}if(this.extent[2]+t>=e.max){const t=this.canvasGeometries.extents[this.canvasGeometries.numViews++];Z(this.extent,-e.range,0,t)}}setupGeometryViewsDirect(){this.canvasGeometries.numViews=1,Q(this.canvasGeometries.extents[0],this.extent),k(this.viewport,0,0,this.resolution,this.resolution)}hasSomeSizedView(){for(let e=0;e<this.canvasGeometries.numViews;e++){const t=this.canvasGeometries.extents[e];if(t[0]!==t[2]&&t[1]!==t[3])return!0}return!1}applyViewport(e){const t=this.viewport;0===this.index?e.setViewport(t[0],t[1],t[2],t[3]):e.setViewport(t[0]+this.resolution,t[1],t[2],t[3])}}function gt(e,t,i){return Math.min(r(Math.max(e,t)+256),i)}class ft{constructor(e,t){this.size=$(),this._fbo=null,this._fbo=new se(e,{colorTarget:0,depthStencilTarget:0},{target:3553,pixelFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9987,hasMipmap:t,maxAnisotropy:8,width:0,height:0})}dispose(){this._fbo=m(this._fbo)}getTexture(){return this._fbo?this._fbo.colorTexture:null}isValid(){return null!==this._fbo}resize(e,t){this.size[0]=e,this.size[1]=t,this._fbo.resize(this.size[0],this.size[1])}bind(e){e.bindFramebuffer(this._fbo)}generateMipMap(){this._fbo.colorTexture.descriptor.hasMipmap&&this._fbo.colorTexture.generateMipmap()}disposeRenderTargetMemory(){var e;null==(e=this._fbo)||e.resize(0,0)}get gpuMemoryUsage(){var e,t;return null!=(e=null==(t=this._fbo)?void 0:t.gpuMemoryUsage)?e:0}}class _t{constructor(e){this.renderTargets=null;const t=(t,r,i=!0)=>({type:r,fbo:new ft(e,i),renderPass:t,valid:!1,lastUsed:1/0});this.renderTargets=[t(0,0),t(0,1),t(5,2,!1),t(3,3),t(0,4)]}getTarget(e){return this.renderTargets[e].fbo}dispose(){for(const e of this.renderTargets)e.fbo.dispose()}disposeRenderTargetMemory(){for(const e of this.renderTargets)e.fbo.disposeRenderTargetMemory()}validateUsageForTarget(e,t,r){if(e)t.lastUsed=r;else if(r-t.lastUsed>vt)t.fbo.disposeRenderTargetMemory(),t.lastUsed=1/0;else if(t.lastUsed<1/0)return!0;return!1}get gpuMemoryUsage(){return this.renderTargets.reduce(((e,t)=>e+t.fbo.gpuMemoryUsage),0)}}const vt=1e3;class yt{constructor(e){this.technique=e,this.refCount=0,this.refZeroFrame=0}}class wt{constructor(e){this._context=e,this._perConstructorInstances=new Map,this._frameCounter=0,this._keepAliveFrameCount=1200}get viewingMode(){return this._context.viewingMode}get constructionContext(){return this._context}dispose(){this._perConstructorInstances.forEach((e=>e.forEach((e=>e.technique.dispose())))),this._perConstructorInstances.clear()}acquire(e,t){const r=t.key;let i=this._perConstructorInstances.get(e);i||(i=new Map,this._perConstructorInstances.set(e,i));let s=i.get(r);if(void 0===s){const a=new e(this._context,t,(()=>this.release(a)));s=new yt(a),i.set(r,s)}return++s.refCount,s.technique}releaseAndAcquire(e,t,r){if(p(r)){if(t.key===r.key)return r;r.release()}return this.acquire(e,t)}release(e){if(g(e))return;const t=this._perConstructorInstances.get(e.constructor).get(e.key);--t.refCount,0===t.refCount&&(t.refZeroFrame=this._frameCounter)}frameUpdate(){this._frameCounter++,this._perConstructorInstances.forEach(((e,t)=>{e.forEach(((t,r)=>{0===t.refCount&&t.refZeroFrame+this._keepAliveFrameCount<this._frameCounter&&(t.technique.dispose(),e.delete(r))})),0===e.size&&this._perConstructorInstances.delete(t)}))}async hotReload(){const e=new Array;this._perConstructorInstances.forEach(((t,r)=>{e.push((async(e,t)=>{const r=t.shader;r&&(await r.reload(),e.forEach((e=>{e.technique.reload(this._context)})))})(t,r))})),await Promise.all(e)}}const Rt=[{output:0,name:"color"},{output:1,name:"depth"},{output:2,name:"normal"},{output:3,name:"depthShadowMap"},{output:4,name:"highlight"},{output:5,name:"draped"},{output:6,name:"occlusion"},{output:7,name:"alpha"}];function Tt(e,t){return e+"_"+Rt.find((e=>e.output===t)).name}const bt=I.getLogger("esri.views.3d.webgl-engine.lib.GLMaterialRep");class Ct{constructor(e){this.refCnt=0,this.glMaterial=e}incRefCnt(){++this.refCnt}decRefCnt(){--this.refCnt,Ve(this.refCnt>=0)}getRefCnt(){return this.refCnt}getGLMaterial(){return this.glMaterial}}class St{constructor(e,t,r){this._textureRep=e,this._techniqueRep=t,this.onMaterialChanged=r,this._id2glMaterialRef=new Map}dispose(){this._textureRep.dispose()}acquire(e,t){this.ownMaterial(e);const r=Tt(e.id,t);let i=this._id2glMaterialRef.get(r);if(null==i){const s=e.getGLMaterial({material:e,techniqueRep:this._techniqueRep,textureRep:this._textureRep,output:t});return i=new Ct(s),i.incRefCnt(),this._id2glMaterialRef.set(r,i),s}return i.incRefCnt(),i.getGLMaterial()}release(e,t){const r=Tt(e.id,t),i=this._id2glMaterialRef.get(r);if(i.decRefCnt(),0===i.getRefCnt()){const e=i.getGLMaterial();e&&e.dispose(),this._id2glMaterialRef.delete(r)}}materialChanged(e){for(const t of Rt)if(5!==t.output&&6!==t.output){const r=this._id2glMaterialRef.get(Tt(e.id,t.output));if(r&&r.getGLMaterial()){const e=r.getGLMaterial();e.updateParameters&&e.updateParameters()}}this.onMaterialChanged&&this.onMaterialChanged(e)}ownMaterial(e){p(e.materialRepository)&&e.materialRepository!==this&&bt.error("Material is already owned by a different material repository"),e.materialRepository=this}}let xt=0;class Et{constructor(e){this._originSR=e,this.ROOT_ORIGIN_ID="rg_root_"+xt++,this._origins=new Map,this._gridSize=125e4,this._objects=new Map}getOrigin(e){const t=this._origins.get(this.ROOT_ORIGIN_ID);if(null==t){if(p(Ot))return this._origins.set(this.ROOT_ORIGIN_ID,mt(Ot[0],Ot[1],Ot[2],this.ROOT_ORIGIN_ID)),this.getOrigin(e);const t=mt(e[0]+Math.random()-.5,e[1]+Math.random()-.5,e[2]+Math.random()-.5,this.ROOT_ORIGIN_ID);return this._origins.set(this.ROOT_ORIGIN_ID,t),t}const r=this._gridSize,s=Math.round(e[0]/r),a=Math.round(e[1]/r),o=Math.round(e[2]/r),n=`rg_${s}/${a}/${o}`;let d=this._origins.get(n);const l=.5*r;if(i(Mt,e,t.vec3),Mt[0]=Math.abs(Mt[0]),Mt[1]=Math.abs(Mt[1]),Mt[2]=Math.abs(Mt[2]),Mt[0]<l&&Mt[1]<l&&Mt[2]<l){if(d){const t=Math.max(...Mt);i(Mt,e,d.vec3),Mt[0]=Math.abs(Mt[0]),Mt[1]=Math.abs(Mt[1]),Mt[2]=Math.abs(Mt[2]);if(Math.max(...Mt)<t)return d}return t}return d||(d=mt(s*r,a*r,o*r,n),this._origins.set(n,d)),d}_drawOriginBox(e,t=[1,1,0,1]){const r=window.view,i=r._stage,s=t.toString();if(!this._objects.has(s)){this._material=new S({width:2,color:t}),i.add(this._material);const e=new qe({isPickable:!1}),r=new ke({castShadow:!1});i.add(r),e.add(r),i.add(e),this._objects.set(s,r)}const a=this._objects.get(s),o=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],n=o.length,d=new Array(3*n),l=new Uint16Array(2*(n-1)),h=.5*this._gridSize;for(let t=0;t<n;t++)d[3*t+0]=e[0]+(1&o[t]?h:-h),d[3*t+1]=e[1]+(2&o[t]?h:-h),d[3*t+2]=e[2]+(4&o[t]?h:-h),t>0&&(l[2*t+0]=t-1,l[2*t+1]=t);R(d,this._originSR,0,d,r.renderSpatialReference,0,n);const c=new oe([["position",{size:3,data:d,exclusive:!0}]],[["position",l]],2);i.add(c),a.addGeometry(c,this._material,Ue)}get test(){const e=this;return{get gridSize(){return e._gridSize},set gridSize(t){e._gridSize=t}}}}let Ot=null;const Mt=e();class Dt{constructor(e){this.rctx=e,this.camera=null,this.lastFrameCamera=new Ge,this.pass=0,this.slot=0,this.highlightDepthTexture=null,this.renderOccludedMask=Pt,this.hasOccludees=!1}resetRenderOccludedMask(){this.renderOccludedMask=Pt}get isHighlightPass(){return 5===this.pass}}class It extends Dt{constructor(e,t,r,i,s,a){super(e),this.offscreenRenderingHelper=t,this.scenelightingData=r,this.shadowMap=i,this.ssaoHelper=s,this.sliceHelper=a}}const Pt=13;class At{constructor(){this.adds=new A,this.removes=new A,this.updates=new A({allocator:e=>e||new Lt,deallocator:e=>(e.renderGeometry=null,e)})}clear(){this.adds.clear(),this.removes.clear(),this.updates.clear()}prune(){this.adds.prune(),this.removes.prune(),this.updates.prune()}}class Lt{}class Ht{constructor(){this.adds=new Array,this.removes=new Array,this.updates=new Array}}function Ft(e){const t=new Map,r=e=>{let r=t.get(e);return r||(r=new Ht,t.set(e,r)),r};return e.adds.forAll((e=>{zt(e)&&r(e.material).adds.push(e)})),e.removes.forAll((e=>{zt(e)&&r(e.material).removes.push(e)})),e.updates.forAll((e=>{zt(e.renderGeometry)&&r(e.renderGeometry.material).updates.push(e)})),t}function zt(e){return e.data.indexCount>=1}class Nt{constructor(e){null==e?e=16:e<65536&&(e=r(e)),this._array=new Float32Array(e),this._size=0}resize(e,t){if(this._size=e,this._size>this._array.length){let e=this._array.length||1;for(;e<this._size;)e*=2;const r=new Float32Array(e);return t&&r.set(this._array),this._array=r,!0}const r=2*this._size;if(r<=this._array.length){let e=this._array.length;for(;e>=r;)e=Math.floor(e/2);const i=new Float32Array(e);return t&&i.set(this._array.subarray(0,e)),this._array=i,!0}return!1}append(e){const t=this._size;this.resize(this._size+e.length,!0),this._array.set(e,t)}erase(e,t){for(let r=e;r<t;++r)this._array[r]=0}get array(){return this._array}get size(){return this._size}}function Gt(e){e.fragment.uniforms.add("lastFrameColorMap","sampler2D"),e.fragment.uniforms.add("reprojectionMat","mat4"),e.fragment.uniforms.add("rpProjectionMat","mat4"),e.fragment.code.add(ne`vec2 reprojectionCoordinate(vec3 projectionCoordinate)
{
vec4 zw = rpProjectionMat * vec4(0.0, 0.0, -projectionCoordinate.z, 1.0);
vec4 reprojectedCoord = reprojectionMat * vec4(zw.w * (projectionCoordinate.xy * 2.0 - 1.0), zw.z, zw.w);
reprojectedCoord.xy /= reprojectedCoord.w;
return reprojectedCoord.xy * 0.5 + 0.5;
}`)}function Vt(e,t){e.fragment.uniforms.add("nearFar","vec2"),e.fragment.uniforms.add("depthMapView","sampler2D"),e.fragment.uniforms.add("ssrViewMat","mat4"),e.fragment.uniforms.add("invResolutionHeight","float"),e.fragment.include(de),e.include(Gt),e.fragment.code.add(ne`
  const int maxSteps = ${t.highStepCount?"150;":"75;"}

  vec4 applyProjectionMat(mat4 projectionMat, vec3 x)
  {
    vec4 projectedCoord =  projectionMat * vec4(x, 1.0);
    projectedCoord.xy /= projectedCoord.w;
    projectedCoord.xy = projectedCoord.xy*0.5 + 0.5;
    return projectedCoord;
  }

  vec3 screenSpaceIntersection(vec3 dir, vec3 startPosition, vec3 viewDir, vec3 normal)
  {
    vec3 viewPos = startPosition;
    vec3 viewPosEnd = startPosition;

    // Project the start position to the screen
    vec4 projectedCoordStart = applyProjectionMat(rpProjectionMat, viewPos);
    vec3  Q0 = viewPos / projectedCoordStart.w; // homogeneous camera space
    float k0 = 1.0/ projectedCoordStart.w;

    // advance the position in the direction of the reflection
    viewPos += dir;

    vec4 projectedCoordVanishingPoint = applyProjectionMat(rpProjectionMat, dir);

    // Project the advanced position to the screen
    vec4 projectedCoordEnd = applyProjectionMat(rpProjectionMat, viewPos);
    vec3  Q1 = viewPos / projectedCoordEnd.w; // homogeneous camera space
    float k1 = 1.0/ projectedCoordEnd.w;

    // calculate the reflection direction in the screen space
    vec2 projectedCoordDir = (projectedCoordEnd.xy - projectedCoordStart.xy);
    vec2 projectedCoordDistVanishingPoint = (projectedCoordVanishingPoint.xy - projectedCoordStart.xy);

    float yMod = min(abs(projectedCoordDistVanishingPoint.y), 1.0);

    float projectedCoordDirLength = length(projectedCoordDir);
    float maxSt = float(maxSteps);

    // normalize the projection direction depending on maximum steps
    // this determines how blocky the reflection looks
    vec2 dP = yMod * (projectedCoordDir)/(maxSt * projectedCoordDirLength);

    // Normalize the homogeneous camera space coordinates
    vec3  dQ = yMod * (Q1 - Q0)/(maxSt * projectedCoordDirLength);
    float dk = yMod * (k1 - k0)/(maxSt * projectedCoordDirLength);

    // initialize the variables for ray marching
    vec2 P = projectedCoordStart.xy;
    vec3 Q = Q0;
    float k = k0;
    float rayStartZ = -startPosition.z; // estimated ray start depth value
    float rayEndZ = -startPosition.z;   // estimated ray end depth value
    float prevEstimateZ = -startPosition.z;
    float rayDiffZ = 0.0;
    float dDepth;
    float depth;
    float rayDiffZOld = 0.0;

    // early outs
    if (dot(normal, dir) < 0.0 || dot(-viewDir, normal) < 0.0)
      return vec3(P, 0.0);

    for(int i = 0; i < maxSteps-1; i++)
    {
      depth = -linearDepthFromTexture(depthMapView, P, nearFar); // get linear depth from the depth buffer

      // estimate depth of the marching ray
      rayStartZ = prevEstimateZ;
      dDepth = -rayStartZ - depth;
      rayEndZ = (dQ.z * 0.5 + Q.z)/ ((dk * 0.5 + k));
      rayDiffZ = rayEndZ- rayStartZ;
      prevEstimateZ = rayEndZ;

      if(-rayEndZ > nearFar[1] || -rayEndZ < nearFar[0] || P.y < 0.0  || P.y > 1.0 )
      {
        return vec3(P, 0.);
      }

      // If we detect a hit - return the intersection point, two conditions:
      //  - dDepth > 0.0 - sampled point depth is in front of estimated depth
      //  - if difference between dDepth and rayDiffZOld is not too large
      //  - if difference between dDepth and 0.025/abs(k) is not too large
      //  - if the sampled depth is not behind far plane or in front of near plane

      if((dDepth) < 0.025/abs(k) + abs(rayDiffZ) && dDepth > 0.0 && depth > nearFar[0] && depth < nearFar[1] && abs(P.y - projectedCoordStart.y) > invResolutionHeight)
      {
          return vec3(P, depth);
      }

      // continue with ray marching
      P += dP;
      Q.z += dQ.z;
      k += dk;
      rayDiffZOld = rayDiffZ;
    }
    return vec3(P, 0.0);
  }
  `)}function jt(e,t){t.ssrEnabled&&(e.bindTexture(t.linearDepthTexture,"depthMapView"),e.setUniform2fv("nearFar",t.camera.nearFar),e.setUniformMatrix4fv("ssrViewMat",t.camera.viewMatrix),e.setUniform1f("invResolutionHeight",1/t.camera.height),function(e,t){e.bindTexture(t.lastFrameColorTexture,"lastFrameColorMap"),e.setUniformMatrix4fv("reprojectionMat",t.reprojectionMat),e.setUniformMatrix4fv("rpProjectionMat",t.camera.projectionMatrix)}(e,t))}function Ut(e){e.fragment.code.add(ne`float normals2FoamIntensity(vec3 n, float waveStrength){
float normalizationFactor =  max(0.015, waveStrength);
return max((n.x + n.y)*0.3303545/normalizationFactor + 0.3303545, 0.0);
}`)}function Wt(e){e.fragment.code.add(ne`vec3 foamIntensity2FoamColor(float foamIntensityExternal, float foamPixelIntensity, vec3 skyZenitColor, float dayMod){
return foamIntensityExternal * (0.075 * skyZenitColor * pow(foamPixelIntensity, 4.) +  50.* pow(foamPixelIntensity, 23.0)) * dayMod;
}`)}function Bt(e){e.fragment.uniforms.add("texWaveNormal","sampler2D"),e.fragment.uniforms.add("texWavePerturbation","sampler2D"),e.fragment.uniforms.add("waveParams","vec4"),e.fragment.uniforms.add("waveDirection","vec2"),e.include(Ut),e.fragment.code.add(ne`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);
vec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {
return 2.0 * texture2D(_tex, _uv).rg - 1.0;
}
float sampleNoiseTexture(vec2 _uv) {
return texture2D(texWavePerturbation, _uv).b;
}
vec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {
return 2.0 * texture2D(_tex, _uv).rgb - 1.0;
}
float computeProgress(vec2 uv, float time) {
return fract(time);
}
float computeWeight(vec2 uv, float time) {
float progress = computeProgress(uv, time);
return 1.0 - abs(1.0 - 2.0 * progress);
}
vec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {
float flowStrength = waveParams[2];
float flowOffset = waveParams[3];
vec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;
float progress = computeProgress(uv, time + phaseOffset);
float weight = computeWeight(uv, time + phaseOffset);
vec2 result = uv;
result -= flowVector * (progress + flowOffset);
result += phaseOffset;
result += (time - progress) * FLOW_JUMP;
return vec3(result, weight);
}
const float TIME_NOISE_TEXTURE_REPEAT = 0.3737;
const float TIME_NOISE_STRENGTH = 7.77;
vec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {
float waveStrength = waveParams[0];
vec2 waveMovement = time * -_waveDir;
float timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;
vec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);
vec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);
vec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;
vec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;
vec3 mixNormal = normalize(normal_A + normal_B);
mixNormal.xy *= waveStrength;
mixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));
return mixNormal;
}
vec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {
float waveTextureRepeat = waveParams[1];
vec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);
float foam  = normals2FoamIntensity(normal, waveParams[0]);
return vec4(normal, foam);
}`)}function kt(e,t){1===t.viewingMode?e.vertex.code.add(ne`vec3 getLocalUp(in vec3 pos, in vec3 origin) {
return normalize(pos + origin);
}`):e.vertex.code.add(ne`vec3 getLocalUp(in vec3 pos, in vec3 origin) {
return vec3(0.0, 0.0, 1.0);
}`),1===t.viewingMode?e.vertex.code.add(ne`mat3 getTBNMatrix(in vec3 n) {
vec3 t = normalize(cross(vec3(0.0, 0.0, 1.0), n));
vec3 b = normalize(cross(n, t));
return mat3(t, b, n);
}`):e.vertex.code.add(ne`mat3 getTBNMatrix(in vec3 n) {
vec3 t = vec3(1.0, 0.0, 0.0);
vec3 b = normalize(cross(n, t));
return mat3(t, b, n);
}`)}function qt(e){e.fragment.code.add(ne`const float GAMMA = 2.2;
const float INV_GAMMA = 0.4545454545;
vec4 delinearizeGamma(vec4 color) {
return vec4(pow(color.rgb, vec3(INV_GAMMA)), color.w);
}
vec3 linearizeGamma(vec3 color) {
return pow(color, vec3(GAMMA));
}`)}function Zt(e,t){e.include(Ye,t),e.include(qt),e.include(Wt),t.ssrEnabled&&e.include(Vt,t),e.fragment.constants.add("fresnelSky","vec3",[.02,1,15]).add("fresnelMaterial","vec2",[.02,.1]).add("roughness","float",.015).add("foamIntensityExternal","float",1.7).add("ssrIntensity","float",.65).add("ssrHeightFadeStart","float",3e5).add("ssrHeightFadeEnd","float",5e5).add("waterDiffusion","float",.775).add("waterSeeColorMod","float",.8).add("correctionViewingPowerFactor","float",.4).add("skyZenitColor","vec3",[.52,.68,.9]).add("skyColor","vec3",[.67,.79,.9]),e.fragment.code.add(ne`PBRShadingWater shadingInfo;
vec3 getSkyGradientColor(in float cosTheta, in vec3 horizon, in vec3 zenit) {
float exponent = pow((1.0 - cosTheta), fresnelSky[2]);
return mix(zenit, horizon, exponent);
}`),e.fragment.code.add(ne`vec3 getSeaColor(in vec3 n, in vec3 v, in vec3 l, vec3 color, in vec3 lightIntensity, in vec3 localUp, in float shadow, float foamIntensity, vec3 positionView) {
float reflectionHit = 0.;
vec3 seaWaterColor = linearizeGamma(color);
vec3 h = normalize(l + v);
shadingInfo.NdotL = clamp(dot(n, l), 0.0, 1.0);
shadingInfo.NdotV = clamp(dot(n, v), 0.001, 1.0);
shadingInfo.VdotN = clamp(dot(v, n), 0.001, 1.0);
shadingInfo.NdotH = clamp(dot(n, h), 0.0, 1.0);
shadingInfo.VdotH = clamp(dot(v, h), 0.0, 1.0);
shadingInfo.LdotH = clamp(dot(l, h), 0.0, 1.0);
float upDotV = max(dot(localUp,v), 0.0);
vec3 skyHorizon = linearizeGamma(skyColor);
vec3 skyZenit = linearizeGamma(skyZenitColor);
vec3 skyColor = getSkyGradientColor(upDotV, skyHorizon, skyZenit );
float upDotL = max(dot(localUp,l),0.0);
float daytimeMod = 0.1 + upDotL * 0.9;
skyColor *= daytimeMod;
float shadowModifier = clamp(shadow, 0.8, 1.0);
vec3 fresnelModifier = fresnelReflection(shadingInfo.VdotN, vec3(fresnelSky[0]), fresnelSky[1]);
vec3 reflSky = fresnelModifier * skyColor * shadowModifier;
vec3 reflSea = seaWaterColor * mix(skyColor, upDotL * lightIntensity * LIGHT_NORMALIZATION, 2.0 / 3.0) * shadowModifier;
vec3 specular = vec3(0.0);
if(upDotV > 0.0 && upDotL > 0.0) {
vec3 specularSun = brdfSpecularWater(shadingInfo, roughness, vec3(fresnelMaterial[0]), fresnelMaterial[1]);
vec3 incidentLight = lightIntensity * LIGHT_NORMALIZATION * shadow;
specular = shadingInfo.NdotL * incidentLight * specularSun;
}
vec3 foam = vec3(0.0);
if(upDotV > 0.0) {
foam = foamIntensity2FoamColor(foamIntensityExternal, foamIntensity, skyZenitColor, daytimeMod);
}`),t.ssrEnabled?e.fragment.code.add(ne`vec4 viewPosition = vec4(positionView.xyz, 1.0);
vec3 viewDir = normalize(viewPosition.xyz);
vec4 viewNormalVectorCoordinate = ssrViewMat *vec4(n, 0.0);
vec3 viewNormal = normalize(viewNormalVectorCoordinate.xyz);
vec4 viewUp = ssrViewMat *vec4(localUp, 0.0);
float correctionViewingFactor = pow(max(dot(-viewDir, viewUp.xyz), 0.0), correctionViewingPowerFactor);
vec3 viewNormalCorrected = mix(viewUp.xyz, viewNormal, correctionViewingFactor);
vec3 reflected = normalize(reflect(viewDir, viewNormalCorrected));
vec3 hitCoordinate = screenSpaceIntersection( normalize(reflected), viewPosition.xyz, viewDir, viewUp.xyz);
vec3 reflectedColor = vec3(0.0);
if (hitCoordinate.z > 0.0)
{
vec2 reprojectedCoordinate = reprojectionCoordinate(hitCoordinate);
vec2 dCoords = smoothstep(0.3, 0.6, abs(vec2(0.5, 0.5) - hitCoordinate.xy));
float heightMod = smoothstep(ssrHeightFadeEnd, ssrHeightFadeStart, -positionView.z);
reflectionHit = waterDiffusion * clamp(1.0 - (1.3*dCoords.y), 0.0, 1.0) * heightMod;
reflectedColor = linearizeGamma(texture2D(lastFrameColorMap, reprojectedCoordinate).xyz)* reflectionHit * fresnelModifier.y * ssrIntensity;
}
float seeColorMod =  mix(waterSeeColorMod, waterSeeColorMod*0.5, reflectionHit);
return tonemapACES((1. - reflectionHit) * reflSky + reflectedColor + reflSea * seeColorMod + specular + foam);
}`):e.fragment.code.add(ne`return tonemapACES(reflSky + reflSea * waterSeeColorMod + specular + foam);
}`)}var Qt=Object.freeze({__proto__:null,build:function(e){const t=new le;return t.include(he,{linearDepth:!1}),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4").add("localOrigin","vec3"),t.vertex.uniforms.add("waterColor","vec4"),0!==e.output&&7!==e.output||(t.include(kt,e),t.include(Xe,e),t.varyings.add("vuv","vec2"),t.varyings.add("vpos","vec3"),t.varyings.add("vnormal","vec3"),t.varyings.add("vtbnMatrix","mat3"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(ne`
      void main(void) {
        if (waterColor.a < ${ne.float(ce)}) {
          // Discard this vertex
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          return;
        }

        vuv = uv0;
        vpos = position;

        vnormal = getLocalUp(vpos, localOrigin);
        vtbnMatrix = getTBNMatrix(vnormal);

        ${e.multipassTerrainEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}

        gl_Position = transformPosition(proj, view, vpos);
        ${0===e.output?"forwardLinearDepth();":""}
      }
    `)),e.multipassTerrainEnabled&&(t.fragment.include(de),t.include(ue,e)),7===e.output&&(t.include(me,e),t.fragment.uniforms.add("waterColor","vec4"),t.fragment.code.add(ne`
        void main() {
          discardBySlice(vpos);
          ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}

          gl_FragColor = vec4(waterColor.a);
        }
      `)),0===e.output&&(t.include(Bt,e),t.include(me,e),e.receiveShadows&&t.include(Je,e),t.include(Zt,e),t.fragment.uniforms.add("waterColor","vec4").add("lightingMainDirection","vec3").add("lightingMainIntensity","vec3").add("camPos","vec3").add("timeElapsed","float").add("view","mat4"),t.fragment.include(pe),t.fragment.code.add(ne`
      void main() {
        discardBySlice(vpos);
        ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
        vec3 localUp = vnormal;
        // the created normal is in tangent space
        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);

        // we rotate the normal according to the tangent-bitangent-normal-Matrix
        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);
        vec3 v = -normalize(vpos - camPos);
        float shadow = ${e.receiveShadows?ne`1.0 - readShadowMap(vpos, linearDepth)`:"1.0"};
        vec4 vPosView = view*vec4(vpos, 1.0);
        vec4 final = vec4(getSeaColor(n, v, lightingMainDirection, waterColor.rgb, lightingMainIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz), waterColor.w);

        // gamma correction
        gl_FragColor = delinearizeGamma(final);
        gl_FragColor = highlightSlice(gl_FragColor, vpos);
        ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
      }
    `)),2===e.output&&(t.include(kt,e),t.include(Bt,e),t.include(me,e),t.varyings.add("vpos","vec3"),t.varyings.add("vuv","vec2"),t.vertex.code.add(ne`
        void main(void) {
          if (waterColor.a < ${ne.float(ce)}) {
            // Discard this vertex
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
            return;
          }

          vuv = uv0;
          vpos = position;

          gl_Position = transformPosition(proj, view, vpos);
        }
    `),t.fragment.uniforms.add("timeElapsed","float"),t.fragment.code.add(ne`void main() {
discardBySlice(vpos);
vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);
tangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);
gl_FragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);
}`)),5===e.output&&(t.varyings.add("vpos","vec3"),t.vertex.code.add(ne`
        void main(void) {
          if (waterColor.a < ${ne.float(ce)}) {
            // Discard this vertex
            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
            return;
          }

          vpos = position;
          gl_Position = transformPosition(proj, view, vpos);
        }
    `),t.fragment.uniforms.add("waterColor","vec4"),t.fragment.code.add(ne`void main() {
gl_FragColor = waterColor;
}`)),4===e.output&&(t.include(ge),t.varyings.add("vpos","vec3"),t.vertex.code.add(ne`
      void main(void) {
        if (waterColor.a < ${ne.float(ce)}) {
          // Discard this vertex
          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);
          return;
        }

        vpos = position;
        gl_Position = transformPosition(proj, view, vpos);
      }
    `),t.include(me,e),t.fragment.code.add(ne`void main() {
discardBySlice(vpos);
outputHighlight();
}`)),t}});class $t extends ve{constructor(e,t,r){super(e,t,r),this._textureRepository=e.waterTextureRepository}initializeProgram(e){const t=$t.shader.get(),r=this.configuration,i=t.build({OITEnabled:0===r.transparencyPassType,output:r.output,viewingMode:e.viewingMode,slicePlaneEnabled:r.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,receiveShadows:r.receiveShadows,pbrMode:3,useCustomDTRExponentForWater:!0,ssrEnabled:r.useSSR,highStepCount:!0,multipassTerrainEnabled:r.multipassTerrainEnabled,cullAboveGround:r.cullAboveGround});return new ye(e.rctx,i,we)}ensureResource(e){return this._textureRepository.ready||this._textureRepository.updating||this._textureRepository.loadTextures(e),this._textureRepository.ready?2:1}bindPass(e,t){var r,i;Re(this.program,t.camera.projectionMatrix),t.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),Te(this.program,t)),0===this.configuration.output&&(t.lighting.setUniforms(this.program,!1),jt(this.program,t)),0!==this.configuration.output&&2!==this.configuration.output||(r=this.program,i=e,r.setUniform4f("waveParams",i.waveStrength,i.waveTextureRepeat,i.flowStrength,i.flowOffset),r.setUniform2f("waveDirection",i.waveDirection[0]*i.waveVelocity,i.waveDirection[1]*i.waveVelocity),this._textureRepository.bind(this.program)),this.program.setUniform4fv("waterColor",e.color),4===this.configuration.output&&be(this.program,t)}bindDraw(e){Ce(this.program,e),this.program.rebindTextures(),0!==this.configuration.output&&7!==this.configuration.output||Se(this.program,e.origin,e.camera.viewInverseTransposeMatrix),0===this.configuration.output&&Ke(this.program,e),0!==this.configuration.output&&7!==this.configuration.output&&4!==this.configuration.output||xe(this.program,this.configuration,e)}setPipelineState(e){const t=this.configuration,r=3===e,i=2===e;return Y({blending:2!==t.output&&4!==t.output&&t.transparent?r?Ee:Oe(e):null,depthTest:{func:Me(e)},depthWrite:r?t.writeDepth&&X:De(e),colorWrite:J,polygonOffset:r||i?null:Ie(t.enableOffset)})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}$t.shader=new Pe(Qt,(()=>Promise.resolve().then((function(){return Qt}))));class Yt extends _e{constructor(){super(...arguments),this.output=0,this.receiveShadows=!1,this.slicePlaneEnabled=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.useSSR=!1,this.isDraped=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}E([fe({count:8})],Yt.prototype,"output",void 0),E([fe()],Yt.prototype,"receiveShadows",void 0),E([fe()],Yt.prototype,"slicePlaneEnabled",void 0),E([fe()],Yt.prototype,"transparent",void 0),E([fe()],Yt.prototype,"enableOffset",void 0),E([fe()],Yt.prototype,"writeDepth",void 0),E([fe()],Yt.prototype,"useSSR",void 0),E([fe()],Yt.prototype,"isDraped",void 0),E([fe({count:4})],Yt.prototype,"transparencyPassType",void 0),E([fe()],Yt.prototype,"multipassTerrainEnabled",void 0),E([fe()],Yt.prototype,"cullAboveGround",void 0);class Xt extends Ae{constructor(e){super(e),this.updateParameters()}updateParameters(e){this._technique=this._techniqueRep.releaseAndAcquire($t,this._material.getTechniqueConfig(this._output,e),this._technique)}beginSlot(e){if(2===this._output)return 22===e;if(5===this._output)return null==e;if(4===this._output)return 3===e;let t=3;return this._material.params.transparent&&(t=this._material.params.writeDepth?5:8),e===t}setElapsedTimeUniform(e){const t=.001*this._material.animation.time;e.setUniform1f("timeElapsed",t*this._material.params.animationSpeed)}_updateShadowState(e){e.shadowMappingEnabled!==this._material.params.receiveShadows&&this._material.setParameterValues({receiveShadows:e.shadowMappingEnabled})}_updateSSRState(e){e.ssrEnabled!==this._material.params.ssrEnabled&&this._material.setParameterValues({ssrEnabled:e.ssrEnabled})}ensureResources(e){return this._technique.ensureResource(e)}ensureParameters(e){0===this._output&&(this._updateShadowState(e),this._updateSSRState(e)),this.updateParameters(e)}bind(e){this._technique.bindPass(this._material.params,e),2!==this._output&&0!==this._output||this.setElapsedTimeUniform(this._technique.program)}}class Jt{constructor(e,t,r,i,s,a){this.from=e,this.to=t,this.isVisible=r,this.hasHighlights=i,this.hasOccludees=s,this.transformation=a,null!=a&&(this.transformationNormal=We(a),N(this.transformationNormal,this.transformationNormal),G(this.transformationNormal,this.transformationNormal))}}function Kt(e,t){const r=e=>({first:e.from,count:e.to-e.from});if(0===e.length)return void e.push(r(t));const i=e[e.length-1];if(a=t,(s=i).first+s.count>=a.from){const e=t.from-i.first+t.to-t.from;i.count=e}else e.push(r(t));var s,a}function er(e){const t=e.capabilities.disjointTimerQuery;return g(t)?null:t.timestampBits()>0?new tr(t):ir?null:new rr(t)}class tr{constructor(e){this.timer=e,this.start=e.createQuery(),e.createTimestamp(this.start)}stop(e,t=50){this.end=this.timer.createQuery(),this.timer.createTimestamp(this.end),this.checkQueryResult(e,t)}checkQueryResult(e,t){if(!this.timer.resultAvailable(this.end))return void setTimeout((()=>this.checkQueryResult(e,t)),t);if(this.timer.disjoint())return void e(null);const r=this.timer.getResult(this.start),i=this.timer.getResult(this.end);e((i-r)/1e6)}}class rr{constructor(e){this.timer=e,this.query=e.createQuery(),ir=!0,this.timer.beginTimeElapsed(this.query)}stop(e,t=50){this.timer.endTimeElapsed(),ir=!1,this.checkQueryResult(e,t)}checkQueryResult(e,t){const r=this.timer.resultAvailable(this.query),i=this.timer.disjoint();if(!r||i)i?e(null):setTimeout((()=>this.checkQueryResult(e,t)),t);else{const t=this.timer.getResult(this.query);e(t/1e6)}}}let ir=!1;const sr=["prepare","shadowmap","lineardepth","normals","ssao","opaque","opaque edges","transparent","transparent edges","hudvisibility","transparent terrain","atmosphere","laserline","occluded","antialiasing","highlights","hudOccluded","hudNotoccluded"];class ar{constructor(){this.triangles=0,this.drawCalls=0}reset(){this.triangles=0,this.drawCalls=0}}function or(e,t,r){p(r)&&(r.drawCalls+=e,r.triangles+=t)}class nr extends L{constructor(){super("total"),this.total=0,this.frameCount=0}}class dr{constructor(){this._startTime=0,this._lastSample=0,this._enableGPUTimer=0,this.totalTime=new nr,this.gpuTime=new L("gpu",9),this.renderPassTimings=sr.map((e=>new L(e))),this.stats=new ar}enableGPUTimer(){return++this._enableGPUTimer,{remove:it((()=>--this._enableGPUTimer))}}prerender(e){this._startTime=this._lastSample=performance.now(),this._enableGPUTimer&&(this._gpuTimer=er(e))}advance(e){const t=performance.now();this.renderPassTimings[e].record(t-this._lastSample),this._lastSample=t}postrender(){p(this._gpuTimer)&&(this._gpuTimer.stop((e=>p(e)&&this.gpuTime.record(e)),16),this._gpuTimer=null);const e=performance.now()-this._startTime;this.totalTime.record(e),this.totalTime.total+=e,this.totalTime.frameCount++}}class lr{constructor(e,t,r){this.type="MergedRenderer",this._dataByOrigin=new Map,this._hasHighlights=!1,this._hasOccludees=!1,this._rctx=e,this._material=r,this._materialRep=t,this._glMaterials=et(this._material,this._materialRep),this._bufferWriter=r.createBufferWriter()}dispose(){tt(this._material,this._materialRep),this._dataByOrigin&&(this._dataByOrigin.forEach((e=>{e.vao.dispose(!0),e.vao=null})),this._dataByOrigin.clear(),this._dataByOrigin=null),this._glMaterials&&(this._glMaterials.forEach((e=>{e&&e.dispose()})),this._glMaterials.clear(),this._glMaterials=null)}get isEmpty(){return 0===this._dataByOrigin.size}get hasHighlights(){return this._hasHighlights}get hasOccludees(){return this._hasOccludees}get hasWater(){return!this.isEmpty&&P(this._glMaterials,(e=>e instanceof Xt))}get rendersOccluded(){return!this.isEmpty&&1!==this._material.renderOccluded}modify(e){this.updateGeometries(e.updates),this.addAndRemoveGeometries(e.adds,e.removes),this.updateRenderCommands()}addAndRemoveGeometries(e,t){const r=this._bufferWriter,i=r.vertexBufferLayout,s=i.stride/4,a=this._dataByOrigin,o=function(e,t,r,i){const s=new Map,a=t.vertexBufferLayout.stride/4,o=(r,i)=>{const o=r.origin;if(g(o))return;const n=e.get(o.id);let d=s.get(o.id);null==d&&(d={optimalCount:null==n?0:n.optimalCount,sparseCount:null==n?0:n.buffer.size,toAdd:[],toRemove:[],origin:o.vec3},s.set(o.id,d));const l=t.elementCount(r.data)*a;i?(d.optimalCount+=l,d.sparseCount+=l,d.toAdd.push(r)):(d.optimalCount-=l,d.toRemove.push(r))};for(const e of r)o(e,!0);for(const e of i)o(e,!1);return s}(a,r,e,t);o.forEach(((e,t)=>{o.delete(t);const r=e.optimalCount,n=e.sparseCount;let d=a.get(t);if(null==d)Ve(r>0),d=this.createData(i,r,e.origin),a.set(t,d);else if(0===r)return d.vao.dispose(!0),d.vao=null,void a.delete(t);const l=r<e.sparseCount/2,h=l?r:n,c=cr,u=d.buffer.size,m=d.buffer.array,p=d.buffer.resize(h,!1);l||p?this.removeAndRebuild(d,e.toRemove,s,m,c):e.toRemove.length>0?(this.removeByErasing(d,e.toRemove,s,c),e.toAdd.length>0&&(c.end=u)):(c.begin=u,c.end=u);const g=ur;je(g,-e.origin[0],-e.origin[1],-e.origin[2]),this.append(d,e.toAdd,s,g,c);const f=d.vao.vertexBuffers.geometry;if(f.byteSize!==d.buffer.array.buffer.byteLength)f.setData(d.buffer.array);else{const{begin:e,end:t}=c;if(e<t){const r=d.buffer.array,i=4,s=e*i,a=t*i;f.setSubData(r,s,s,a)}}d.drawCommandsDirty=!0}))}updateGeometries(e){const t=this._bufferWriter,r=t.vertexBufferLayout.stride/4;for(const i of e){const e=i.updateType,s=i.renderGeometry,a=this._dataByOrigin.get(s.origin.id),o=a&&a.instances.get(s.id);if(!o)return;if(1&e&&(o.isVisible=s.instanceParameters.visible),9&e){const e=s.instanceParameters.visible;o.hasHighlights=!!s.instanceParameters.highlights&&e}if(16&e&&(o.hasOccludees=!!s.instanceParameters.occludees),6&e){const e=a.buffer.array,i=a.vao;rt(s,mr,pr),t.write({transformation:mr,invTranspTransformation:pr},s.data,t.vertexBufferLayout.createView(e.buffer),o.from),Ve(o.from+t.elementCount(s.data)===o.to,"material VBO layout has changed"),i.vertexBuffers.geometry.setSubData(e,o.from*r*4,o.from*r*4,o.to*r*4)}a.drawCommandsDirty=!0}}updateRenderCommands(){this._hasHighlights=!1,this._hasOccludees=!1,this._dataByOrigin.forEach((e=>{e.hasHiddenInstances=!1,e.hasHighlights=!1,e.hasOccludees=!1,P(e.instances,(t=>(t.isVisible?(t.hasHighlights&&(this._hasHighlights=!0,e.hasHighlights=!0),t.hasOccludees&&(this._hasOccludees=!0,e.hasOccludees=!0)):e.hasHiddenInstances=!0,e.hasHiddenInstances&&e.hasHighlights&&e.hasOccludees)))}));this._dataByOrigin.forEach((e=>{e.drawCommandsDirty&&((e=>{if(e.drawCommandsDefault=null,e.drawCommandsHighlight=null,e.drawCommandsOccludees=null,e.drawCommandsShadowHighlightRest=null,e.stats={default:0,highlight:0,occludees:0,shadowHighlightRest:0},0===e.instances.size)return;if(!hr(e)){const t=4*e.buffer.size/te(e.vao.layout.geometry);return e.drawCommandsDefault=[{first:0,count:t}],void(e.stats={default:t,highlight:0,occludees:0,shadowHighlightRest:0})}const t=[...e.instances.values()].sort(((e,t)=>e.from===t.from?e.to>t.to?1:e.to<t.to?-1:0:e.from>t.from?1:e.from<t.from?-1:0));e.drawCommandsDefault=[],e.drawCommandsHighlight=[],e.drawCommandsOccludees=[],e.drawCommandsShadowHighlightRest=[];for(const r of t)r.isVisible&&(r.hasOccludees?Kt(e.drawCommandsOccludees,r):Kt(e.drawCommandsDefault,r),r.hasHighlights?Kt(e.drawCommandsHighlight,r):Kt(e.drawCommandsShadowHighlightRest,r));const r=e=>{let t=0;for(const r of e)t+=r.count;return t/3};e.stats={default:r(e.drawCommandsDefault),highlight:r(e.drawCommandsHighlight),occludees:r(e.drawCommandsOccludees),shadowHighlightRest:r(e.drawCommandsShadowHighlightRest)}})(e),e.drawCommandsDirty=!1)}))}updateLogic(e){return this._material.update(e)}render(e,t,r,i){const s=this._rctx,a=this._glMaterials.get(t),o=5===t||7===t,n=6===t,d=!(o||n);if(3===t&&null===e&&(e=22),!a||2!==a.ensureResources(s)||null!=e&&!a.beginSlot(e)||o&&!this._hasHighlights)return!1;a.ensureParameters(r);const l=a.getPipelineState(e,!1);s.setPipelineState(l);const h=a.technique;s.useProgram(h.program),a.bind(r);let c=!1;return this._dataByOrigin.forEach((t=>{if(g(t.drawCommandsDefault)&&g(t.drawCommandsHighlight)&&g(t.drawCommandsOccludees)&&g(t.drawCommandsShadowHighlightRest))return;if(o&&!t.hasHighlights)return;r.origin=t.origin,h.bindDraw(r,{},{}),h.ensureAttributeLocations(t.vao),s.bindVAO(t.vao);const u=h.primitiveType,m=o?t.drawCommandsHighlight:n&&hr(t)?t.drawCommandsShadowHighlightRest:t.drawCommandsDefault;if(p(m)){this.renderCommands(s,u,m);const e=o?t.stats.highlight:n&&hr(t)?t.stats.shadowHighlightRest:t.stats.default;or(m.length,e,i),c=!0}if(d){const r=t.drawCommandsOccludees;if(p(r)){const o=a.getPipelineState(e,!0);s.setPipelineState(o),this.renderCommands(s,u,r),s.setPipelineState(l),or(r.length,t.stats.occludees,i),c=!0}}})),c}renderCommands(e,t,r){for(let i=0;i<r.length;i++)e.drawArrays(t,r[i].first,r[i].count)}createData(e,t,r){return{instances:new Map,vao:new K(this._rctx,this._material.vertexAttributeLocations,{geometry:$e(e)},{geometry:ee.createVertex(this._rctx,35044)}),buffer:new Nt(t),optimalCount:0,origin:r,hasHiddenInstances:!1,hasHighlights:!1,hasOccludees:!1,drawCommandsDirty:!1,drawCommandsDefault:null,drawCommandsOccludees:null,drawCommandsHighlight:null,drawCommandsShadowHighlightRest:null,stats:{default:0,highlight:0,occludees:0,shadowHighlightRest:0}}}removeAndRebuild(e,t,r,i,s){for(const i of t){const t=i.id,s=e.instances.get(t);e.optimalCount-=(s.to-s.from)*r,e.instances.delete(t)}let a=0;const o=e.buffer.array;s.begin=0,s.end=0;let n=-1,d=-1,l=0;e.instances.forEach((e=>{const t=e.from*r,s=e.to*r,h=s-t;n!==d&&d!==t?(o.set(i.subarray(n,d),l),l+=d-n,n=t):-1===n&&(n=t),d=s,e.from=a/r,a+=h,e.to=a/r})),n!==d&&o.set(i.subarray(n,d),l),s.end=a}removeByErasing(e,t,r,i){i.begin=1/0,i.end=-1/0;let s=-1,a=-1;for(const o of t){const t=o.id,n=e.instances.get(t),d=n.from*r,l=n.to*r;s!==a&&a!==d?(e.buffer.erase(s,a),s=d):-1===s&&(s=d),a=l,e.instances.delete(t),e.optimalCount-=l-d,d<i.begin&&(i.begin=d),l>i.end&&(i.end=l)}s!==a&&e.buffer.erase(s,a)}append(e,t,r,i,s){const a=this._bufferWriter;for(const o of t){const t=p(o.transformation)?V(mr,i,o.transformation):i;N(pr,t),G(pr,pr);const n=s.end;a.write({transformation:t,invTranspTransformation:pr},o.data,a.vertexBufferLayout.createView(e.buffer.array.buffer),s.end/r);const d=a.elementCount(o.data)*r,l=n+d;Ve(null==e.instances.get(o.id));const h=o.instanceParameters.visible,c=!!o.instanceParameters.highlights&&h,u=!!o.instanceParameters.occludees,m=new Jt(n/r,l/r,h,c,u);e.instances.set(o.id,m),e.optimalCount+=d,s.end+=d}}get test(){return{material:this._material,glMaterials:this._glMaterials}}}function hr(e){return e.hasOccludees||e.hasHighlights||e.hasHiddenInstances}const cr={begin:0,end:0},ur=Be(),mr=Be(),pr=Be();let gr=class extends O{constructor(){super(...arguments),this._pending=new fr,this._changes=new At,this._materialRenderers=new Map,this._sortedMaterialRenderers=new A,this._hasHighlights=!1,this._hasWater=!1}dispose(){this._changes.prune(),this._materialRenderers.forEach((e=>e.dispose())),this._materialRenderers.clear(),this._sortedMaterialRenderers.clear()}get updating(){return!this._pending.empty||this._changes.updates.length>0}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return P(this._materialRenderers,(e=>e.rendersOccluded))}stopAnimationsAtTime(e){this._sortedMaterialRenderers.forAll((t=>f(t.material.animation,(t=>t.stopAtTime(e)))))}get isEmpty(){return!this.updating&&0===this._materialRenderers.size}commitChanges(){if(!this.updating)return!1;this._processAddsRemoves();const e=Ft(this._changes);let t=!1,r=!1,i=!1;return e.forEach(((e,s)=>{let a=this._materialRenderers.get(s);if(!a&&e.adds.length>0&&(a=new lr(this.rctx,this.materialRepository,s),this._materialRenderers.set(s,a),t=!0,r=!0,i=!0),!a)return;const o=r||a.hasHighlights,n=i||a.hasWater;a.modify(e),r=r||o!==a.hasHighlights,i=i||n!==a.hasWater,a.isEmpty&&(this._materialRenderers.delete(s),a.dispose(),t=!0)})),this._changes.clear(),t&&this.updateSortedMaterialRenderers(),r&&(this._hasHighlights=P(this._materialRenderers,(e=>e.hasHighlights))),i&&(this._hasWater=P(this._materialRenderers,(e=>e.hasWater))),this.notifyChange("updating"),!0}add(e){if(0===e.length)return;const t=this._pending.empty;for(const t of e)this._pending.adds.add(t);t&&this.notifyChange("updating")}remove(e){const t=this._pending.empty;for(const t of e)this._pending.adds.has(t)?(this._pending.removed.add(t),this._pending.adds.delete(t)):this._pending.removed.has(t)||this._pending.removes.add(t);t&&!this._pending.empty&&this.notifyChange("updating")}modify(e,t){const r=0===this._changes.updates.length;for(const r of e){const e=this._changes.updates.pushNew();e.renderGeometry=r,e.updateType=t}r&&this._changes.updates.length>0&&this.notifyChange("updating")}updateLogic(e){let t=!1;return this._sortedMaterialRenderers.forAll((({materialRenderer:r})=>{r.updateLogic&&r.updateLogic(e)&&(t=!0)})),t}render(e,t){for(let r=0;r<this._sortedMaterialRenderers.length;r++){const i=this._sortedMaterialRenderers.data[r];Le(i.material,e)&&i.materialRenderer.render(null,e.pass,t,null)}}updateSortedMaterialRenderers(){this._sortedMaterialRenderers.clear();let e=0;this._materialRenderers.forEach(((t,r)=>{r.insertOrder=e++,this._sortedMaterialRenderers.push({material:r,materialRenderer:t})})),this._sortedMaterialRenderers.sort(((e,t)=>{const r=t.material.renderPriority-e.material.renderPriority;return 0!==r?r:e.material.insertOrder-t.material.insertOrder}))}_processAddsRemoves(){this._changes.adds.clear(),this._changes.removes.clear(),this._changes.adds.pushArray(Array.from(this._pending.adds)),this._changes.removes.pushArray(Array.from(this._pending.removes));for(let e=0;e<this._changes.updates.length;){const t=this._changes.updates.data[e];this._pending.has(t.renderGeometry)?this._changes.updates.removeUnorderedIndex(e):e++}this._pending.clear()}get test(){return{sortedMaterialRenderers:this._sortedMaterialRenderers}}};E([F()],gr.prototype,"rctx",void 0),E([F()],gr.prototype,"materialRepository",void 0),E([F()],gr.prototype,"updating",null),gr=E([z("esri.views.3d.webgl-engine.lib.SortedRenderGeometryRenderer")],gr);class fr{constructor(){this.adds=new Set,this.removes=new Set,this.removed=new Set}get empty(){return 0===this.adds.size&&0===this.removes.size&&0===this.removed.size}has(e){return this.adds.has(e)||this.removes.has(e)||this.removed.has(e)}clear(){this.adds.clear(),this.removes.clear(),this.removed.clear()}}var _r=Object.freeze({__proto__:null,build:function(){const e=new le;return e.include(Ze),e.fragment.uniforms.add("tex","sampler2D"),e.fragment.uniforms.add("color","vec4"),e.fragment.code.add(ne`void main() {
vec4 texColor = texture2D(tex, uv);
gl_FragColor = texColor * color;
}`),e}});class vr extends ve{initializeProgram(e){const t=vr.shader.get().build();return new ye(e.rctx,t,we)}initializePipeline(){return this.configuration.hasAlpha?Y({blending:re(770,1,771,771),colorWrite:J}):Y({colorWrite:J})}}vr.shader=new Pe(_r,(()=>Promise.resolve().then((function(){return _r}))));class yr extends _e{constructor(){super(...arguments),this.hasAlpha=!1}}function wr(e,t,r){(r=r||e).length=e.length;for(let i=0;i<e.length;i++)r[i]=e[i]*t[i];return r}function Rr(e,t,r){(r=r||e).length=e.length;for(let i=0;i<e.length;i++)r[i]=e[i]*t;return r}function Tr(e,t,r){(r=r||e).length=e.length;for(let i=0;i<e.length;i++)r[i]=e[i]+t[i];return r}function br(e){return(e+1)*(e+1)}function Cr(e,t,r){const i=e[0],s=e[1],a=e[2],o=r||[];return o.length=br(t),t>=0&&(o[0]=.28209479177),t>=1&&(o[1]=.4886025119*i,o[2]=.4886025119*a,o[3]=.4886025119*s),t>=2&&(o[4]=1.09254843059*i*s,o[5]=1.09254843059*s*a,o[6]=.31539156525*(3*a*a-1),o[7]=1.09254843059*i*a,o[8]=.54627421529*(i*i-s*s)),o}function Sr(e,t){const r=(i=t.r.length,o(Math.floor(Math.sqrt(i)-1),0,2));var i;for(const i of e)n(Pr,i.direction),Cr(Pr,r,Dr),wr(Dr,Ar),Rr(Dr,i.intensity[0],Ir),Tr(t.r,Ir),Rr(Dr,i.intensity[1],Ir),Tr(t.g,Ir),Rr(Dr,i.intensity[2],Ir),Tr(t.b,Ir);return t}function xr(e,t,r,i){!function(e,t){const r=br(e),i=t||{r:[],g:[],b:[]};i.r.length=i.g.length=i.b.length=r;for(let e=0;e<r;e++)i.r[e]=i.g[e]=i.b[e]=0}(t,i),s(r.intensity,0,0,0);let o=!1;const n=Er,d=Or,l=Mr;n.length=0,d.length=0,l.length=0;for(const t of e)t instanceof dt&&!o?(a(r.direction,t.direction),r.intensity[0]=t.intensity[0],r.intensity[1]=t.intensity[1],r.intensity[2]=t.intensity[2],r.castShadows=t.castShadows,o=!0):t instanceof dt||t instanceof nt?n.push(t):t instanceof ot?d.push(t):t instanceof lt&&l.push(t);Sr(n,i),function(e,t){Cr(Pr,0,Dr);for(const r of e)t.r[0]+=Dr[0]*Ar[0]*r.intensity[0]*4*Math.PI,t.g[0]+=Dr[0]*Ar[0]*r.intensity[1]*4*Math.PI,t.b[0]+=Dr[0]*Ar[0]*r.intensity[2]*4*Math.PI}(d,i);for(const e of l)Tr(i.r,e.r),Tr(i.g,e.g),Tr(i.b,e.b)}E([fe()],yr.prototype,"hasAlpha",void 0);const Er=[],Or=[],Mr=[],Dr=[0],Ir=[0],Pr=e(),Ar=[3.141593,2.094395,2.094395,2.094395,.785398,.785398,.785398,.785398,.785398];class Lr{constructor(){this._shOrder=2,this._ambientBoost=.4,this._oldSunlight={direction:e(),ambient:{color:e(),intensity:1},diffuse:{color:e(),intensity:1}},this.globalFactor=.5,this.groundLightingFactor=.5,this._sphericalHarmonics=new lt,this._mainLight={intensity:e(),direction:t(1,0,0),castShadows:!1}}get lightingMainDirection(){return this._mainLight.direction}setLightDirectionUniform(e){e.setUniform3fv("lightingMainDirection",this._mainLight.direction)}setUniforms(e,t=!1){const r=t?(1-this.groundLightingFactor)*(1-this.globalFactor):0;e.setUniform1f("lightingFixedFactor",r),e.setUniform1f("lightingGlobalFactor",this.globalFactor),this.setLightDirectionUniform(e),e.setUniform3fv("lightingMainIntensity",this._mainLight.intensity),e.setUniform1f("ambientBoostFactor",this._ambientBoost);const i=this._sphericalHarmonics;0===this._shOrder?e.setUniform3f("lightingAmbientSH0",i.r[0],i.g[0],i.b[0]):1===this._shOrder?(e.setUniform4f("lightingAmbientSH_R",i.r[0],i.r[1],i.r[2],i.r[3]),e.setUniform4f("lightingAmbientSH_G",i.g[0],i.g[1],i.g[2],i.g[3]),e.setUniform4f("lightingAmbientSH_B",i.b[0],i.b[1],i.b[2],i.b[3])):2===this._shOrder&&(e.setUniform3f("lightingAmbientSH0",i.r[0],i.g[0],i.b[0]),e.setUniform4f("lightingAmbientSH_R1",i.r[1],i.r[2],i.r[3],i.r[4]),e.setUniform4f("lightingAmbientSH_G1",i.g[1],i.g[2],i.g[3],i.g[4]),e.setUniform4f("lightingAmbientSH_B1",i.b[1],i.b[2],i.b[3],i.b[4]),e.setUniform4f("lightingAmbientSH_R2",i.r[5],i.r[6],i.r[7],i.r[8]),e.setUniform4f("lightingAmbientSH_G2",i.g[5],i.g[6],i.g[7],i.g[8]),e.setUniform4f("lightingAmbientSH_B2",i.b[5],i.b[6],i.b[7],i.b[8]))}set(e){xr(e,this._shOrder,this._mainLight,this._sphericalHarmonics),a(this._oldSunlight.direction,this._mainLight.direction);const t=1/Math.PI;this._oldSunlight.ambient.color[0]=.282095*this._sphericalHarmonics.r[0]*t,this._oldSunlight.ambient.color[1]=.282095*this._sphericalHarmonics.g[0]*t,this._oldSunlight.ambient.color[2]=.282095*this._sphericalHarmonics.b[0]*t,d(this._oldSunlight.diffuse.color,this._mainLight.intensity,t),a(Hr,this._oldSunlight.diffuse.color),d(Hr,Hr,this._ambientBoost*this.globalFactor),l(this._oldSunlight.ambient.color,this._oldSunlight.ambient.color,Hr)}get old(){return this._oldSunlight}}const Hr=e();class Fr{constructor(e){this._rctx=e,this.cache=new Map}dispose(){this.cache.forEach((e=>e.texture=m(e.texture))),this.cache.clear()}acquire(e){if(g(e))return null;const t=this.patternId(e),r=this.cache.get(t);if(r)return r.refCount++,r.bind;const i=this.patternToTextureData(e,2),s=i.length/2,a={refCount:1,texture:null,bind:e=>(g(a.texture)&&(a.texture=new ae(this._rctx,{width:i.length,height:1,internalFormat:6406,pixelFormat:6406,dataType:5121,wrapMode:33071},i)),e.bindTexture(a.texture,"stipplePatternTexture"),s)};return this.cache.set(t,a),a.bind}release(e){if(g(e))return;const t=this.patternId(e),r=this.cache.get(t);r&&(r.refCount--,0===r.refCount&&(p(r.texture)&&r.texture.dispose(),this.cache.delete(t)))}swap(e,t){const r=this.acquire(t);return this.release(e),r}patternId(e){return e.join(",")}patternToTextureData(e,t){const r=e.reduce(((e,t)=>e+t))*t,i=new Uint8Array(r);let s=!0,a=0;for(const r of e){for(let e=0;e<r*t;e++)i[a++]=s?255:0;s=!s}return i}}const zr=I.getLogger("esri.views.3d.webgl-engine.lib.OverlayRenderer");let Nr=class extends(Fe(O)){constructor(e){super(e),this._overlays=null,this._overlayRenderTarget=null,this._hasHighlights=!1,this._rendersOccluded=!1,this._hasWater=!1,this._lighting=new Lr,this._handles=new D,this._layerRenderers=new Map,this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers=new A,this._geometries=new Map,this.globalUnitScale=1,this.longitudeCyclical=null}initialize(){const e=this.view._stage.renderView;this._rctx=e.renderingContext,this._renderContext=new Dt(this._rctx);const r=e.waterTextureRepository;this._stippleTextureRepository=new Fr(e.renderingContext),this._shaderTechniqueRepository=new wt({rctx:this._rctx,viewingMode:2,stippleTextureRepository:this._stippleTextureRepository,waterTextureRepository:r}),this._handles.add([H(r,"loadingState",(()=>this.emitContentChanged())),H(this,"spatialReference",(e=>this._localOrigins=new Et(e)))]),this._materialRepository=new St(e.textureRepository,this._shaderTechniqueRepository),this._materialRepository.onMaterialChanged=e=>{(e.renderOccluded&kr)>0!==this._rendersOccluded&&this.updateRendersOccluded(),this.emitContentChanged(),this.notifyChange("updating")},this._lighting.groundLightingFactor=1,this._lighting.globalFactor=0,this._lighting.set([new ot(t(1,1,1))]),this._bindParameters={slot:null,highlightDepthTexture:ze(this._rctx),camera:jr,inverseViewport:B(),origin:null,screenToWorldRatio:null,screenToWorldRatioGlobalWM:null,shadowMappingEnabled:!1,slicePlane:null,ssaoEnabled:!1,hasOccludees:!1,linearDepthTexture:null,lastFrameColorTexture:null,reprojectionMat:null,ssrEnabled:!1,lighting:this._lighting,transparencyPassType:3,terrainLinearDepthTexture:null,geometryLinearDepthTexture:null,multipassTerrainEnabled:!1,cullAboveGround:!1,multipassGeometryEnabled:!1,highlightColorTexture:null},this._handles.add(this.view.resourceController.scheduler.registerTask(st.STAGE,this))}dispose(){this._handles.destroy(),this._layerRenderers.forEach((e=>e.dispose())),this._layerRenderers.clear(),this._debugTextureTechnique=_(this._debugTextureTechnique),this._debugPatternTexture=m(this._debugPatternTexture),this._bindParameters.highlightDepthTexture=m(this._bindParameters.highlightDepthTexture),this._shaderTechniqueRepository=m(this._shaderTechniqueRepository),this._temporaryFBO=m(this._temporaryFBO),this._quadVAO=m(this._quadVAO),this._overlayRenderTarget=m(this._overlayRenderTarget)}get updating(){return this._sortedLayerRenderersDirty||P(this._layerRenderers,(e=>e.updating))}get hasOverlays(){return p(this._overlays)&&p(this._overlayRenderTarget)}get gpuMemoryUsage(){return p(this._overlayRenderTarget)?this._overlayRenderTarget.gpuMemoryUsage:0}collectUnusedRenderTargetMemory(e){let t=!1;if(p(this._overlayRenderTarget))for(const r of this._overlayRenderTarget.renderTargets){const i=this.overlays[0].validTargets[r.type]||!this.overlays[1].validTargets[r.type];t=this._overlayRenderTarget.validateUsageForTarget(i,r,e)||t}return t}get overlays(){return v(this._overlays,[])}ensureDrapeTargets(e){p(this._overlays)&&this._overlays.forEach((t=>{t.hasTargetWithoutRasterImage=M(e,(e=>1===e.drapeTargetType))}))}ensureDrapeSources(e){p(this._overlays)&&this._overlays.forEach((t=>{t.hasDrapedFeatureSource=P(e,((e,t)=>1===t.drapeSourceType)),t.hasDrapedRasterSource=P(e,((e,t)=>0===t.drapeSourceType))}))}ensureOverlays(e,t){g(this._overlays)&&(this._overlayRenderTarget=new _t(this._rctx),this._overlays=[new pt(0,this._overlayRenderTarget),new pt(1,this._overlayRenderTarget)]),this.ensureDrapeTargets(e),this.ensureDrapeSources(t)}disposeOverlays(){p(this._overlayRenderTarget)&&this._overlayRenderTarget.disposeRenderTargetMemory()}get running(){return this.updating}runTask(e,t=(()=>!0)){let r=!1;for(const[i,s]of this._layerRenderers){if(e.done)break;t(i)&&(s.commitChanges()&&(r=!0,e.madeProgress()),s.isEmpty&&(this._sortedLayerRenderersDirty=!0,this._layerRenderers.delete(i),this._handles.remove(i)))}this._sortedLayerRenderersDirty&&(this.updateSortedLayerRenderers(),r=!0),r&&(p(this._overlays)&&0===this._layerRenderers.size&&this.disposeOverlays(),this.notifyChange("updating"),this.emitContentChanged(),this.updateHasHighlights(),this.updateRendersOccluded(),this.updateHasWater())}processSyncLayers(){this.runTask(at,(e=>1===e.updatePolicy))}addGeometries(e,t,r){for(const t of e)g(t.origin)&&(t.origin=this._localOrigins.getOrigin(t.boundingSphere)),this._geometries.set(t.id,t);this.ensureLayerRenderer(t).add(e),2===r&&this.notifyGraphicGeometryChanged(e,t)}removeGeometries(e,t,r){for(const t of e)this._geometries.delete(y(t.id));const i=this._layerRenderers.get(t);i&&(i.remove(e),2===r&&this.notifyGraphicGeometryChanged(e,t))}updateGeometries(e,t,r){const i=this._layerRenderers.get(t);if(i)switch(i.modify(e,r),r){case 4:case 2:return this.notifyGraphicGeometryChanged(e,t);case 1:return this.notifyGraphicVisibilityChanged(e,t)}else zr.warn("Attempted to update geometry for nonexistent layer")}notifyGraphicGeometryChanged(e,t){if(g(t.notifyGraphicGeometryChanged))return;let r;for(const i of e){const e=i.graphicUid;p(e)&&e!==r&&(t.notifyGraphicGeometryChanged(e),r=e)}}notifyGraphicVisibilityChanged(e,t){if(g(t.notifyGraphicVisibilityChanged))return;let r;for(const i of e){const e=i.graphicUid;p(e)&&e!==r&&(t.notifyGraphicVisibilityChanged(e),r=e)}}updateHighlights(e,t){const r=this._layerRenderers.get(t);r?r.modify(e,8):zr.warn("Attempted to update highlights for nonexistent layer")}isEmpty(){return 0===this._geometries.size&&!ct.OVERLAY_DRAW_DEBUG_TEXTURE}get hasHighlights(){return this._hasHighlights}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}updateLogic(e){let t=!1;return this._layerRenderers.forEach((r=>{r.updateLogic(e)&&(t=!0)})),t}updateLayerOrder(){this._sortedLayerRenderersDirty=!0}drawTarget(e,t,r){const i=e.canvasGeometries;if(0===i.numViews)return!1;const s=e.pixelRatio*r;this._screenToWorldRatio=s*Math.abs(i.extents[0][2]-i.extents[0][0])/Math.abs(e.viewport[2]-e.viewport[0]);const a=t.renderPass;if(this.isEmpty()||5===a&&!this.hasHighlights||3===a&&!this.hasWater)return!1;if(!e.hasSomeSizedView())return!1;const o=t.fbo,n=2*e.resolution,d=e.resolution,l=1===t.type?2:4===t.type?1:0;if(!o.isValid())return!1;o.resize(n,d);const h=this._rctx;if(jr.pixelRatio=s||1,this._renderContext.pass=a,this._bindParameters.screenToWorldRatio=this._screenToWorldRatio,this._bindParameters.screenToWorldRatioGlobalWM=this._screenToWorldRatio*this.globalUnitScale,e.applyViewport(this._rctx),o.bind(h),0===e.index&&(h.setClearColor(0,0,0,0),h.clearSafe(16384)),1===l&&(this._renderContext.renderOccludedMask=kr),ct.OVERLAY_DRAW_DEBUG_TEXTURE&&1!==l)for(let t=0;t<i.numViews;t++)this.setViewParameters(i.extents[t],e,jr),this.drawDebugTexture(e.resolution,Vr[e.index%Vr.length]);return this._layerRenderers.size>0&&this._sortedLayerRenderers.forAll((({layerView:t,renderer:r})=>{if(2===l&&p(t)&&0===t.drapeSourceType)return;const s=p(t)&&p(t.fullOpacity)&&t.fullOpacity<1&&0===a;s&&(this.bindTemporaryFramebuffer(this._rctx,n,d),h.clearSafe(16384));for(let t=0;t<i.numViews;t++)this.setViewParameters(i.extents[t],e,jr),r.render(this._renderContext,this._bindParameters);s&&p(this._temporaryFBO)&&(o.bind(h),this.view._stage.renderView.compositingHelper.composite(this._temporaryFBO.getTexture(),2,y(y(t).fullOpacity),3,e.index))})),h.bindFramebuffer(null),o.generateMipMap(),this._renderContext.resetRenderOccludedMask(),!0}bindTemporaryFramebuffer(e,t,r){g(this._temporaryFBO)&&(this._temporaryFBO=new ft(e,!1)),this._temporaryFBO.resize(t,r),this._temporaryFBO.bind(e)}async reloadShaders(){await this._shaderTechniqueRepository.hotReload()}intersect(e,t,r){let i=0;this._geometries.forEach((s=>{if(r&&!r(s))return;this.intersectRenderGeometry(s,t,0,e,i);const a=this.longitudeCyclical;a&&(s.boundingSphere[0]-s.boundingSphere[3]<a.min&&this.intersectRenderGeometry(s,t,a.range,e,i),s.boundingSphere[0]+s.boundingSphere[3]>a.max&&this.intersectRenderGeometry(s,t,-a.range,e,i)),i++}))}intersectRenderGeometry(e,t,r,i,s){if(!e.instanceParameters.visible)return;let a=0;p(e.transformation)&&(r+=e.transformation[12],a=e.transformation[13]),Ur[0]=t[0]-r,Ur[1]=t[1]-a,Ur[2]=1,Wr[0]=t[0]-r,Wr[1]=t[1]-a,Wr[2]=0,e.screenToWorldRatio=this._screenToWorldRatio,e.material.intersect(e,null,e.getShaderTransformation(),i,Ur,Wr,((t,r,a)=>{this.addIntersectionResult(a,e.material.renderPriority,s,i,e.layerUid,e.graphicUid)}),e.calculateShaderTransformation,!0)}addIntersectionResult(e,t,r,i,s,a){const o={type:"external",metadata:{layerUid:s,graphicUid:a}},n=s=>{s.set(o,null,i.results.ground.dist,i.results.ground.normal,i.results.ground.transformation,t,null,null,e,r),s.intersector="OverlayRenderer"};if((null==i.results.min.drapedLayerOrder||t>=i.results.min.drapedLayerOrder)&&(null==i.results.min.dist||i.results.ground.dist<=i.results.min.dist)&&n(i.results.min),0!==i.options.store&&(null==i.results.max.drapedLayerOrder||t<i.results.max.drapedLayerOrder)&&(null==i.results.max.dist||i.results.ground.dist>i.results.max.dist)&&n(i.results.max),2===i.options.store){const e=new Qe(i.ray);n(e),i.results.all.push(e)}}stopAnimationsAtTime(e){this._sortedLayerRenderers.forAll((t=>t.renderer.stopAnimationsAtTime(e)))}ensureLayerRenderer(e){let t=this._layerRenderers.get(e);return t||(t=new gr({rctx:this._rctx,materialRepository:this._materialRepository}),this._layerRenderers.set(e,t),this._sortedLayerRenderersDirty=!0,"fullOpacity"in e&&this._handles.add(e.watch("fullOpacity",(()=>this.emitContentChanged())),e),this._handles.add(H(t,"updating",(()=>this.notifyChange("updating"))),e)),t}updateSortedLayerRenderers(){if(!this._sortedLayerRenderersDirty)return;if(this._sortedLayerRenderersDirty=!1,this._sortedLayerRenderers.clear(),0===this._layerRenderers.size)return;const e=new Set(this._layerRenderers.values());this.view.allLayerViews.forEach((t=>{const r=t,i=this._layerRenderers.get(r);i&&(this._sortedLayerRenderers.push(new Gr(r,i)),e.delete(i))})),e.forEach((e=>this._sortedLayerRenderers.push(new Gr(null,e))))}setViewParameters(e,t,r){r.viewport=t.viewport,j(r.projectionMatrix,0,e[2]-e[0],0,e[3]-e[1],r.near,r.far),U(r.viewMatrix),W(r.viewMatrix,r.viewMatrix,[-e[0],-e[1],0]),this._renderContext.camera=r,this._bindParameters.camera=r,this._bindParameters.inverseViewport[0]=1/r.fullViewport[2],this._bindParameters.inverseViewport[1]=1/r.fullViewport[3]}emitContentChanged(){this.onContentChanged&&this.onContentChanged()}updateHasWater(){const e=P(this._layerRenderers,(e=>e.hasWater));e!==this._hasWater&&(this._hasWater=e,this.onHasWaterChanged&&this.onHasWaterChanged(e))}updateHasHighlights(){const e=P(this._layerRenderers,(e=>e.hasHighlights));e!==this._hasHighlights&&(this._hasHighlights=e,this.onHasHighlightsChanged&&this.onHasHighlightsChanged(this._hasHighlights))}updateRendersOccluded(){const e=P(this._layerRenderers,(e=>e.rendersOccluded));e!==this._rendersOccluded&&(this._rendersOccluded=e,this.onRendersOccludedChanged&&this.onRendersOccludedChanged(this.rendersOccluded))}drawDebugTexture(e,t){const r=this._rctx;this.ensureDebugPatternResources(e,e);const i=this._debugTextureTechnique.program;r.useProgram(i),r.setPipelineState(this._debugTextureTechnique.pipeline),i.setUniform4f("color",t[0],t[1],t[2],1),i.bindTexture(this._debugPatternTexture,"tex"),r.bindVAO(this._quadVAO),r.drawArrays(5,0,ie(this._quadVAO,"geometry"))}ensureDebugPatternResources(e,t){if(this._debugPatternTexture)return;const r=new Uint8Array(e*t*4);let i=0;for(let s=0;s<t;s++)for(let a=0;a<e;a++){const o=Math.floor(a/10),n=Math.floor(s/10);o<2||n<2||10*o>e-20||10*n>t-20?(r[i++]=255,r[i++]=255,r[i++]=255,r[i++]=255):(r[i++]=255,r[i++]=255,r[i++]=255,r[i++]=1&o&&1&n?1&a^1&s?0:255:1&o^1&n?0:128)}this._debugPatternTexture=new ae(this._rctx,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,width:e,height:t},r);const s=new yr;s.hasAlpha=!0,this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(vr,s),this._quadVAO=Ne(this._rctx)}get test(){return{layerRenderers:this._layerRenderers}}};E([He()],Nr.prototype,"_shaderTechniqueRepository",void 0),E([He()],Nr.prototype,"_stippleTextureRepository",void 0),E([F({constructOnly:!0})],Nr.prototype,"view",void 0),E([F()],Nr.prototype,"globalUnitScale",void 0),E([F()],Nr.prototype,"spatialReference",void 0),E([F({type:Boolean,readOnly:!0})],Nr.prototype,"updating",null),Nr=E([z("esri.views.3d.terrain.OverlayRenderer")],Nr);class Gr{constructor(e,t){this.layerView=e,this.renderer=t}}const Vr=[[1,.5,.5],[.5,.5,1],[.5,1,.5]],jr=new Ge;jr.near=1,jr.far=1e4,jr.relativeElevation=null;const Ur=e(),Wr=e(),Br=-2,kr=4,qr=1.2,Zr=C,Qr=b;function $r(e){const t=[],r=[];!function(e,t,r){const{attributeData:{position:i},removeDuplicateStartEnd:s}=e,a=function(e){const t=e.length;return e[0]===e[t-3]&&e[1]===e[t-2]&&e[2]===e[t-1]}(i)&&1===s,o=i.length/3-(a?1:0),n=new Uint32Array(2*(o-1)),d=a?w(i,0,i.length-3):i;let l=0;for(let e=0;e<o-1;e++)n[l++]=e,n[l++]=e+1;t.push(["position",{size:3,data:d,exclusive:a}]),r.push(["position",n])}(e,r,t);const i=r[0][1].data,a=t[0][1].length,o=new Uint16Array(a);return function(e,t,r){const i=e.attributeData.mapPosition;if(g(i))return;r.push(["mapPos",r[0][1]]),t.push(["mapPos",{size:3,data:i}])}(e,r,t),function(e,t,r,i){if(p(e.attributeData.colorFeature))return;const s=e.attributeData.color;t.push(["color",{size:4,data:v(s,Qr)}]),r.push(["color",i])}(e,r,t,o),function(e,t,r,i){if(p(e.attributeData.sizeFeature))return;const s=e.attributeData.size;t.push(["size",{size:1,data:[v(s,1)]}]),r.push(["size",i])}(e,r,t,o),function(e,t,r,i){const s=e.attributeData.colorFeature;if(g(s))return;t.push(["colorFeatureAttribute",{size:1,data:new Float32Array([s])}]),r.push(["color",i])}(e,r,t,o),function(e,t,r,i){const s=e.attributeData.sizeFeature;if(g(s))return;t.push(["sizeFeatureAttribute",{size:1,data:new Float32Array([s])}]),r.push(["sizeFeatureAttribute",i])}(e,r,t,o),function(e,t,r,i){const s=e.attributeData.opacityFeature;if(g(s))return;t.push(["opacityFeatureAttribute",{size:1,data:new Float32Array([s])}]),r.push(["opacityFeatureAttribute",i])}(e,r,t,o),function(e,t,r,i){if("round"!==e.join)return;const a=i.length/3,o=new Float32Array(a),n=ei,l=ti;s(n,0,0,0);const m=v(e.uniformSize,1);for(let e=-1;e<a;++e){const t=e<0?a+e:e,r=(e+1)%a;if(s(l,i[3*r+0]-i[3*t+0],i[3*r+1]-i[3*t+1],i[3*r+2]-i[3*t+2]),h(l,l),e>=0){const t=1*((Math.PI-c(u(n,l)))*ri)*Kr(m);o[e]=Math.max(Math.floor(t),0)}d(n,l,-1)}t.push(["subdivisions",{size:1,data:o}]),r.push(["subdivisions",r[0][1]])}(e,r,t,i),new oe(r,t,2)}function Yr(e,t,r,i){const s="polygon"===e.type?1:0,a="polygon"===e.type?e.rings:e.paths,{position:o,outlines:n}=T(a,e.hasZ,s),d=new Float64Array(o.length),l=x(o,e.spatialReference,0,d,0,o,0,o.length/3,t,r,i),h=null!=l;return{lines:h?Xr(n,o,d):[],projectionSuccess:h,sampledElevation:l}}function Xr(e,t,r){const i=new Array;for(const{index:s,count:a}of e){if(a<=1)continue;const e=3*s,o=e+3*a;i.push({position:t.subarray(e,o),mapPosition:r?r.subarray(e,o):void 0})}return i}function Jr(e,t){const r="polygon"===e.type?1:0,i="polygon"===e.type?e.rings:e.paths,{position:s,outlines:a}=T(i,!1,r),o=R(s,e.spatialReference,0,s,t,0,s.length/3);for(let e=2;e<s.length;e+=3)s[e]=-2;return{lines:o?Xr(a,s):[],projectionSuccess:o}}function Kr(e){return 1.863798+-2.0062872/(1+e/18.2313)**.8856294}const ei=e(),ti=e(),ri=4/Math.PI;export{ot as A,At as C,Br as D,nt as F,Et as G,dt as M,kt as N,Nr as O,dr as R,Lr as S,vr as T,Zt as W,It as a,jt as b,gt as c,ct as d,lr as e,mt as f,er as g,yr as h,Fr as i,wt as j,St as k,Zr as l,Yr as m,$r as n,kr as o,Jr as p,Yt as q,Xt as r,Ft as s,qr as t};
