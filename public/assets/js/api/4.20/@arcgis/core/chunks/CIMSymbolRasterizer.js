/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../request.js";import{throwIfAborted as t}from"../core/promiseUtils.js";import{a as r}from"./screenUtils.js";import{n as i}from"./string.js";import{getJsonType as a,isPolygon as s,isPolyline as o}from"../geometry/support/jsonUtils.js";import{a as n,b as l}from"./cimAnalyzer.js";import{R as c}from"./Rasterizer.js";import{d as m,e as h,g as p}from"./utils3.js";import{scaleCIMMarker as g}from"../symbols/support/cimSymbolUtils.js";import{S as f}from"../symbols/IconSymbol3DLayer.js";import"../config.js";import"../core/lang.js";import"./object.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/Error.js";import"./Logger.js";import"./Message.js";import"../geometry/Extent.js";import"./tslib.es6.js";import"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./metadata.js";import"./handleUtils.js";import"../core/accessorSupport/decorators/subclass.js";import"../geometry/Geometry.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"./ArrayPool.js";import"./arrayUtils.js";import"../core/scheduling.js";import"./write.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./arcadeOnDemand.js";import"../geometry.js";import"./typeUtils.js";import"./jsonMap.js";import"./CIMSymbolHelper.js";import"./aaBoundingRect.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./enumeration.js";import"../symbols/Symbol3DLayer.js";import"./colors.js";import"./persistableUrlUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"./Symbol3DMaterial.js";import"./Symbol3DOutline.js";class y{constructor(){}rasterizeText(e,t){this._textRasterizationCanvas||(this._textRasterizationCanvas=document.createElement("canvas"));const r=this._textRasterizationCanvas,i=r.getContext("2d");this.setFontProperties(i,t),this.parameters=t,this.textLines=e.split(/\r?\n/),this.lineHeight=this.computeLineHeight();const a=this.computeTextWidth(i,t),s=this.lineHeight*this.textLines.length;var o;r.width=a,r.height=s,this.renderedLineHeight=Math.round(this.lineHeight*t.pixelRatio),this.renderedHaloSize=t.halo.size*t.pixelRatio,this.renderedWidth=a*t.pixelRatio,this.renderedHeight=s*t.pixelRatio,this.fillStyle=`rgba(${(o=t.color).slice(0,3).toString()},${o[3]})`,this.haloStyle=function(e){return`rgb(${e.slice(0,3).toString()})`}(t.halo.color);const n=this.renderedLineHeight,l=this.renderedHaloSize;this.setFontProperties(i,t);const c=function(e,t){return"center"===e?.5*t:"right"===e?t:0}(i.textAlign,this.renderedWidth)+l,m=l;let h=0,p=0;l>0&&this.renderHalo(i,c,m,h,p,t),p+=m,h+=c;for(const e of this.textLines)i.globalCompositeOperation="destination-out",i.fillStyle="rgb(0, 0, 0)",i.fillText(e,h,p),i.globalCompositeOperation="source-over",i.fillStyle=this.fillStyle,i.fillText(e,h,p),p+=n;const g=i.getImageData(0,0,this.renderedWidth,this.renderedHeight),f=new Uint8Array(g.data);if(t.premultiplyColors){let e;for(let t=0;t<f.length;t+=4)e=f[t+3]/255,f[t]=f[t]*e,f[t+1]=f[t+1]*e,f[t+2]=f[t+2]*e}return{size:[this.renderedWidth,this.renderedHeight],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}renderHalo(e,t,r,i,a,s){const o=this.renderedWidth,n=this.renderedHeight;this._haloRasterizationCanvas||(this._haloRasterizationCanvas=document.createElement("canvas")),this._haloRasterizationCanvas.width=o,this._haloRasterizationCanvas.height=n;const l=this._haloRasterizationCanvas,c=l.getContext("2d");c.clearRect(0,0,o,n),this.setFontProperties(c,s),c.fillStyle=this.haloStyle,c.strokeStyle=this.haloStyle;const m=this.renderedHaloSize<3;c.lineJoin=m?"miter":"round",m?this.renderHaloEmulated(c,t,r):this.renderHaloNative(c,t,r),e.globalAlpha=this.parameters.halo.color[3],e.drawImage(l,0,0,o,n,i,a,o,n),e.globalAlpha=1}renderHaloEmulated(e,t,r){const i=this.renderedLineHeight,a=this.renderedHaloSize;for(const s of this.textLines){for(const[i,o]of d)e.fillText(s,t+a*i,r+a*o);r+=i}}renderHaloNative(e,t,r){const i=this.renderedLineHeight,a=this.renderedHaloSize;for(const s of this.textLines){const o=2*a,n=5,l=.1;for(let i=0;i<n;i++){const a=1-(n-1)*l+i*l;e.lineWidth=a*o,e.strokeText(s,t,r)}r+=i}}setFontProperties(e,t){const i=t.font,a=`${i.style} ${i.weight} ${r(t.size*t.pixelRatio)}px ${i.family}, sans-serif`;let s;switch(e.font=a,e.textBaseline="top",t.horizontalAlignment){case"left":s="left";break;case"right":s="right";break;case"center":s="center";break;default:s="left"}e.textAlign=s}computeTextWidth(e,t){let r=0;for(const t of this.textLines)r=Math.max(r,e.measureText(t).width);const i=t.font;return("italic"===i.style||"oblique"===i.style||"string"==typeof i.weight&&("bold"===i.weight||"bolder"===i.weight)||"number"==typeof i.weight&&i.weight>600)&&(r+=.3*e.measureText("A").width),r+=2*this.parameters.halo.size,Math.round(r)}computeLineHeight(){const e=1.275*this.parameters.size;return Math.round(e+2*this.parameters.halo.size)}}const d=[];{const e=16;for(let t=0;t<360;t+=360/e)d.push([Math.cos(Math.PI*t/180),Math.sin(Math.PI*t/180)])}var u;!function(e){e.Legend="legend",e.Preview="preview"}(u||(u={}));const M=(e,t,i)=>{if(e&&e.targetSize){let a;if(i){const t=Math.max(i.frame.xmax-i.frame.xmin,i.frame.ymax-i.frame.ymin);a=e.targetSize/r(t)}else a=e.targetSize/t.referenceSize;return a}return e&&e.scaleFactor?e.scaleFactor:1},x={fill:{legend:{frame:{xmax:15,xmin:0,ymax:15,ymin:0},geometry:{rings:[[[0,15],[15,7.5],[15,0],[0,0],[0,15]]]},canvasPaths:{rings:[[[0,15],[0,0],[15,7.5],[15,15],[0,15]]]}},preview:{frame:{xmax:100,xmin:0,ymax:100,ymin:0},geometry:{rings:[[[0,100],[100,100],[100,0],[0,0],[0,100]]]},canvasPaths:{rings:[[[0,100],[0,0],[100,0],[100,100],[0,100]]]}}},stroke:{legend:{frame:{xmax:24,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[12,0],[24,0]]]},canvasPaths:{paths:[[[0,2],[12,2],[24,2]]]}},preview:{frame:{xmax:100,xmin:0,ymax:-2,ymin:2},geometry:{paths:[[[0,0],[50,0],[100,0]]]},canvasPaths:{paths:[[[0,2],[50,2],[100,2]]]}}}};class C{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._rasterizer=new c,this._textRasterizer=new y,this._pictureMarkerCache=new Map}async rasterizeCIMSymbolAsync(e,t,r,i,s,o,n,l){i=i||(t?null!=t.centroid?"esriGeometryPolygon":a(t.geometry):null)||function(e){if(!(e&&e.data&&e.data.symbol))return null;switch(e.data.symbol.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}(e);const c=await this.analyzeCIMSymbol(e,t?function(e){const t=e?Object.keys(e):[];return t.map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}(t.attributes):null,r,i,l);return this.rasterizeCIMSymbol(c,t,i,s,o,n)}async analyzeCIMSymbol(e,r,i,a,s){const o=[],l=r?{geometryType:a,spatialReference:this._spatialReference,fields:r}:null;let c;await n(e.data,l,o,this._avoidSDF),t(s);for(const e of o)"CIMPictureMarker"!==e.cim.type&&"CIMPictureFill"!==e.cim.type&&"CIMPictureStroke"!==e.cim.type||(c||(c=[]),c.push(this.fetchPictureMarkerResource(e,s))),i&&"text"===e.type&&"string"==typeof e.text&&e.text.indexOf("[")>-1&&(e.text=m(i,e.text,e.cim.textCase));return c&&await Promise.all(c),o}async fetchPictureMarkerResource(t,r){const i=t.materialHash;if(!this._pictureMarkerCache.get(i)){const a=(await e(t.cim.url,{responseType:"image",signal:r&&r.signal})).data;this._pictureMarkerCache.set(i,a)}}rasterizeCIMSymbol(e,t,r,i,a,s){const o=[];for(const n of e){i&&"function"==typeof i.scaleFactor&&(i.scaleFactor=i.scaleFactor(t,a,s));const e=this._getRasterizedResource(n,t,r,i,a,s);if(!e)continue;let l=0,c=e.anchorX||0,m=e.anchorY||0,p=!1,g=0,f=0;if("esriGeometryPoint"===r){const e=M(i,n,null);if(g=h(n.offsetX,t,a,s)*e||0,f=h(n.offsetY,t,a,s)*e||0,"marker"===n.type)l=h(n.rotation,t,a,s)||0,p=!!n.rotateClockwise&&n.rotateClockwise;else if("text"===n.type){if(l=h(n.angle,t,a,s)||0,void 0!==n.horizontalAlignment)switch(n.horizontalAlignment){case"left":c=-.5;break;case"right":c=.5;break;default:c=0}if(void 0!==n.verticalAlignment)switch(n.verticalAlignment){case"top":m=.5;break;case"bottom":m=-.5;break;case"baseline":m=-.25;break;default:m=0}}}null!=e&&o.push({angle:l,rotateClockWise:p,anchorX:c,anchorY:m,offsetX:g,offsetY:f,rasterizedResource:e})}return this.getSymbolImage(o)}getSymbolImage(e){const t=document.createElement("canvas"),i=t.getContext("2d");let a=0,s=0,o=0,n=0;const l=[];for(let t=0;t<e.length;t++){const c=e[t],m=c.rasterizedResource;if(!m)continue;const h=m.size,p=c.offsetX,g=c.offsetY,f=c.anchorX,y=c.anchorY,d=c.rotateClockWise||!1;let u=c.angle,M=r(p)-h[0]*(.5+f),x=r(g)-h[1]*(.5+y),C=M+h[0],z=x+h[1];if(u){d&&(u=-u);const e=Math.sin(u*Math.PI/180),t=Math.cos(u*Math.PI/180),r=M*t-x*e,i=M*e+x*t,a=M*t-z*e,s=M*e+z*t,o=C*t-z*e,n=C*e+z*t,l=C*t-x*e,c=C*e+x*t;M=Math.min(r,a,o,l),x=Math.min(i,s,n,c),C=Math.max(r,a,o,l),z=Math.max(i,s,n,c)}a=M<a?M:a,s=x<s?x:s,o=C>o?C:o,n=z>n?z:n;const I=i.createImageData(m.size[0],m.size[1]);I.data.set(new Uint8ClampedArray(m.image.buffer));const b={offsetX:p,offsetY:g,rotateClockwise:d,angle:u,rasterizedImage:I,anchorX:f,anchorY:y};l.push(b)}t.width=o-a,t.height=n-s;const c=-a,m=n;for(let e=0;e<l.length;e++){const t=l[e],a=this._imageDataToCanvas(t.rasterizedImage),s=t.rasterizedImage.width,o=t.rasterizedImage.height,n=c-s*(.5+t.anchorX),h=m-o*(.5-t.anchorY);if(t.angle){const e=(360-t.angle)*Math.PI/180;i.save(),i.translate(r(t.offsetX),-r(t.offsetY)),i.translate(c,m),i.rotate(e),i.translate(-c,-m),i.drawImage(a,n,h),i.restore()}else i.drawImage(a,n+r(t.offsetX),h-r(t.offsetY))}const h=new f({x:c/t.width-.5,y:m/t.height-.5});return{imageData:0!==t.width&&0!==t.height?i.getImageData(0,0,t.width,t.height):i.createImageData(1,1),anchorPosition:h}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,r=t.getContext("2d");return t.width=e.width,t.height=e.height,r.putImageData(e,0,0),t}_imageTo32Array(e,t,r){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const i=this._imageDataCanvas,a=i.getContext("2d");return i.width=t,i.height=r,a.drawImage(e,0,0,t,r),new Uint32Array(a.getImageData(0,0,t,r).data.buffer)}_getRasterizedResource(e,t,r,a,s,o){let n,l,c,m;if("esriGeometryPolyline"===r||"esriGeometryPolygon"===r){const m=a&&a.style?a.style:u.Legend,p="esriGeometryPolyline"===r?x.stroke[m]:x.fill[m];if("line"===e.type){if("CIMSolidStroke"!==e.cim.type){if("CIMPictureStroke"===e.cim.type){const r=h(e.width,t,s,o),{image:i,width:a,height:n}=this._getPictureResource(e,r);return this._rasterizePictureResource(e,i,a,n,p,r)}return null}({analyzedCIM:n,hash:c}=z(e,t,s,o)),l=this._embedCIMLayerInVectorMarker(n,p)}else if("marker"===e.type){if("CIMPictureMarker"===e.cim.type)return null;if("CIMVectorMarker"!==e.cim.type)return null;e.cim.offsetX=h(e.offsetX,t,s,o),e.cim.offsetY=h(e.offsetY,t,s,o),e.cim.rotation=h(e.rotation,t,s,o),e.cim.markerPlacement=e.markerPlacement,({analyzedCIM:n}=z(e,t,s,o)),c=i(JSON.stringify(n)).toString(),l=this._embedCIMLayerInVectorMarker(n,p)}else{if("text"===e.type)return null;if("fill"===e.type){if("CIMHatchFill"===e.cim.type||"CIMVectorMarker"===e.cim.type||"CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type){const r=e.cim.size||e.cim.height;let i,a,l;if("CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type)({image:i,width:a,height:l}=this._getPictureResource(e,r));else{({analyzedCIM:n,hash:c}=z(e,t,s,o));const r=this._rasterizer.rasterizeJSONResource(n,1,this._avoidSDF);i=r.image,a=r.size[0],l=r.size[1]}return this._rasterizePictureResource(e,i,a,l,p,null)}if("CIMSolidFill"!==e.cim.type)return null;({analyzedCIM:n,hash:c}=z(e,t,s,o)),l=this._embedCIMLayerInVectorMarker(n,p)}}}else{if("text"===e.type)return m=this._rasterizeTextResource(e,t,a,s,o),m;({analyzedCIM:n,hash:c}=z(e,t,s,o));const r=M(a,e,null);if("CIMPictureMarker"===e.cim.type){const i=h(e.size,t,s,o)*r,{image:a,width:n,height:l}=this._getPictureResource(e,i);return m={image:a,size:[n,l],sdf:!1,simplePattern:!1,anchorX:e.anchorPoint?e.anchorPoint.x:0,anchorY:e.anchorPoint?e.anchorPoint.y:0},m}g(n,r,{preserveOutlineWidth:!1}),l=n}c+=r,a&&(c+=JSON.stringify(a));const p=this._resourceCache;return p.has(c)?p.get(c):(m=this._rasterizer.rasterizeJSONResource(l,window.devicePixelRatio||1,this._avoidSDF),p.set(c,m),m)}_rasterizeTextResource(e,t,r,i,a){const s=M(r,e,null),o=h(e.text,t,i,a);if(!o||0===o.length)return null;const n=h(e.fontName,t,i,a),l=h(e.style,t,i,a),c=h(e.weight,t,i,a),m=h(e.decoration,t,i,a),g=h(e.size,t,i,a)*s,f=h(e.horizontalAlignment,t,i,a),y=h(e.verticalAlignment,t,i,a),d=p(h(e.color,t,i,a)),u=p(h(e.outlineColor,t,i,a)),x={color:d,size:g,horizontalAlignment:f,verticalAlignment:y,font:{family:n,style:l,weight:c,decoration:m},halo:{size:h(e.outlineSize,t,i,a)||0,color:u,style:l},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(o,x)}_rasterizePictureResource(e,t,i,a,n,l){const c=document.createElement("canvas"),m=c.getContext("2d");c.height=r(Math.max(Math.abs(n.frame.ymax-n.frame.ymin),l)),c.width=r(Math.abs(n.frame.xmax-n.frame.xmin));const h=m.createImageData(i,a);h.data.set(new Uint8ClampedArray(t.buffer));const p=this._imageDataToCanvas(h),g=m.createPattern(p,"repeat"),f=Math.cos((-e.cim.rotation||0)*Math.PI/180),y=Math.sin((-e.cim.rotation||0)*Math.PI/180);g.setTransform({m11:f,m12:y,m21:-y,m22:f,m41:r(e.cim.offsetX)||0,m42:r(e.cim.offsetY)||0});const d=n.canvasPaths;let u,M,x;s(d)?(u=d.rings,m.fillStyle=g,M=m.fill,x=["evenodd"]):o(d)&&(u=d.paths,m.strokeStyle=g,m.lineWidth=l,M=m.stroke,u[0][0][1]=c.height/2,u[0][1][1]=c.height/2),m.beginPath();for(const e of u){const t=e?e.length:0;if(t>1){let i=e[0];m.moveTo(r(i[0]),r(i[1]));for(let a=1;a<t;++a)i=e[a],m.lineTo(r(i[0]),r(i[1]));m.closePath()}}M.apply(m,x);const C=m.getImageData(0,0,c.width,c.height),z=new Uint8Array(C.data);return{size:[c.width,c.height],image:new Uint32Array(z.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}_getPictureResource(e,t){const i=this._pictureMarkerCache.get(e.materialHash);if(!i)return null;const a=i.height/i.width,s=t?a>1?r(t):r(t)/a:i.width,o=t?a>1?r(t)*a:r(t):i.height;return{image:this._imageTo32Array(i,s,o),width:s,height:o}}_embedCIMLayerInVectorMarker(e,t){const r=s(t.geometry)?"CIMPolygonSymbol":"CIMLineSymbol";return{type:"CIMVectorMarker",frame:t.frame,markerGraphics:[{type:"CIMMarkerGraphic",geometry:t.geometry,symbol:{type:r,symbolLayers:[e]}}]}}}function z(e,t,r,i){let a,s;if("function"==typeof e.materialHash){a=(0,e.materialHash)(t,r,i),s=l(e.cim,e.materialOverrides)}else a=e.materialHash,s=e.cim;return{analyzedCIM:s,hash:a}}export{C as CIMSymbolRasterizer,u as GeometryStyle};
