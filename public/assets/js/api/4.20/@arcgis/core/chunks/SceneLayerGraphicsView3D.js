/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{L as r}from"./Logger.js";import{j as s,i,b as o,u as a}from"../core/lang.js";import{init as p}from"../core/watchUtils.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{p as l,g as d,b as u}from"./mathUtils.js";import{projectBuffer as c,projectVectorToVector as j,projectBoundingRect as h}from"../geometry/projection.js";import{a as g}from"./aaBoundingRect.js";import{d as y}from"../geometry/Extent.js";import{e as b,m as f}from"./dehydratedFeatures.js";import{h as v}from"./ColorMaterial.js";import{G as _,I as S,a as w}from"./I3SAttributeOverrides.js";import{l as I,n as C}from"./ElevationQuery.js";import{g as E}from"./zscale.js";import D from"../rest/support/Query.js";import{W as x}from"./WorkerHandle.js";import{L as U}from"./LayerView3D.js";import{G as F,Q as V}from"./Graphics3DFeatureLikeLayerView.js";import{S as O,a as A,c as M,p as T,d as L}from"./SceneLayerView.js";import{y as P,z as R,w as N,n as G}from"./I3SUtil.js";import{D as k}from"./DefinitionExpressionSceneLayerView.js";import{P as B}from"./PopupSceneLayerView.js";import{d as q}from"./lineUtils.js";import{d as Q,u as H}from"../views/SceneView.js";import z from"../views/layers/support/FeatureFilter.js";import{T as W}from"./Scheduler.js";import"../geometry.js";import"../geometry/Geometry.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"./arrayUtils.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./Message.js";import"./object.js";import"../config.js";import"./string.js";import"./write.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../core/Collection.js";import"./Evented.js";import"../layers/support/fieldUtils.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"./enumeration.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"./chartMediaInfoUtils.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/StylePattern3D.js";import"./colors.js";import"./Symbol3DOutline.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../intl.js";import"../request.js";import"../kernel.js";import"./assets.js";import"./Loadable.js";import"./Promise.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./uid.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./mat4.js";import"./pe.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./byteSizeEstimations.js";import"./aaBoundingBox.js";import"./quantizationUtils.js";import"../layers/support/Field.js";import"./fieldType.js";import"./vec3f32.js";import"./plane.js";import"./sphere.js";import"./vec4.js";import"./vec4f64.js";import"./ray.js";import"./vectorStacks.js";import"./quatf64.js";import"./mat4f64.js";import"./vec2f64.js";import"./VertexColor.glsl.js";import"./Program.js";import"./Texture.js";import"./VertexArrayObject.js";import"./mat4f32.js";import"./Util.js";import"./vec2.js";import"./utils4.js";import"./geometryDataUtils.js";import"./triangle.js";import"./lineSegment.js";import"./BufferView.js";import"../core/Handles.js";import"./frustum.js";import"./InterleavedLayout.js";import"./types.js";import"./PromiseQueue.js";import"./asyncUtils.js";import"./I3SBinaryReader.js";import"./objectResourceUtils.js";import"./devEnvironmentUtils.js";import"./mat3.js";import"./vec3.js";import"./DefaultMaterial_COLOR_GAMMA.js";import"./compilerUtils.js";import"./Version.js";import"./quat.js";import"./requestImageUtils.js";import"./Texture2.js";import"./FramebufferObject.js";import"./verticalOffsetUtils.js";import"./testSVGPremultipliedAlpha.js";import"./VerticalOffset.glsl.js";import"./PhysicallyBasedRendering.glsl.js";import"./PiUtils.glsl.js";import"./RibbonLineMaterial.js";import"./ElevationProvider.js";import"./sdfPrimitives.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./layerViewUtils.js";import"./MapUtils.js";import"./pointUtils.js";import"./Object3D.js";import"./mathUtils2.js";import"./vec2f32.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./earcut.js";import"./visualVariableUtils.js";import"./sizeVariableUtils.js";import"./triangulationUtils.js";import"./deduplicate.js";import"./utils2.js";import"./ItemCache.js";import"./MemCache.js";import"../symbols/support/cimSymbolUtils.js";import"./utils3.js";import"./callExpressionWithFeature.js";import"./RenderGeometry.js";import"./lineStippleUtils.js";import"../geometry/support/MeshComponent.js";import"../geometry/support/MeshMaterial.js";import"../geometry/support/MeshTexture.js";import"./screenshotUtils.js";import"../geometry/support/MeshMaterialMetallicRoughness.js";import"./projection.js";import"./NativeLineMaterial.js";import"./symbolLayerUtils3D.js";import"./glUtil.js";import"./Camera.js";import"./Intersector.js";import"./boundedPlane.js";import"../TimeExtent.js";import"./timeUtils.js";import"./DataLayerSource.js";import"../rest/support/StatisticDefinition.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./arcgisLayerUrl.js";import"./diffUtils.js";import"./Graphics3DScaleVisibility.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"./VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../renderers/support/ClassBreakInfo.js";import"../symbols/support/jsonUtils.js";import"./symbolConversion.js";import"./commonProperties.js";import"../renderers/DictionaryRenderer.js";import"./LRUCache.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"../renderers/support/UniqueValueInfo.js";import"./styleUtils.js";import"../renderers/support/jsonUtils.js";import"../layers/Layer.js";import"./rendererConversion.js";import"./defaults.js";import"./defaultsJSON.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./PooledRBush.js";import"./quickselect.js";import"./Graphics3DObjectStates.js";import"./QueryEngine.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./projectionSupport.js";import"./json.js";import"./QueryEngineCapabilities.js";import"./utils6.js";import"./spatialQuerySupport.js";import"../layers/support/FieldsIndex.js";import"./utils7.js";import"./basemapUtils.js";import"../Basemap.js";import"./loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./writeUtils.js";import"../rest/support/FeatureSet.js";import"./floorFilterUtils.js";import"./Graphics3DFrustumVisibility.js";import"./attributeUtils.js";import"../core/HandleOwner.js";import"../views/layers/LayerView.js";import"./quatf32.js";import"./popupUtils.js";import"../Camera.js";import"../Ground.js";import"../Viewpoint.js";import"./domUtils.js";import"./scaleUtils.js";import"./layerUtils.js";import"./WebGLRequirements.js";import"./InputManager.js";import"./Queue.js";import"../views/input/gamepad/GamepadInputDevice.js";import"./screenUtils2.js";import"./capabilities2.js";import"./interactiveToolUtils.js";import"./projector.js";import"./widgetUtils.js";import"../widgets/Popup.js";import"./throttle.js";import"../widgets/Feature.js";import"../widgets/Widget.js";import"./uuid.js";import"./jsxWidgetSupport.js";import"../widgets/Attachments.js";import"../widgets/Attachments/AttachmentsViewModel.js";import"../rest/query/support/AttachmentInfo.js";import"../rest/support/AttachmentQuery.js";import"./messageBundle.js";import"./jsxFactory.js";import"../widgets/Feature/FeatureViewModel.js";import"../rest/support/RelationshipQuery.js";import"../tasks/QueryTask.js";import"./executeForTopCount.js";import"./utils5.js";import"./query.js";import"./pbfQueryUtils.js";import"./pbf.js";import"./queryZScale.js";import"../rest/support/TopFeaturesQuery.js";import"../rest/support/TopFilter.js";import"../tasks/Task.js";import"../layers/FeatureLayer.js";import"./MultiOriginJSONSupport.js";import"./ReadOnlyMultiOriginJSONSupport.js";import"../form/FormTemplate.js";import"../form/ExpressionInfo.js";import"../form/elements/GroupElement.js";import"../form/elements/FieldElement.js";import"../form/elements/support/inputs.js";import"../form/elements/inputs/BarcodeScannerInput.js";import"../form/elements/inputs/TextInput.js";import"../form/elements/inputs/Input.js";import"../form/elements/inputs/ComboBoxInput.js";import"../form/elements/inputs/DateTimePickerInput.js";import"../form/elements/inputs/RadioButtonsInput.js";import"../form/elements/inputs/SwitchInput.js";import"../form/elements/inputs/TextAreaInput.js";import"../form/elements/inputs/TextBoxInput.js";import"../form/support/elements.js";import"./FeatureIndex.js";import"./shared.js";import"./APIKeyMixin.js";import"./ArcGISService.js";import"./BlendLayer.js";import"./CustomParametersMixin.js";import"./OperationalLayer.js";import"./commonProperties2.js";import"./ElevationInfo.js";import"./PortalLayer.js";import"./RefreshableLayer.js";import"./ScaleRangeLayer.js";import"./TemporalLayer.js";import"../TimeInterval.js";import"../layers/support/TimeInfo.js";import"../layers/support/FeatureReductionSelection.js";import"../layers/support/FeatureReductionCluster.js";import"../layers/support/LabelClass.js";import"./labelUtils.js";import"./featureReductionUtils.js";import"../layers/support/FeatureTemplate.js";import"../layers/support/FeatureType.js";import"./fieldProperties.js";import"../layers/support/GeometryFieldsInfo.js";import"./labelingInfo.js";import"../layers/support/LayerFloorInfo.js";import"../layers/support/Relationship.js";import"./styleUtils2.js";import"../support/popupUtils.js";import"./Heading.js";import"../widgets/support/widget.js";import"./accessibleHandler.js";import"./vmEvent.js";import"../widgets/Spinner/SpinnerViewModel.js";import"./AnchorElementViewModel.js";import"../widgets/Popup/PopupViewModel.js";import"../symbols/support/symbolUtils.js";import"./actions.js";import"./GoTo.js";import"../views/GroundView.js";import"../layers/support/ElevationSampler.js";import"./TerrainConst.js";import"../layers/support/TileInfo.js";import"../layers/support/LOD.js";import"../views/View.js";import"../Map.js";import"./CollectionFlattener.js";import"./TablesMixin.js";import"./GraphicsCollection.js";import"../views/BasemapView.js";import"../views/Magnifier.js";import"./RefreshableLayerView.js";import"../views/input/Input.js";import"../views/input/gamepad/GamepadSettings.js";import"../views/navigation/Navigation.js";import"../views/navigation/gamepad/GamepadSettings.js";import"../views/ViewAnimation.js";import"../webscene/Lighting.js";import"../webscene/Environment.js";import"../webscene/background/Background.js";import"../webscene/background/ColorBackground.js";import"./earthUtils.js";import"./sunUtils.js";import"./viewpointUtils.js";import"./spatialReferenceSupport.js";import"./ray2.js";import"./resources.js";import"./labelFormatUtils.js";import"./vec4f32.js";import"./geometryServiceUtils.js";import"../rest/support/ProjectParameters.js";import"../views/3d/support/SceneViewPerformanceInfo.js";import"../views/3d/support/LayerPerformanceInfo.js";import"./terrainUtils.js";import"./VectorTile.js";import"./mat3f32.js";import"./config.js";import"./TiledDisplayObject.js";import"./DisplayObject.js";import"./TileKey.js";import"./rasterUtils.js";import"./ElevationQueryTileCache.js";import"./LercDecoder.js";import"./tileUtils.js";import"../views/2d/ViewState.js";import"./mat2d.js";import"./mat2df32.js";import"./mat2df64.js";import"./viewpointUtils2.js";import"./CameraSpace.glsl.js";import"./EdgeProcessingWorker.js";import"./intersectorUtilsConversions.js";import"./hitTestSelectUtils.js";import"../views/ui/DefaultUI.js";import"../views/ui/UI.js";import"../widgets/Attribution.js";import"../widgets/Attribution/AttributionViewModel.js";import"../widgets/Compass.js";import"../widgets/Compass/CompassViewModel.js";import"../widgets/NavigationToggle.js";import"../widgets/NavigationToggle/NavigationToggleViewModel.js";import"../widgets/Zoom.js";import"../widgets/Zoom/ZoomViewModel.js";class Z extends x{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",e,{hasInitialize:!0})}getTransferList(e){return[e.geometryBuffer]}}const J=r.getLogger("esri.views.3d.layers.SceneLayerGraphicsView3D"),K=L();let Y=class extends(k(B(U(O)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this.drapeSourceType=1,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new _,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}initialize(){var e;const t=this.layer;this.addResolvingPromise(t.indexInfo),this._attributeOverrides=new S(this.layer,null==(e=this.view.resourceController)?void 0:e.memoryController),P(t,this.view.spatialReference,this.view.viewingMode),this.fieldsHelper=new A({layerView:this}),this.updatingHandles.add(t,"rangeInfos",(e=>this._rangeInfosChanged(e)),2),this.updatingHandles.add(t,"renderer",((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add(this,"parsedDefinitionExpression",(()=>this._filterChange())),this.updatingHandles.add(this,"view.floors",(()=>this.graphics3d.filterVisibility.filterChanged())),this.handles.add(p(q,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import("./I3STreeDebugger.js").then((({I3STreeDebugger:t})=>{!this._treeDebugger&&q.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}))}))}else e||!this._treeDebugger||q.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)}))),this._set("graphics3d",new F({owner:this,layer:t,preferredUpdatePolicy:0,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,suspendResumeExtentMode:"data",dataExtent:t.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.graphics3d.elevationAlignment&&this.graphics3d.elevationAlignment.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=E("point",t.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.graphics3d.setup()),this._memCache=this.view.resourceController.memoryController.getMemCache(t.uid),this._controller=new w({layerView:this,scaleVisibilityEnabled:!1}),R(this.layer.geometryDefinitions)&&(this._worker=new Z((e=>this.view.resourceController.schedule(e)))),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new V({layerView:this,priority:W.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(this,"maximumNumberOfFeatures",(e=>this._controller.featureTarget=e),2),this.updatingHandles.add(this,"suspended",(e=>{e&&this._removeAllNodeData()}))}))}destroy(){this._treeDebugger=s(this._treeDebugger),this._attributeOverrides=s(this._attributeOverrides),this._set("graphics3d",s(this.graphics3d)),this._controller=s(this._controller),this._queryEngine=s(this._queryEngine),this._worker=s(this._worker),this._memCache=s(this._memCache),this._nodesAddedToStage.clear(),this.fieldsHelper=s(this.fieldsHelper)}get requiredFields(){var e,t;return null!=(e=null==(t=this.fieldsHelper)?void 0:t.requiredFields)?e:[]}get maximumNumberOfFeatures(){const e=this.graphics3d&&this.graphics3d.graphicsCore&&this.graphics3d.graphicsCore.displayFeatureLimit;return e?e.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&(!!this._controller&&!this._controller.leavesReached)}get hasM(){return!1}get hasZ(){return!0}notifyGraphicGeometryChanged(e){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(e)}async whenGraphicAttributes(e,t){return N(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]))}getGraphicFromGraphicUid(e){if(!this.loadedGraphics)return null;const t=v(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,t):null}whenGraphicBounds(e,t){return this.graphics3d.graphicsCore.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphics3d.graphicsCore.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return!!(this._controller&&this._controller.updating||this.graphics3d&&this.graphics3d.updating)}getRenderingInfo(e,t,r){const s=I(e,{renderer:t,arcade:r});if(i(s)&&s.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}return s}async getRenderingInfoAsync(e,t,r,s){return C(e,{renderer:t,arcade:r,...s})}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}highlight(e){return this.graphics3d.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.graphics3d.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return M(this.attributeEditingContext,e)}async extractBinaryPointData(e,t){const r={geometryBuffer:e.geometryBuffer};return o(this._worker)&&(this._worker=new Z((e=>this.view.resourceController.schedule(e)))),this._worker.invoke(r,t).then((e=>{if(i(e)){return{positionData:e.positions,featureIds:e.featureIds}}throw new Error("Failed to decompress Draco point data")}))}checkExtent(e,t){e&&!y(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&J.error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&J.error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++)}async addNode(e,t,r){if(!ee(t)&&!X(t))return Promise.reject();if(this._nodesAddedToStage.has(e.index))return void J.error("I3S node "+e.id+" already added");const s=this.layer.fullExtent,i=s&&function(e,t){e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t);e.hasM&&(e.mmin-=t,e.mmax+=t);return e}(s.clone(),.5),o=this._controller.crsVertex,a=[],p={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(ee(t)?await this._addNodeBinaryPointData(e,p,t,i,a,r):X(t)&&this._addNodeLegacyPointData(e,p,t,i,a),await this._attributeOverrides.apply(p.featureIds,t.attributeDataInfo,r),e.numFeatures=p.graphics.length,this._updateNodeMemory(e),te(p),a.length>0&&(this.computeObb(e,a,o),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return this._cacheNodeData(p),Promise.resolve();if(this._verticalScale)for(const e of p.graphics)this._verticalScale(e.geometry);return this._nodesAddedToStage.set(e.index,p),this.loadedGraphics.addMany(p.graphics),this._filterNode(p),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve()}computeObb(e,t,r){const s=this._controller.crsIndex,i=s.isGeographic?this.view.renderSpatialReference:s;c(t,r,0,t,i,0,t.length/3);const o={data:t,size:3};e.serviceObb=Q(o),s.isGeographic&&j(e.serviceObb.center,i,e.serviceObb.center,s)}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return!1}updateNodeState(){}async _addNodeBinaryPointData(e,r,s,o,p,n){const m=await this.extractBinaryPointData(s,n);if(null==m)return Promise.reject();const u=this._getObjectIdField(),j=this._controller.crsVertex,h=this.view.spatialReference,g=this.graphics3d.graphicsCore,{positionData:y,featureIds:b}=m,v=y.length/3,_=new Array;for(let r=0;r<v;r++){const s=i(e.serviceObb)?e.serviceObb.center:[0,0,0],n=3*r,m=l(y[n+0],y[n+1],y[n+2]);d(m,m,s),e.serviceObb||p.push(m[0],m[1],m[2]),o&&this.checkExtent(o,m);const v=b[r],S={};null!=v&&(S[u]=v);const w=null==v?t.generateUID():v;c(m,j,0,se,h,0,1);const I=f(se[0],se[1],se[2],h),C=this.loadedGraphics.get(w);if(i(C))C.level<e.level&&(ie.property="geometry",ie.graphic=C,ie.oldValue=a(C.geometry),ie.newValue=I,C.geometry=I,g.graphicUpdateHandler(ie)),_.push(C);else{const r=t.generateUID();_.push({objectId:w,uid:r,geometry:I,attributes:S,visible:!0,level:e.level})}}r.graphics=_,r.featureIds=b}_addNodeLegacyPointData(e,r,s,o,a){const p=this._getObjectIdField(),n=this._controller.crsVertex,m=this.view.spatialReference,l=[0,0,0],d=new Array,u=new Array;for(const r of s.pointData){const s=r.featureDataPosition,j=s.length,h=r.geometries&&r.geometries[0]||re[j],g=r.featureIds[0];if("points"!==h.params.type)continue;o&&this.checkExtent(o,s);const y={};null!=g&&(y[p]=g);const b=null==g?t.generateUID():g;let v;"Embedded"===h.type&&(v=h.params.vertexAttributes.position);for(let r=0;r<v.length;r+=j){for(let e=0;e<j;e++)l[e]=s[e]+v[r+e];const o=3===j;e.serviceObb||a.push(l[0],l[1],o?l[2]:0),c(l,n,0,se,m,0,1);const p=f(se[0],se[1],o?se[2]:void 0,m),d=this.loadedGraphics.get(b);i(d)?u.push(d):u.push({objectId:b,uid:t.generateUID(),geometry:p,attributes:y,visible:!0})}d.push(g)}r.graphics=u,r.featureIds=d}_updateNodeMemory(e){e.memory=4096+(i(e.numFeatures)?e.numFeatures*this.graphics3d.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>b(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e)}})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,s){if(!this._nodesAddedToStage.has(e.index))return this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,s),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve();J.error("I3S node "+e.id+" already added")}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)))}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&i(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&i(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const r=this._nodesAddedToStage.get(e);r&&!o(r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r))}async updateAttributes(e,t,r){const s=this._nodesAddedToStage.get(e);s&&(await this._attributeOverrides.apply(s.featureIds,t,r),s.attributeInfo=t,this._attributeValuesChanged(s))}_attributeValuesChanged(e){if(te(e),this._filterNode(e),this.graphics3d.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.graphics3d.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,s=new Set;let i,o;e?(await e.collectRequiredFields(s,r),i=Array.from(s).sort()):i=[],s.clear(),t?(await t.collectRequiredFields(s,r),o=Array.from(s).sort()):o=[],i.length===o.length&&i.every(((e,t)=>i[t]===o[t]))||this._reloadAllNodes()}_rangeInfosChanged(e){null!=e&&e.length>0&&J.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression;for(const r of e.graphics){const e=r.visible;r.visible=!t||this._evaluateClause(t,r),e!==r.visible&&(ie.graphic=r,ie.property="visible",ie.oldValue=e,ie.newValue=r.visible,this.graphics3d.graphicsCore.graphicUpdateHandler(ie))}}_invalidateElevation(e){const t=this._controller.crsIndex;h(e.extent,e.spatialReference,oe,t),this._controller.updateElevationChanged(oe,t)}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return i(this.filter)?this.filter.createQuery(e):new D(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),null==t?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),null==t?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),null==t?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),null==t?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(o(e)?this.createQuery():D.from(e))}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return e?e.usedMemory:0}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return.8*((this._controller?this._controller.unloadedMemoryEstimate:0)+(e?e.unprocessedMemoryEstimate:0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){T(this.attributeEditingContext,e)}get attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,s)=>{this.setAttributeData(t,r);const o=this._nodesAddedToStage.get(t);if(i(s)){const t=this.loadedGraphics.get(s.attributes[e]);i(t)&&this.graphics3d.graphicsCore.recreateGraphics([t])}else i(o)&&this.graphics3d.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.graphics3d.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this._nodesAddedToStage.size,numFeatures:this.loadedGraphics.length}}};e([n()],Y.prototype,"graphics3d",void 0),e([n({type:z})],Y.prototype,"filter",void 0),e([n()],Y.prototype,"loadedGraphics",void 0),e([n({aliasOf:"layer"})],Y.prototype,"i3slayer",void 0),e([n()],Y.prototype,"_controller",void 0),e([n()],Y.prototype,"updating",void 0),e([n()],Y.prototype,"suspended",void 0),e([n()],Y.prototype,"holeFilling",void 0),e([n(H)],Y.prototype,"updatingProgress",void 0),e([n({aliasOf:"_controller.updatingProgress"})],Y.prototype,"updatingProgressValue",void 0),e([n(K.requiredFields)],Y.prototype,"requiredFields",null),e([n(K.availableFields)],Y.prototype,"availableFields",void 0),e([n()],Y.prototype,"fieldsHelper",void 0),e([n({type:Number})],Y.prototype,"maximumNumberOfFeatures",null),e([n({readOnly:!0})],Y.prototype,"maximumNumberOfFeaturesExceeded",null),e([n({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.point.lodFactor"})],Y.prototype,"lodFactor",void 0),e([n({readOnly:!0})],Y.prototype,"hasM",null),e([n({readOnly:!0})],Y.prototype,"hasZ",null),Y=e([m("esri.views.3d.layers.SceneLayerGraphicsView3D")],Y);var $=Y;function X(e){return"pointData"in e}function ee(e){return"geometryBuffer"in e&&null!==e.geometryBuffer}function te(e){const t=e.attributeInfo;for(let r=0;r<e.graphics.length;r++){const s=e.graphics[r];if(s.attributes||(s.attributes={}),i(t)&&i(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=G(t.attributeData[e],r))}}const re={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},se=u(),ie={graphic:null,property:null,oldValue:null,newValue:null},oe=g();export default $;
