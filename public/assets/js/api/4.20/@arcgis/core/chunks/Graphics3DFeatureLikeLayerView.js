/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import i from"../core/Accessor.js";import{n as s}from"./compilerUtils.js";import r from"../core/Handles.js";import{isAbortError as a,logOnError as n}from"../core/promiseUtils.js";import{on as l,init as o}from"../core/watchUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import{b as u,i as c}from"../core/lang.js";import"./ensureType.js";import{L as d}from"./Logger.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{d as y}from"./diffUtils.js";import{canProject as g,project as m}from"../geometry/support/webMercatorUtils.js";import f from"../rest/support/Query.js";import{t as b}from"./lineUtils.js";import{G as w,a as E}from"./Graphics3DScaleVisibility.js";import{G as _,a as x}from"./Graphics3DObjectStates.js";import"../geometry.js";import V from"../geometry/Extent.js";import{Q as S}from"./QueryEngine.js";import C from"../rest/support/FeatureSet.js";import{f as v}from"./typeUtils.js";import{g as O}from"./floorFilterUtils.js";import j from"../views/layers/support/FeatureFilter.js";import{T as I}from"./Scheduler.js";import{G as R}from"./Graphics3DFrustumVisibility.js";import{l as Q}from"./ColorMaterial.js";import{a as F}from"./attributeUtils.js";import{W as T}from"../core/HandleOwner.js";const q=S;let U=class extends i{constructor(e){super(e),this._dataQueryEngineInstance=null}get queryGeometryType(){switch(this.layer.geometryType){case"multipoint":case"point":case"polygon":case"polyline":return this.layer.geometryType;case"mesh":return"polygon";default:return}}get defaultQueryJSON(){return new f({outSpatialReference:this.spatialReference}).toJSON()}get dataQueryEngine(){return this.ensureDataQueryEngine()}destroy(){this.clear()}clear(){return!!this._dataQueryEngineInstance&&(this._dataQueryEngineInstance.destroy(),this._dataQueryEngineInstance=null,!0)}async executeQueryForIdSet(e,t){return this.dataQueryEngine.executeQueryForIdSet(this._ensureQueryJSON(e),t)}async executeQueryForCount(e,t){return this.dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:i,extent:s}=await this.dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:i,extent:V.fromJSON(s)}}async executeQueryForIds(e,t){return this.dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQueryForLatestObservations(e,t){const i=await this.dataQueryEngine.executeQueryForLatestObservations(this._ensureQueryJSON(e),t),s=C.fromJSON(i);return s.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),s}async executeQuery(e,t){const i=await this.dataQueryEngine.executeQuery(this._ensureQueryJSON(e),t),s=C.fromJSON(i);return s.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),s}_ensureQueryJSON(e){return u(e)?this.defaultQueryJSON:("outSpatialReference"in e&&!e.outSpatialReference&&(e.outSpatialReference=this.spatialReference),e.toJSON())}ensureDataQueryEngine(){if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const e="timeInfo"in this.layer&&this.layer.timeInfo&&this.layer.timeInfo.toJSON()||null,t=this.layer.objectIdField,i=v.toJSON(this.queryGeometryType),s=this.layer.fields.map((e=>e.toJSON())),r=this.layerView.view.resourceController.scheduler,a=this.priority,n=this.spatialReference.toJSON(),l=this.layerView.graphics3d.graphicsCore.featureStore,{hasZ:o,hasM:h}=this.layerView;return this._dataQueryEngineInstance=new q({hasZ:o,hasM:h,geometryType:i,fields:s,timeInfo:e,spatialReference:n,objectIdField:t,featureStore:l,scheduler:r,priority:a}),this._dataQueryEngineInstance}};e([h({constructOnly:!0})],U.prototype,"layerView",void 0),e([h({constructOnly:!0})],U.prototype,"priority",void 0),e([h({readOnly:!0,aliasOf:"layerView.view.spatialReference"})],U.prototype,"spatialReference",void 0),e([h({readOnly:!0,aliasOf:"layerView.layer"})],U.prototype,"layer",void 0),e([h({readOnly:!0})],U.prototype,"queryGeometryType",null),e([h({readOnly:!0})],U.prototype,"defaultQueryJSON",null),U=e([p("esri.views.3d.layers.graphics.QueryEngine")],U);var G=U;const k=d.getLogger("esri.views.3d.layers.graphics.Graphics3DFilterVisibility");let N=class extends i{constructor(...e){super(...e),this.filter=null,this._dirty=!1,this._querying=!1,this._handles=new r}get updating(){return this._dirty||this._querying||null!=this._queryResult}setup(e,t){this._layerView=e,this._core=t,this._objectIdField=e.layer.objectIdField,this._queryEngine=new G({layerView:this._layerView,priority:I.FILTER_VISIBILITY});const i=this._layerView.view.resourceController.scheduler;this._handles.add(i.registerTask(I.FILTER_VISIBILITY,this)),this._handles.add(l(t.owner,"loadedGraphics","after-changes",(e=>this._graphicsChanged(e)),(()=>this.dirty=!0))),this.filterChanged()}destroy(){this._handles.destroy(),this._handles=null,this.clear(),this._layerView=null,this._core=null}clear(){this._queryEngine.clear()&&(this._core.modifyGraphics3DGraphicVisibilities((e=>e.clearVisibilityFlag(2))),this._queryResult=null,this._querying=!1),this.dirty=!1,this.notifyChange("updating")}_graphicsChanged(e){this._queryEngine&&0==(1&e.type)||(this.dirty=!0)}updateVisibility(e){this.active&&(e.hasVisibilityFlag(2,0)||e.setVisibilityFlag(2,!1,0),this.dirty=!0)}filterChanged(){const e=this.recomputeFilter();e!==this.filter&&(this.filter=e,this.dirty=!0)}get active(){return this.filter&&this._core.graphics3DGraphics.size>0}recomputeFilter(){const e="filter"in this._layerView?this._layerView.filter:null,t="timeExtent"in this._layerView?this._layerView.timeExtent:null,i=O(this._layerView);if(u(t)&&u(i))return e;const s=c(e)?e.clone():new j;if(c(t)&&(s.timeExtent=c(s.timeExtent)?s.timeExtent.intersection(t):t),c(i)){const e=null==s.where||""===s.where;s.where=e?i:`(${s.where}) AND (${i})`}return s}get running(){return this._dirty&&!this._querying||null!=this._queryResult}runTask(e){this.active?(!this._dirty||this._querying||e.done||(this._querying=!0,this.dirty=!1,this._queryEngine.executeQueryForIdSet(this.filter).then((e=>{this._queryResult=e,this._querying=!1})).catch((e=>{a(e)||(k.warn("FeatureFilter query failed: "+e,{error:e}),this._queryResult=new Set,this._core.graphics3DGraphics.forEach((e=>this._queryResult.add(this._getFeatureId(e.graphic)))),this._querying=!1)})),e.madeProgress()),this._queryResult&&!e.done&&(this._core.modifyGraphics3DGraphicVisibilities((t=>{if(e.done)return!1;const i=this._queryResult.has(this._getFeatureId(t.graphic));return!!t.setVisibilityFlag(2,i,0)&&(e.madeProgress(),!0)})),e.done||(this._queryResult=null)),this.notifyChange("updating")):this.clear()}_getFeatureId(e){return null==e.objectId?e.attributes[this._objectIdField]:e.objectId}set dirty(e){this._dirty!==e&&(this._dirty=e,this.notifyChange("updating"))}};e([h({readOnly:!0})],N.prototype,"updating",null),N=e([p("esri.views.3d.layers.graphics.Graphics3DFilterVisibility")],N);let A=class extends i{constructor(e){super(e),this._handles=new r,this.watchUpdatingTracking=new T,this.suspendResumeExtentMode="computed",this.dataExtent=null,this.suspendResumeExtent=null}get suspended(){var e;return null==(e=this.scaleVisibility)?void 0:e.suspended}get suspendInfo(){var e,t;const i={};return null!=(e=this.scaleVisibility)&&e.suspended&&(i.outsideScaleRange=!0),null!=(t=this.frustumVisibility)&&t.suspended&&(i.outsideOfView=!0),i}get updating(){var e,t,i;return!!(null!=(e=this.graphicsCore)&&e.updating||null!=(t=this.frustumVisibility)&&t.updating||null!=(i=this.watchUpdatingTracking)&&i.updating)}normalizeCtorArgs(e){const t=e.frustumVisibilityEnabled?new R:null,i=e.scaleVisibilityEnabled?new w:null,s=(e.filterVisibilityEnabled||e.timeExtentVisibilityEnabled)&&"multipatch"!==e.layer.geometryType?new N:null,r=e.elevationAlignmentEnabled?new _:null,a=new E({owner:e.owner,layer:e.layer,preferredUpdatePolicy:e.preferredUpdatePolicy,elevationFeatureExpressionEnabled:e.elevationFeatureExpressionEnabled,graphicSymbolSupported:!1,hasZ:e.owner.hasZ,hasM:e.owner.hasM}),{updateClippingExtent:n,suspendResumeExtentMode:l,dataExtent:o}=e;return{graphicsCore:a,frustumVisibility:t,scaleVisibility:i,filterVisibility:s,elevationAlignment:r,updateClippingExtent:n,suspendResumeExtentMode:l,dataExtent:o}}initialize(){this.scaleVisibility&&this.watchUpdatingTracking.add(this.layer,"scaleRangeId",(()=>this.scaleVisibility.layerMinMaxScaleChangeHandler())),this.filterVisibility&&(this.watchUpdatingTracking.add(this.owner,"filter",(()=>this.filterVisibility.filterChanged())),this.watchUpdatingTracking.add(this.owner,"timeExtent",(()=>this.filterVisibility.filterChanged()))),this.elevationAlignment&&this.watchUpdatingTracking.add(this.layer,"elevationInfo",((e,t)=>{y(e,t)&&this.watchUpdatingTracking.addPromise(this.graphicsCore.elevationInfoChange())})),this.watchUpdatingTracking.add(this.layer,"labelsVisible",(()=>this.graphicsCore.updateVisibilityInfo())),this.watchUpdatingTracking.add(this.layer,"labelingInfo",((e,t)=>{y(e,t)&&this.graphicsCore.updateLabelingInfo()}))}async setup(){this.frustumVisibility&&this.frustumVisibility.setup(this.owner);const e=this.owner,t=this.owner.view.basemapTerrain,i=(e,t,i)=>this.graphicsCore.spatialIndex.queryGraphicUIDsInExtent(e,t,i);if(this.scaleVisibility&&this.scaleVisibility.setup(e,this.layer,i,this.graphicsCore,t),this.filterVisibility&&("filter"in e||"timeExtent"in e)&&this.filterVisibility.setup(e,this.graphicsCore),this.elevationAlignment){const t=e.view.elevationProvider;this.elevationAlignment.setup(e,i,this.graphicsCore,t)}this._set("objectStates",new x(this.graphicsCore)),this._set("labeling",this.owner.view.labeler.addGraphicsOwner(this.graphicsCore,this.scaleVisibility)),this._set("deconfliction",e.view.deconflictor.addGraphicsOwner(this.graphicsCore)),await n(this.graphicsCore.setup({elevationAlignment:this.elevationAlignment,scaleVisibility:this.scaleVisibility,filterVisibility:this.filterVisibility,deconflictor:this.deconfliction,labeler:this.labeling,objectStates:this.objectStates})),this.watchUpdatingTracking.add(this.layer,"renderer",(e=>this.watchUpdatingTracking.addPromise(this.graphicsCore.rendererChange(e)))),this.watchUpdatingTracking.add(e,"fullOpacity",(()=>this.graphicsCore.opacityChange())),this.setupSuspendResumeExtent(),this.updateClippingExtent&&(this.watchUpdatingTracking.add(e.view,"clippingArea",(()=>this._updateClippingExtent())),this._updateClippingExtent()),this.graphicsCore.startCreateGraphics(),this.graphicsCore.labelsEnabled&&await n(this.graphicsCore.updateLabelingInfo())}destroy(){this._handles&&(this._handles.destroy(),this._handles=null);const e=["watchUpdatingTracking","frustumVisibility","scaleVisibility","filterVisibility","elevationAlignment","objectStates","graphicsCore"];for(const t of e){const e=this[t];e&&(e.destroy(),this._set(t,null))}this._set("layer",null),this._set("owner",null)}maskOccludee(e){const{set:t,handle:i}=this.objectStates.acquireSet(1,null);return this.objectStates.setUid(t,e.uid),i}highlight(e,i){if(e instanceof f){const{set:t,handle:s}=this.objectStates.acquireSet(0,i);return this.owner.queryObjectIds(e).then((e=>this.objectStates.setObjectIds(t,e))),s}if("number"==typeof e||"string"==typeof e)return this.highlight([e],i);if(e instanceof t)return this.highlight([e],i);if("toArray"in e&&(e=e.toArray()),Array.isArray(e)&&e.length>0){if(e[0]instanceof t){const t=e;if(null==F(this.layer.fieldsIndex,t[0].attributes,i)){const e=t.map((e=>e.uid)),{set:i,handle:s}=this.objectStates.acquireSet(0,null);return this.objectStates.setUids(i,e),s}e=t.map((e=>F(this.layer.fieldsIndex,e.attributes,i)))}if("number"==typeof e[0]||"string"==typeof e[0]){const t=e,{set:s,handle:r}=this.objectStates.acquireSet(0,i);return this.objectStates.setObjectIds(s,t),r}}return L}_updateClippingExtent(){const e=this.owner.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.owner.view.spatialReference)&&(this.updateClippingExtent(e)||this.graphicsCore.recreateAllGraphics())}setupSuspendResumeExtent(){(this.frustumVisibility||this.scaleVisibility)&&this._handles.add(o(this,"suspendResumeExtentMode",(()=>{switch(this._handles.remove(M),this.suspendResumeExtentMode){case"computed":this._handles.add([o(this.graphicsCore,"computedExtent",(e=>this.updateSuspendResumeExtent(e))),this.graphicsCore.watch("extentPadding",(()=>this.updateSuspendResumeExtent(this.graphicsCore.computedExtent)))],M);break;case"data":this._handles.add([o(this,"dataExtent",(e=>this.updateSuspendResumeExtent(e))),this.graphicsCore.watch("extentPadding",(()=>this.updateSuspendResumeExtent(this.dataExtent)))],M);break;default:s(this.suspendResumeExtentMode)}})))}updateSuspendResumeExtent(e){e?this.suspendResumeExtentChanged(this.extentToSuspendResumeRect(e,this.suspendResumeExtent)):this.suspendResumeExtentChanged(null)}extentToSuspendResumeRect(e,t){const i=this.owner.view.spatialReference;if(!e.spatialReference.equals(i)){if(!g(e,i))return;e=m(e,i)}return Q(e,t,b,this.graphicsCore.extentPadding)}suspendResumeExtentChanged(e){this.frustumVisibility&&this.frustumVisibility.setExtent(e),this.scaleVisibility&&this.scaleVisibility.setExtent(e)}};e([h({aliasOf:"graphicsCore.layer"})],A.prototype,"layer",void 0),e([h({aliasOf:"graphicsCore.owner"})],A.prototype,"owner",void 0),e([h({constructOnly:!0})],A.prototype,"updateClippingExtent",void 0),e([h({constructOnly:!0})],A.prototype,"graphicsCore",void 0),e([h({constructOnly:!0})],A.prototype,"scaleVisibility",void 0),e([h({constructOnly:!0})],A.prototype,"filterVisibility",void 0),e([h({constructOnly:!0})],A.prototype,"elevationAlignment",void 0),e([h({constructOnly:!0})],A.prototype,"frustumVisibility",void 0),e([h({readOnly:!0})],A.prototype,"deconfliction",void 0),e([h({readOnly:!0})],A.prototype,"labeling",void 0),e([h({readOnly:!0})],A.prototype,"objectStates",void 0),e([h({readOnly:!0})],A.prototype,"watchUpdatingTracking",void 0),e([h()],A.prototype,"suspendResumeExtentMode",void 0),e([h()],A.prototype,"dataExtent",void 0),e([h({readOnly:!0})],A.prototype,"suspended",null),e([h({readOnly:!0})],A.prototype,"suspendInfo",null),e([h({readOnly:!0,dependsOn:["graphicsCore.updating","frustumVisibility.updating","watchUpdatingTracking.updating"]})],A.prototype,"updating",null),A=e([p("esri.views.3d.layers.graphics.Graphics3DFeatureLikeLayerView")],A);var J=A;const M="suspendResumeExtentMode",L={remove(){},pause(){},resume(){}};export{J as G,G as Q};
