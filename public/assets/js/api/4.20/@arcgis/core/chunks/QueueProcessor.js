/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{i as e,b as s}from"../core/lang.js";import{createAbortController as t,onAbort as r,onAbortOrThrow as i,createDeferred as h,isPromiseLike as o,createAbortError as c}from"../core/promiseUtils.js";import{Q as u}from"./Queue.js";import{schedule as n}from"../core/scheduling.js";class l{constructor(e,s){this.item=e,this.controller=s,this.promise=null}}class _{constructor(s){this._deferreds=new Map,this._controllers=new Map,this._processingItems=new Map,this._isPaused=!1,this._schedule=null,this._task=null,this.concurrency=1,s.concurrency&&(this.concurrency=s.concurrency),this._queue=new u(s.peeker),this.process=s.process;const t=s.scheduler;s.priority&&e(t)&&(this._task=t.registerTask(s.priority,this))}destroy(){this.clear(),this._schedule&&(this._schedule.remove(),this._schedule=null),this._task&&(this._task.remove(),this._task=null)}get length(){return this._processingItems.size+this._queue.length}abort(e){const s=this._controllers.get(e);s&&s.abort()}clear(){this._queue.clear();const e=[];this._controllers.forEach((s=>e.push(s))),this._controllers.clear(),e.forEach((e=>e.abort())),this._processingItems.clear(),this._cancelNext()}forEach(e){this._deferreds.forEach(((s,t)=>e(t)))}get(e){const s=this._deferreds.get(e);return s?s.promise:void 0}isOngoing(e){return this._processingItems.has(e)}has(e){return this._deferreds.has(e)}pause(){this._isPaused||(this._isPaused=!0,this._cancelNext())}push(s,o){const u=this.get(s);if(u)return u;const n=t();let l=null;o&&(l=r(o,(()=>n.abort())));const _=()=>{a.remove(),e(l)&&l.remove(),this._deferreds.delete(s),this._controllers.delete(s),this._queue.remove(s),this._processingItems.delete(s),this._scheduleNext()},a=i(n.signal,(()=>{const e=this._processingItems.get(s);e&&e.controller.abort(),_(),p.reject(c())})),p=h();return this._deferreds.set(s,p),this._controllers.set(s,n),p.promise.then(_,_),this._queue.push(s),this._scheduleNext(),p.promise}last(){return this._queue.last()}peek(){return this._queue.peek()}popLast(){return this._queue.popLast()}reset(){const e=[];this._processingItems.forEach((s=>e.push(s))),this._processingItems.clear();for(const s of e)this._queue.push(s.item),s.controller.abort();this._scheduleNext()}resume(){this._isPaused&&(this._isPaused=!1,this._scheduleNext())}takeAll(){const e=[];for(;this._queue.length;)e.push(this._queue.pop());return this.clear(),e}get running(){return!this._isPaused&&this._queue.length>0&&this._processingItems.size<this.concurrency}runTask(e){for(;!e.done&&this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop()),e.madeProgress()}_scheduleNext(){this._task||this._isPaused||this._schedule||(this._schedule=n((()=>{this._schedule=null,this._next()})))}_next(){for(;this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop())}_cancelNext(){this._schedule&&(this._schedule.remove(),this._schedule=null)}_processResult(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).resolve(s))}_processError(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).reject(s))}_canProcessFulfillment(e){return!!this._deferreds.get(e.item)&&this._processingItems.get(e.item)===e}_process(e){if(s(e))return;let r;const i=t(),h=new l(e,i);this._processingItems.set(e,h);try{r=this.process(e,i.signal)}catch(e){this._processError(h,e)}o(r)?(h.promise=r,r.then((e=>this._processResult(h,e)),(e=>this._processError(h,e)))):this._processResult(h,r)}get test(){return{update:e=>this.runTask(e)}}}export{_ as Q};
