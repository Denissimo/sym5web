/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{J as t}from"./jsonMap.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import"./Logger.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{a as n}from"./JSONSupport.js";import{t as s,f as o}from"./colorRamps.js";import i from"../symbols/Symbol.js";const r=new t({classBreaksDef:"class-breaks-definition",uniqueValueDef:"unique-value-definition"});let u=class extends n{constructor(){super(...arguments),this.baseSymbol=null,this.colorRamp=null,this.type=null}};e([l({type:i,json:{write:!0}})],u.prototype,"baseSymbol",void 0),e([l({types:s,json:{read:{reader:o},write:!0}})],u.prototype,"colorRamp",void 0),e([l({json:{read:r.read,write:r.write}})],u.prototype,"type",void 0),u=e([a("esri.rest.support.ClassificationDefinition")],u);var c=u;const f=new t({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),p=new t({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let d=class extends c{constructor(){super(...arguments),this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null,this.type="class-breaks-definition"}set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}};e([l({json:{write:!0}})],d.prototype,"breakCount",void 0),e([l({json:{write:!0}})],d.prototype,"classificationField",void 0),e([l({type:String,json:{read:f.read,write:f.write}})],d.prototype,"classificationMethod",void 0),e([l({json:{write:!0}})],d.prototype,"normalizationField",void 0),e([l({json:{read:p.read,write:p.write}})],d.prototype,"normalizationType",void 0),e([l({value:null,json:{write:!0}})],d.prototype,"standardDeviationInterval",null),e([l({value:null,json:{write:!0}})],d.prototype,"definedInterval",null),e([l()],d.prototype,"type",void 0),d=e([a("esri.rest.support.ClassBreaksDefinition")],d);var m=d;function h(e,t){return Number(e.toFixed(t))}function b(e){const t=V(e),l=[],a=t.uniqueValues.length;for(let e=0;e<a;e++){const a=t.uniqueValues[e],n=t.valueFrequency[e],s=a.toString();l.push({value:a,count:n,label:s})}return{uniqueValues:l}}function v(e){const{normalizationTotal:t}=e;return{classBreaks:function(e){const t=e.definition,{classificationMethod:l,breakCount:a,normalizationType:n,definedInterval:s}=t,o=[];let i=e.values;if(0===i.length)return[];i=i.sort(((e,t)=>e-t));const r=i[0],u=i[i.length-1];if("equal-interval"===l)if(i.length>=a){const e=(u-r)/a;let t=r;for(let l=1;l<a;l++){const a=h(r+l*e,6);o.push({minValue:t,maxValue:a,label:y(t,a,n)}),t=a}o.push({minValue:t,maxValue:u,label:y(t,u,n)})}else i.forEach((e=>{o.push({minValue:e,maxValue:e,label:y(e,e,n)})}));else if("natural-breaks"===l){const t=V(i),l=e.valueFrequency||t.valueFrequency,s=function(e,t,l){const a=e.length,n=[];l>a&&(l=a);for(let e=0;e<l;e++)n.push(Math.round(e*a/l-1));n.push(a-1);let s=g(n,e,t,l);(function(e,t,l,a,n,s){let o=0,i=0,r=0,u=0,c=!0;for(let f=0;f<2&&c;f++){0===f&&(c=!1);for(let f=0;f<s-1;f++)for(;l[f+1]+1!==l[f+2];){l[f+1]=l[f+1]+1;const s=M(f,l,a,n);r=s.sbMean,o=s.sbSdcm;const p=M(f+1,l,a,n);if(u=p.sbMean,i=p.sbSdcm,!(o+i<t[f]+t[f+1])){l[f+1]=l[f+1]-1;break}t[f]=o,t[f+1]=i,e[f]=r,e[f+1]=u,c=!0}for(let f=s-1;f>0;f--)for(;l[f]!==l[f-1]+1;){l[f]=l[f]-1;const s=M(f-1,l,a,n);r=s.sbMean,o=s.sbSdcm;const p=M(f,l,a,n);if(u=p.sbMean,i=p.sbSdcm,!(o+i<t[f-1]+t[f])){l[f]=l[f]+1;break}t[f-1]=o,t[f]=i,e[f-1]=r,e[f]=u,c=!0}}return c})(s.mean,s.sdcm,n,e,t,l)&&(s=g(n,e,t,l));return n}(t.uniqueValues,l,a);let c=r;for(let e=1;e<a;e++)if(t.uniqueValues.length>e){const l=h(t.uniqueValues[s[e]],6);o.push({minValue:c,maxValue:l,label:y(c,l,n)}),c=l}o.push({minValue:c,maxValue:u,label:y(c,u,n)})}else if("quantile"===l)if(i.length>=a&&r!==u){let e=r,t=Math.ceil(i.length/a),l=0;for(let s=1;s<a;s++){let r=t+l-1;r>i.length&&(r=i.length-1),r<0&&(r=0),o.push({minValue:e,maxValue:i[r],label:y(e,i[r],n)}),e=i[r],l+=t,t=Math.ceil((i.length-l)/(a-s))}o.push({minValue:e,maxValue:u,label:y(e,u,n)})}else{let e=-1;for(let t=0;t<i.length;t++){const l=i[t];l!==e&&(e=l,o.push({minValue:e,maxValue:l,label:y(e,l,n)}),e=l)}}else if("standard-deviation"===l){const e=function(e){let t=0;for(let l=0;l<e.length;l++)t+=e[l];return t/=e.length,t}(i),t=function(e,t){let l=0;for(let a=0;a<e.length;a++){const n=e[a];l+=(n-t)*(n-t)}l/=e.length;return Math.sqrt(l)}(i,e);if(0===t)o.push({minValue:i[0],maxValue:i[0],label:y(i[0],i[0],n)});else{const l=function(e,t,l,a,n){const s=Math.max(a-e,t-a);let o=s/n/l;o=o>=1?1:o>=.5?.5:.25;return o}(r,u,a,e,t)*t;let s=0,i=r;for(let t=a;t>=1;t--){const a=h(e-(t-.5)*l,6);o.push({minValue:i,maxValue:a,label:y(i,a,n)}),i=a,s++}let c=h(e+.5*l,6);o.push({minValue:i,maxValue:c,label:y(i,c,n)}),i=c,s++;for(let t=1;t<=a;t++)c=s===2*a?u:h(e+(t+.5)*l,6),o.push({minValue:i,maxValue:c,label:y(i,c,n)}),i=c,s++}}else if("defined-interval"===l){if(!s)return o;const e=i[0],t=i[i.length-1],l=Math.ceil((t-e)/s);let a=e;for(let t=1;t<l;t++){const l=h(e+t*s,6);o.push({minValue:a,maxValue:l,label:y(a,l,n)}),a=l}o.push({minValue:a,maxValue:t,label:y(a,t,n)})}return o}(e),normalizationTotal:t}}function y(e,t,l){let a=null;return a=e===t?l&&"percent-of-total"===l?e+"%":e.toString():l&&"percent-of-total"===l?e+"% - "+t+"%":e+" - "+t,a}function V(e){const t=[],l=[];let a=Number.MIN_VALUE,n=1,s=-1;for(let o=0;o<e.length;o++){const i=e[o];i===a?(n++,l[s]=n):null!==i&&(t.push(i),a=i,n=1,l.push(n),s++)}return{uniqueValues:t,valueFrequency:l}}function g(e,t,l,a){let n=[],s=[],o=[],i=0;const r=[],u=[];for(let n=0;n<a;n++){const a=M(n,e,t,l);r.push(a.sbMean),u.push(a.sbSdcm),i+=u[n]}let c,f=i,p=!0;for(;p||i<f;){p=!1,n=[];for(let t=0;t<a;t++)n.push(e[t]);for(let l=0;l<a;l++)for(let n=e[l]+1;n<=e[l+1];n++)if(c=t[n],l>0&&n!==e[l+1]&&Math.abs(c-r[l])>Math.abs(c-r[l-1]))e[l]=n;else if(l<a-1&&e[l]!==n-1&&Math.abs(c-r[l])>Math.abs(c-r[l+1])){e[l+1]=n-1;break}f=i,i=0,s=[],o=[];for(let n=0;n<a;n++){s.push(r[n]),o.push(u[n]);const a=M(n,e,t,l);r[n]=a.sbMean,u[n]=a.sbSdcm,i+=u[n]}}if(i>f){for(let t=0;t<a;t++)e[t]=n[t],r[t]=s[t],u[t]=o[t];i=f}return{mean:r,sdcm:u}}function M(e,t,l,a){let n=0,s=0;for(let o=t[e]+1;o<=t[e+1];o++){const e=a[o];n+=l[o]*e,s+=e}s<=0&&console.log("Exception in Natural Breaks calculation");const o=n/s;let i=0;for(let n=t[e]+1;n<=t[e+1];n++)i+=a[n]*(l[n]-o)**2;return{sbMean:o,sbSdcm:i}}export{m as C,c as a,b,v as c};
