/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import r from"../core/Error.js";import{i as t,b as s,j as i}from"../core/lang.js";import{init as a,whenFalse as o}from"../core/watchUtils.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./Logger.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{f as n}from"./ColorMaterial.js";import{c,F as h,a as p,E as y}from"./EventedSet.js";import{L as d}from"./LayerView3D.js";import m from"../core/Accessor.js";import{throwIfAborted as f,createAbortError as g}from"../core/promiseUtils.js";import{f as F}from"./dehydratedFeatures.js";import{r as b,c as w}from"./query.js";import C from"../Graphic.js";import{W as v}from"./WorkerHandle.js";import x from"../geometry/SpatialReference.js";import O from"../layers/support/Field.js";import{u as M}from"../views/SceneView.js";import{F as _}from"./FeatureLayerView.js";import q from"../views/layers/LayerView.js";import{R}from"./RefreshableLayerView.js";class j{constructor(e){this._schedule=e,this._handle=new V(e)}destroy(){this._handle.destroy()}invoke(e,r){return e.buffer&&0!==e.buffer.byteLength?(e.options.sourceSpatialReference&&e.options.sourceSpatialReference instanceof x&&(e.options={...e.options,sourceSpatialReference:e.options.sourceSpatialReference.toJSON()}),this._handle.invoke(e,r).then((e=>this._schedule((()=>{if(e.spatialReference=x.fromJSON(e.spatialReference),e.fields)for(let r=0;r<e.fields.length;r++)e.fields[r]=O.fromJSON(e.fields[r]);const r=e.spatialReference;for(const s of e.features)s.uid=C.generateUID(),t(s.geometry)&&(s.geometry.spatialReference=r);return e}))))):Promise.resolve(null)}}class V extends v{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",e)}getTransferList(e){return[e.buffer]}}let T=class extends m{constructor(e){super(e)}get queryFeaturesDehydrated(){const e=this.layer.capabilities,r=e&&e.query;if(r&&r.supportsFormatPBF){var i,a;s(this._decoder)&&(this._decoder=new j(this.schedule));const e={sourceSpatialReference:null!=(i=null==(a=this.layer.spatialReference)?void 0:a.toJSON())?i:null,applyTransform:!0,maxStringAttributeLength:1024};return(r,s)=>b(this.layer.parsedUrl,r,"pbf",this._createRequestOptions(s)).then((r=>(f(s),t(this._decoder)?this._decoder.invoke({buffer:r.data,options:e},s.signal):Promise.reject(g()))))}return(e,r)=>w(this.layer.parsedUrl,e,this.layer.spatialReference,this._createRequestOptions(r)).then((e=>F(e.data)))}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}destroy(){this._decoder=i(this._decoder)}_createRequestOptions(e){return{...e,query:{...this.layer.customParameters,token:this.layer.apiKey,...null==e?void 0:e.query}}}};e([u({constructOnly:!0})],T.prototype,"layer",void 0),e([u({constructOnly:!0})],T.prototype,"schedule",void 0),e([u({readOnly:!0})],T.prototype,"queryFeaturesDehydrated",null),T=e([l("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")],T);let S=class extends m{constructor(e){super(e)}queryFeaturesDehydrated(e,r){return this.layer.queryFeatures(e,r)}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}};e([u({constructOnly:!0})],S.prototype,"layer",void 0),e([u({readOnly:!0})],S.prototype,"queryFeaturesDehydrated",null),S=e([l("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceMeshQuery3D")],S);let D=class extends m{constructor(e){super(e)}queryFeaturesDehydrated(e,r){return this.layer.queryFeatures(e,r)}};e([u({constructOnly:!0})],D.prototype,"layer",void 0),D=e([l("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")],D);let N=class extends m{constructor(e){super(e)}queryFeaturesDehydrated(e,r){return this.source.queryFeaturesJSON(e,r).then(F,(t=>{if(t&&"query-features-json:unsupported"===t.name)return this.layer.queryFeatures(e,r);throw t}))}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}};e([u({constructOnly:!0})],N.prototype,"layer",void 0),e([u({constructOnly:!0})],N.prototype,"source",void 0),N=e([l("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileClientQuery3D")],N);class P{constructor(e){this._memoryCache=null,this._capabilities=null;const r=e.layerView.layer;this.layerView=e.layerView,this.objectIdField=r.objectIdField,this.globalIdField="globalIdField"in r?r.globalIdField:null,this.returnZ=e.returnZ,this.returnM=e.returnM;const s=this.layerView.view.resourceController;this.query=function(e,r){return"feature"===e.type&&"feature-layer"===e.source.type?t(e.infoFor3D)?new S({layer:e}):new T({layer:e,schedule:r}):"feature"===e.type&&"memory"===e.source.type||"csv"===e.type||"geojson"===e.type||"wfs"===e.type?new N({layer:e,source:e.source}):"ogc-feature"===e.type?new D({layer:e}):null}(r,(e=>s.schedule(e))),s&&this.memoryCacheEnabled&&(this._memoryCache=s.memoryController.getMemCache(r.uid))}get memoryCacheEnabled(){switch(this.layerView.layer.source.type){case"feature-layer":case"ogc-feature":return!0;case"csv":case"geojson":case"memory":case"wfs":return!1}}destroy(){this._memoryCache=i(this._memoryCache),this.query.destroy()}createQuery(){const e=this.layerView.layer.createQuery();return e.outFields=this.layerView.availableFields,e.returnZ=this.returnZ,e.returnM=this.returnM,e.outSpatialReference=this.tilingScheme.spatialReference,e}get memoryCache(){return this._memoryCache}get viewingMode(){return this.layerView.view.state.viewingMode}get tilingScheme(){return this.layerView.view.featureTiles.tilingScheme}get scheduler(){const e=this.layerView.view.resourceController;return e?e.scheduler:null}get geometryType(){return this.layerView.layer.geometryType}get fullExtent(){return this.layerView.layer.fullExtent}get tileMaxRecordCount(){return this.layerView.layer.capabilities.query.tileMaxRecordCount}get maxRecordCount(){return this.layerView.layer.capabilities.query.maxRecordCount}get capabilities(){return t(this._capabilities)||(this._capabilities=c(this.layerView.layer)),this._capabilities}logFetchError(e,r){e.error("#fetchTile()",this.layerView.layer,r&&r.message?r.message:r)}}let E=class extends(R(h(_(d(q))))){constructor(e){super(e),this._controllerTotal=0,this._graphicsCoreTotal=0,this.suspendResumeExtentMode="data"}initialize(){this.updatingHandles.add(this,"view.floors",(()=>this.graphics3d.filterVisibility.filterChanged()))}destroy(){this.fetcherContext&&(this.fetcherContext.destroy(),this.fetcherContext=null)}get maximumNumberOfFeatures(){var e,r;return null!=(e=null==(r=this.controller)?void 0:r.maximumNumberOfFeatures)?e:this._get("maximumNumberOfFeatures")}set maximumNumberOfFeatures(e){this._set("maximumNumberOfFeatures",e),this.controller&&(this.controller.maximumNumberOfFeatures=e)}get maximumNumberOfFeaturesExceeded(){return!!this.controller&&!(this.suspended||!this.controller.maximumNumberOfFeaturesExceeded)}get updatingProgressValue(){var e,r,t;let s=0;if(null!=(e=this.controller)&&e.updating){const e=this.controller.updatingRemaining,r=Math.max(this.controller.updatingTotal,this._controllerTotal);r>0&&(s=(r-e)/r,this._controllerTotal=r)}let i=0;if(null!=(r=this.graphics3d)&&null!=(t=r.graphicsCore)&&t.updating){const e=this.graphics3d.graphicsCore.updatingRemaining,r=Math.max(e,this._graphicsCoreTotal);r>0&&(i=(r-e)/r,this._graphicsCoreTotal=r)}return.5*(s+i)}get updatePolicy(){if(!this.controller)return 0;switch(this.controller.mode){case"snapshot":{const e=L[this.layer.geometryType];return null==e||this.controller.serviceDataCount>e?0:1}case"tiles":return 0}}get hasZ(){const e=this.layer,r=e.capabilities&&e.capabilities.data;return!(!r||!r.supportsZ)&&("returnZ"in e&&null!=e.returnZ?e.returnZ:r.supportsZ)}get hasM(){const e=this.layer,r=e.capabilities&&e.capabilities.data;return!(!r||!r.supportsM)&&("returnM"in e&&null!=e.returnM&&e.returnM)}async fetchPopupFeatures(e,r){const t=this.validateFetchPopupFeatures(r);return t?Promise.reject(t):this.fetchClientPopupFeatures(r)}setVisibility(e,r){this.graphics3d&&this.graphics3d.graphicsCore.setObjectIdVisibility(e,r)}createQuery(){return super.createQuery()}queryFeatures(e,r){const t=()=>super.queryFeatures(e,r);return"mesh"===this.layer.geometryType?this._queryFeaturesMesh(this._ensureQuery(e),t):t()}beforeSetController(e){e.maximumNumberOfFeatures=this.maximumNumberOfFeatures}createController(){this.fetcherContext=new P({layerView:this,returnZ:this.hasZ,returnM:this.hasM});const e=new p({layerView:this,context:this.fetcherContext,graphics:new y,extent:this.clippingExtent});return this.updatingHandles.add(e,"serviceDataExtent",(e=>{this.graphics3d&&(this.graphics3d.dataExtent=e)}),2),this.handles.add(a(this,"suspended",(r=>{r?e.suspend():e.resume()}),!0)),this.updatingHandles.add(this.graphics3d.graphicsCore,"displayFeatureLimit",(()=>this.updateDisplayFeatureLimit(e)),2),this.handles.add([this.view.resourceController.memoryController.events.on("quality-changed",(()=>this.updateDisplayFeatureLimit())),o(this,"updating",(()=>{this._controllerTotal=0,this._graphicsCoreTotal=0,this.notifyChange("updatingProgressValue")}))]),e}async doRefresh(){!this.suspended&&this.controller&&this.controller.refetch()}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return(e?e.usedMemory:0)+(this.controller?this.controller.memoryForUnusedFeatures:0)}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return(e?e.unprocessedMemoryEstimate:0)+(this.controller?this.controller.expectedFeatureDiff*e.usedMemoryPerGraphic:0)}ignoresMemoryFactor(){return this.controller&&this.controller.hasMaximumNumberOfFeaturesOverride}updateDisplayFeatureLimit(e=this.controller){if(!e||!this.graphics3d||!this.graphics3d.graphicsCore)return;const r=this.graphics3d.graphicsCore.displayFeatureLimit,t=this.view.resourceController.memoryController.memoryFactor;if(1===t)e.displayFeatureLimit=r;else{const s=Math.ceil(r.maximumNumberOfFeatures*t),i=Math.ceil(r.maximumTotalNumberOfFeatures*t),a=Math.ceil(r.minimumTotalNumberOfFeatures*t);e.displayFeatureLimit={...r,maximumNumberOfFeatures:s,maximumTotalNumberOfFeatures:i,minimumTotalNumberOfFeatures:a}}}async _queryFeaturesMesh(e,r){await this._validateQueryFeaturesMesh(e);const t=await r();if(e&&e.outStatistics)return t;const s=this.layer.objectIdField,i=this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID,a=[];for(const e of t.features)if(e.geometry){const r=i.get(e.attributes[s]);r&&(e.geometry=n(r.graphic.geometry),a.push(e))}else a.push(e);return t.features=a,t}async _validateQueryFeaturesMesh(e){if(!e)return;const s=e=>{throw new r("feature-layer-view:unsupported-query",`Queries on Mesh feature collection layers do not support '${e}'`)},i=["quantizationParameters","geometryPrecision","maxAllowableOffset"];for(const r of i)null!=e[r]&&s(r);"returnM"in e&&e.returnM&&s("returnM"),"returnCentroid"in e&&e.returnCentroid&&s("returnCentroid"),t(e.outSpatialReference)&&!e.outSpatialReference.equals(this.view.spatialReference)&&s("outSpatialReference")}get performanceInfo(){const e=this.controller&&this.controller.displayFeatureLimit,r=t(e)&&e.averageSymbolComplexity,s=t(r)?`f:${r.primitivesPerFeature},v:${r.primitivesPerCoordinate}`:"n/a",i={...this._getResourceInfo(),storedFeatures:0,totalVertices:0,partial:this.maximumNumberOfFeaturesExceeded,mode:this.controller?this.controller.mode:"n/a",symbolComplexity:s,nodes:this.controller?this.controller.tileDescriptors.length:0};if(this.controller&&i.displayedNumberOfFeatures){const e=this.controller.debug;i.storedFeatures=e.storedFeatures,i.totalVertices=e.totalVertices}return i}get test(){return{updatePolicy:this.updatePolicy,controller:this.controller}}};e([u()],E.prototype,"layer",void 0),e([u()],E.prototype,"controller",void 0),e([u()],E.prototype,"maximumNumberOfFeatures",null),e([u()],E.prototype,"maximumNumberOfFeaturesExceeded",null),e([u(M)],E.prototype,"updatingProgress",void 0),e([u({readOnly:!0,dependsOn:["controller.updatingRemaining","controller.updatingTotal","graphics3d.graphicsCore.updatingRemaining"]})],E.prototype,"updatingProgressValue",null),e([u({readOnly:!0})],E.prototype,"updatePolicy",null),e([u({readOnly:!0})],E.prototype,"hasZ",null),e([u({readOnly:!0})],E.prototype,"hasM",null),e([u()],E.prototype,"suspendResumeExtentMode",void 0),E=e([l("esri.views.3d.layers.FeatureLayerViewBase3D")],E);const L={point:5e3,polygon:500,polyline:1e3};var Q=E;export{Q as F};
