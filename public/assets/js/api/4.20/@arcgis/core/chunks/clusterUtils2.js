/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{clone as i,h as s,b as t}from"../core/lang.js";import{L as r}from"./Logger.js";import{c as a}from"./MD5.js";import l from"../renderers/visualVariables/SizeVariable.js";import o from"../renderers/visualVariables/support/SizeStop.js";import{_ as n}from"./tslib.es6.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{w as c}from"./writer.js";import{i as d}from"./sizeVariableUtils.js";var f;let m=f=class extends l{writeLevels(e,i,s){for(const s in e){const e=this.levels[s];return void(i.stops=e)}}clone(){return new f({axis:this.axis,field:this.field,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,maxDataValue:this.maxDataValue,maxSize:d(this.maxSize)?this.maxSize.clone():this.maxSize,minDataValue:this.minDataValue,minSize:d(this.minSize)?this.minSize.clone():this.minSize,normalizationField:this.normalizationField,stops:this.stops&&this.stops.map((e=>e.clone())),target:this.target,useSymbolValue:this.useSymbolValue,valueRepresentation:this.valueRepresentation,valueUnit:this.valueUnit,legendOptions:this.legendOptions&&this.legendOptions.clone(),levels:i(this.levels)})}};n([u()],m.prototype,"levels",void 0),n([c("levels")],m.prototype,"writeLevels",null),m=f=n([p("esri.views.2d.engine.LevelDependentSizeVariable")],m);const v=r.getLogger("esri.views.2d.layers.support.clusterUtils");s.add("esri-cluster-arcade-enabled",!0);const x=s("esri-cluster-arcade-enabled"),h=(e,i,s,r)=>{const a=i.clone();if(!b(a))return a;if(s.fields)for(const i of s.fields)g(e,i);if("visualVariables"in a){const i=(a.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression)),l=S(i);i.forEach((i=>{"rotation"===i.type?i.field?i.field=E(e,i.field,"avg_angle"):i.valueExpression&&(i.field=w(e,i.valueExpression,"avg_angle"),i.valueExpression=null):i.normalizationField?(i.field=E(e,i.field,"norm",i.normalizationField),i.normalizationField=null):i.field?i.field=E(e,i.field,"avg"):(i.field=w(e,i.valueExpression,"avg"),i.valueExpression=null)})),t(l)&&!z(i)&&(i.push(y(s,r)),a.dynamicClusterSize=!0),a.visualVariables=i}switch(a.type){case"simple":break;case"unique-value":a.field?a.field=E(e,a.field,"mode"):a.valueExpression&&(a.field=w(e,a.valueExpression,"mode"),a.valueExpression=null);break;case"class-breaks":a.normalizationField?(a.field=E(e,a.field,"norm",a.normalizationField),a.normalizationField=null):a.field?a.field=E(e,a.field,"avg"):(a.field=w(e,a.valueExpression,"avg"),a.valueExpression=null)}return a},S=e=>{for(const i of e)if("size"===i.type)return i;return null},z=e=>{for(const i of e)if("cluster_count"===i.field)return!0;return!1},y=(e,i)=>{const s=[new o({value:0,size:0}),new o({value:1})];if(t(i))return new l({field:"cluster_count",stops:[...s,new o({value:2,size:0})]});const r=Object.keys(i).reduce(((t,r)=>({...t,[r]:[...s,new o({value:Math.max(2,i[r].minValue),size:e.clusterMinSize}),new o({value:Math.max(3,i[r].maxValue),size:e.clusterMaxSize})]})),{});return new m({field:"cluster_count",levels:r})},b=i=>{const s=s=>v.error(new e("Unsupported-renderer",s,{renderer:i}));if("unique-value"===i.type){if(i.field2||i.field3)return s("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1}else if("class-breaks"===i.type){if(i.normalizationField){const e=i.normalizationType;if("field"!==e)return s(`FeatureReductionCluster does not support a normalizationType of ${e}`),!1}}else if("simple"!==i.type)return s(`FeatureReductionCluster does not support renderers of type ${i.type}`),!1;if(!x){if("valueExpression"in i&&i.valueExpression)return s("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in i&&i.visualVariables||[]).some((e=>!(!("valueExpression"in e)||!e.valueExpression))))return s("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function g(i,s){const{name:t,outStatistic:r}=s,{onStatisticField:l,onStatisticValueExpression:o,statisticType:n}=r;if(o){const e=a(o.toLowerCase());i.push({name:t,outStatistic:{onStatisticField:e,onStatisticValueExpression:o,statisticType:n}})}else l?i.push({name:t,outStatistic:{onStatisticField:l,statisticType:n}}):v.error(new e("mapview-unsupported-field","Unable to handle field",{field:s}))}function w(e,i,s){const t=a(i),r="mode"===s?`cluster_type_${t}`:`cluster_avg_${t}`;return e.some((e=>e.name===r))||e.push({name:r,outStatistic:{onStatisticField:t,onStatisticValueExpression:i,statisticType:s}}),r}function E(e,i,s,t){if("cluster_count"===i||e.some((e=>e.name===i)))return i;const r=function(e,i,s){switch(e){case"avg":case"avg_angle":return`cluster_avg_${i}`;case"mode":return`cluster_type_${i}`;case"norm":{const e=s,t="field",r=i.toLowerCase()+",norm:"+t+","+e.toLowerCase();return"cluster_avg_"+a(r)}}}(s,i,t);return e.some((e=>e.name===r))||("norm"===s?e.push({name:r,outStatistic:{onStatisticField:i,onStatisticNormalizationField:t,statisticType:s}}):e.push({name:r,outStatistic:{onStatisticField:i,statisticType:s}})),r}export{y as a,h as c,S as f,b as i};
