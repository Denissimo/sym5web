/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../geometry/Extent.js";import t from"../geometry/Multipoint.js";import o from"../geometry/Point.js";import r from"../geometry/Polygon.js";import s from"../geometry/Polyline.js";import"./tslib.es6.js";import"../core/lang.js";import"./string.js";import"./object.js";import"../core/accessorSupport/decorators/property.js";import"./Logger.js";import"../config.js";import"./ensureType.js";import"./metadata.js";import"./handleUtils.js";import"../core/accessorSupport/decorators/subclass.js";import"./Message.js";import"../geometry/Geometry.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"./ArrayPool.js";import"./arrayUtils.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./write.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../core/accessorSupport/decorators/cast.js";import"./zmUtils.js";import"./extentUtils.js";const i={convertToGEGeometry:function(e,t){if(null==t)return null;let o="cache"in t?t.cache._geVersion:void 0;null==o&&(o=e.convertJSONToGeometry(t),"cache"in t&&(t.cache._geVersion=o));return o},exportPoint:function(e,t,r){const s=e.hasZ(t),i=e.hasM(t),n=new o({x:e.getPointX(t),y:e.getPointY(t),spatialReference:r});s&&(n.z=e.getPointZ(t));i&&(n.m=e.getPointM(t));return n.cache._geVersion=t,n},exportPolygon:function(e,t,o){const s=new r({rings:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:o});return s.cache._geVersion=t,s},exportPolyline:function(e,t,o){const r=new s({paths:e.exportPaths(t),hasZ:e.hasZ(t),hasM:e.hasM(t),spatialReference:o});return r.cache._geVersion=t,r},exportMultipoint:function(e,o,r){const s=new t({hasZ:e.hasZ(o),hasM:e.hasM(o),points:e.exportPoints(o),spatialReference:r});return s.cache._geVersion=o,s},exportExtent:function(t,o,r){const s=t.hasZ(o),i=t.hasM(o),n=new e({xmin:t.getXMin(o),ymin:t.getYMin(o),xmax:t.getXMax(o),ymax:t.getYMax(o),spatialReference:r});if(s){const e=t.getZExtent(o);n.zmin=e.vmin,n.zmax=e.vmax}if(i){const e=t.getMExtent(o);n.mmin=e.vmin,n.mmax=e.vmax}return n.cache._geVersion=o,n}};export{i as hydratedAdapter};
