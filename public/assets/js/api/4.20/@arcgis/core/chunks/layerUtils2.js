/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Error.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import{u as r,i}from"../core/lang.js";import"./ensureType.js";import{L as s}from"./Logger.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{a as o,C as l,c as u,b as c}from"./generateRendererUtils.js";import{g as m,m as d,i as p,a as h}from"./utils6.js";import{g as f,i as y,c as g,a as F}from"./utils7.js";import"../geometry.js";import{p as v}from"./arrayUtils.js";import{throwIfAborted as w,eachAlways as x,createAbortController as S,timeout as _}from"../core/promiseUtils.js";import{whenFalseOnce as z}from"../core/watchUtils.js";import{t as E,q as V}from"./quantizationUtils.js";import{m as T,g as q}from"../geometry/SpatialReference.js";import{b}from"./arcgisLayerUrl.js";import{isStringField as L,isNumericField as M,isDateField as C}from"../layers/support/fieldUtils.js";import{a as j}from"./JSONSupport.js";import I,{Q as N}from"../rest/support/Query.js";import P from"../rest/support/StatisticDefinition.js";import{g as Q,a as O,n as k}from"./predominanceUtils.js";import{open as D}from"../core/workers/workers.js";import{L as R}from"./Loadable.js";import{c as B,a as A}from"./heatmapUtils.js";import{l as G}from"./arcadeOnDemand.js";import U from"../request.js";import{D as J}from"./DataLayerSource.js";import{fromJSON as $}from"../renderers/support/jsonUtils.js";import W from"../tasks/QueryTask.js";import H from"../tasks/Task.js";import Z from"../geometry/Point.js";import Y from"../Graphic.js";import X from"../rest/support/FeatureSet.js";let K=class extends j{constructor(){super(...arguments),this.classificationDefinition=null,this.where=null}};e([a({type:o,json:{read:{source:"classificationDef"},write:{target:"classificationDef"}}})],K.prototype,"classificationDefinition",void 0),e([a({type:String,json:{write:!0}})],K.prototype,"where",void 0),K=e([n("esri.rest.support.GenerateRendererParameters")],K);var ee=K;let te=class extends o{constructor(){super(...arguments),this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null,this.type="unique-value-definition"}get uniqueValueFields(){const e=[];return this.attributeField&&e.push(this.attributeField),this.attributeField2&&e.push(this.attributeField2),this.attributeField3&&e.push(this.attributeField3),e}};e([a()],te.prototype,"attributeField",void 0),e([a()],te.prototype,"attributeField2",void 0),e([a()],te.prototype,"attributeField3",void 0),e([a({json:{write:!0}})],te.prototype,"fieldDelimiter",void 0),e([a({json:{write:!0}})],te.prototype,"uniqueValueFields",null),e([a()],te.prototype,"type",void 0),te=e([n("esri.rest.support.UniqueValueDefinition")],te);var ae=te;class re{async open(e){this.connection=await D("statsWorker",{strategy:"distributed",signal:e})}destroy(){var e;null==(e=this.connection)||e.close()}static getInstance(){return re.instance||(re.instance=new re),re.instance}async summaryStatistics(e,a){if(!this.connection)throw new t("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:e,featuresJSON:a})}}let ie=class extends R{constructor(e){super(e)}};e([a({constructOnly:!0})],ie.prototype,"layer",void 0),e([a()],ie.prototype,"geometryType",void 0),e([a()],ie.prototype,"objectIdField",void 0),e([a()],ie.prototype,"supportsSQLExpression",void 0),e([a()],ie.prototype,"hasQueryEngine",void 0),e([a()],ie.prototype,"minScale",void 0),e([a()],ie.prototype,"maxScale",void 0),e([a()],ie.prototype,"fullExtent",void 0),ie=e([n("esri.smartMapping.support.adapters.LayerAdapter")],ie);var se=ie;const ne=/_value$/i,oe=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,le=Math.LOG10E,ue=["min","max","avg","stddev","count","sum","variance","nullcount"];let ce=null;function me(e){return e.map((e=>e.toJSON()))}async function de(e,t,a){const r=[];if(t)for(const i of t){const t=e.getField(i);"availableFields"in a&&-1===a.availableFields.indexOf(t.name)&&r.push(t.name)}return r}function pe(e,t){const a=e&&e.features,r=a&&a[0]&&a[0].attributes,i={};for(const e in r)i[e.replace(ne,"").toLowerCase()]=r[e];return null!=i.totalcount&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&null!=i.min&&null==i.stddev&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach((e=>{null!=i[e]&&(i[e]=Math.ceil(i[e]))})),i.min===i.max&&null!=i.min&&(i.avg=i.min,i.stddev=i.variance=0)),i}async function he(e,t,a){let r=await ye(e,t);r=fe(r,e.minValue,e.maxValue);const i=function(e,t){let a=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY,i=null,s=null,n=null,o=null;for(const t of e)i+=t,a=Math.min(a,t),r=Math.max(r,t);const l=e.length;if(l){s=i/l;let a=0;for(const t of e)a+=(t-s)**2;o=t?l>1?a/(l-1):0:l>0?a/l:0,n=Math.sqrt(o)}else a=null,r=null;return{avg:s,count:l,max:r,min:a,stddev:n,sum:i,variance:o}}(r,!e.normalizationType);return a&&["avg","stddev","variance"].forEach((e=>{null!=i[e]&&(i[e]=Math.ceil(i[e]))})),i}function fe(e,t,a){return t=null==t?-1/0:t,a=null==a?1/0:a,e.filter((e=>Number.isFinite(e)&&e>=t&&e<=a))}async function ye(e,t){const a=e.field,r="function"==typeof a,i=e.valueExpression,s=e.normalizationType,n=e.normalizationField,o=e.normalizationTotal,l=[],u=e.view;let c=null,m=null;if(i){if(!ce){const{arcadeUtils:e}=await G();ce=e}c=ce.createFunction(i),m=u&&ce.getViewInfo({viewingMode:"2d"===u.type?"map":u.viewingMode,scale:u.scale,spatialReference:u.spatialReference})}return t?(t.forEach((e=>{const t=e.attributes;let u;if(i){const t=ce.createExecContext(e,m);u=ce.executeFunction(c,t)}else r?u=a.call(null,e):t&&(u=t[a]);if(s&&Number.isFinite(u)){const e=t&&parseFloat(t[n]),a=u;u=null,"log"===s&&0!==a?u=Math.log(a)*Math.LOG10E:"percent-of-total"===s&&Number.isFinite(o)&&0!==o?u=a/o*100:"field"===s&&Number.isFinite(e)&&0!==e?u=a/e:"natural-log"===s&&a>0?u=Math.log(a):"square-root"===s&&a>0&&(u=a**.5)}l.push(u)})),l):l}function ge(e){let t;for(t in e)ue.indexOf(t)>-1&&(Number.isFinite(e[t])||(e[t]=null));return e}function Fe(e){const t=e.field,a=e.classificationMethod||"equal-interval",r=e.normalizationType,i=e.normalizationField,s=new l;return s.classificationField=t,s.breakCount=e.breakCount,s.classificationMethod=a,s.standardDeviationInterval="standard-deviation"===a?e.standardDeviationInterval||1:void 0,s.normalizationType=r,s.normalizationField="field"===r?i:void 0,s}async function ve(e,t){const a=e.normalizationTotal,r=Fe({field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||5});let i=await ye(e,t);i=fe(i,e.minValue,e.maxValue);return we(e,u({definition:r,values:i,normalizationTotal:a}))}function we(e,t){let a=t.classBreaks;const r=a.length,i=a[0].minValue,s=a[r-1].maxValue,n="standard-deviation"===e.classificationMethod,o=oe;return a=a.map((e=>{const t=e.label,a={minValue:e.minValue,maxValue:e.maxValue,label:t};if(n&&t){const e=t.match(o).map((e=>+e.trim()));2===e.length?(a.minStdDev=e[0],a.maxStdDev=e[1],e[0]<0&&e[1]>0&&(a.hasAvg=!0)):1===e.length&&(t.indexOf("<")>-1?(a.minStdDev=null,a.maxStdDev=e[0]):t.indexOf(">")>-1&&(a.minStdDev=e[0],a.maxStdDev=null))}return a})),{minValue:i,maxValue:s,classBreakInfos:a,normalizationTotal:t.normalizationTotal}}function xe(e,t,a){const r=(t-e)/a,i=[];let s,n=e;for(let e=1;e<=a;e++)s=n+r,s=Number(s.toFixed(16)),i.push([n,e===a?t:s]),n=s;return i}function Se(e){const t=[],a=e.classBreaks,r=a[0].minValue,i=a[a.length-1].maxValue;a.forEach((e=>{t.push([e.minValue,e.maxValue])}));const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:r,max:i,intervals:t,sqlExpr:_e(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function _e(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:s}=e,n=y(s,t);let o=t;return"percent-of-total"===a?o=`((${n?g(t):t} / ${i}) * 100)`:"log"===a?o=`(log(${t}) * ${le})`:"field"===a?o=`(${n?g(t):t} / ${r})`:"natural-log"===a?o=`(log(${n?g(t):t}))`:"square-root"===a&&(o=`(power(${n?g(t):t}, 0.5))`),o}async function ze(e,t,a){const{min:r,max:i,normTotal:s}=t,n=e.numBins||10,o=t.intervals||xe(r,i,n),l=o.map(((e,t)=>({minValue:o[t][0],maxValue:o[t][1],count:0}))),u=await ye(e,a);for(const e of u)if(null!=e&&e>=r&&e<=i){const t=Ee(o,e);t>-1&&l[t].count++}return{bins:l,minValue:r,maxValue:i,normalizationTotal:s}}function Ee(e,t){let a=-1;for(let r=e.length-1;r>=0;r--){if(t>=e[r][0]){a=r;break}}return a}function Ve(e,t){let a;if(t=t.toLowerCase(),e)for(const r in e)if(r.toLowerCase()!==t){a=e[r];break}return a}function Te(e,t){let a;if(t=t.toLowerCase(),e)for(const r in e)if(r.toLowerCase()===t){a=e[r];break}return a}function qe(e,t,a,r,i){const s={},n="countOFExpr";e&&e.features&&e.features.forEach((e=>{const t=e.attributes,a=Ve(t,n),r=Te(t,n);0!==a&&(s[a]=r)}));const o=[];return xe(t,a,r).forEach(((e,t)=>{const a=(t+1).toString();o.push({minValue:e[0],maxValue:e[1],count:s.hasOwnProperty(a)?s[a]:0})})),{bins:o,minValue:t,maxValue:a,normalizationTotal:i}}function be(e,t,a,r,i){const s=e&&e.features,n="countOF"+(a||"Expr"),o={};let l=!1;if(s.forEach((e=>{const t=e.attributes,r=Te(t,n);let i=a?Te(t,a):Ve(t,n);null===i&&0===r&&(l=!0),(null==i||"string"==typeof i&&""===i.trim())&&(i=null),null==o[i]?o[i]={count:r,data:i}:o[i].count=o[i].count+r})),a&&l){const e=a+" is NULL";return t.queryFeatureCount(e,i).then((e=>(e=e||0,o.null.count=o.null.count+e,Le(o,r)))).catch((()=>(w(i),Le(o,r))))}return Promise.resolve(Le(o,r))}function Le(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}function Me(e,t,a){const r=e.count,i=[];if(a&&t&&"coded-value"===t.type){t.codedValues.forEach((e=>{const t=e.code;r.hasOwnProperty(t)||(r[t]={data:t,count:0})}))}for(const e in r){const t=r[e];i.push({value:t.data,count:t.count,label:t.label})}return{uniqueValueInfos:i}}async function Ce(e,t,a){const r=await ye(e,t),i={};for(let e of r)(null==e||"string"==typeof e&&""===e.trim())&&(e=null),null==i[e]?i[e]={count:1,data:e}:i[e].count++;return Me({count:i},a,e.returnAllCodedValues)}function je(e,t){return f(e,new Date(0),t,"milliseconds").sqlExpression}let Ie=class extends H{constructor(e){super(e),this._field=null,this.checkValueRange=null,this.gdbVersion=null,this.source=null}get parsedUrl(){const e=this._parseUrl(this.url);return e.path+="/generateRenderer",e}execute(e,t){const{classificationDefinition:a}=e,r={...e.toJSON(),f:"json"};if("esri.rest.support.ClassBreaksDefinition"===a.declaredClass?this._field=a.classificationField:this._field=a.attributeField,this.source){var i;const e={source:null==(i=this.source)?void 0:i.toJSON()};r.layer=JSON.stringify(e)}this.gdbVersion&&(r.gdbVersion=this.gdbVersion),r.classificationDef&&(r.classificationDef=JSON.stringify(r.classificationDef));let s={query:r};return(this.requestOptions||t)&&(s={...this.requestOptions,...t,...s}),U(this.parsedUrl.path,s).then((e=>this._handleExecuteResponse(e)))}_handleExecuteResponse(e){const t=e&&e.data;if(!t)return;if(!this.checkValueRange){const e=this._processRendererJSON(t);return Promise.resolve(e)}const a=new W({url:this.url}),r=new P({statisticType:"min",onStatisticField:this._field}),i=new P({statisticType:"max",onStatisticField:this._field}),s=new I({outStatistics:[r,i]});return a.execute(s).then((e=>{const a=e.features[0].attributes;let r=null,i=null;for(const e in a)0===e.toLowerCase().indexOf("min")?r=a[e]:i=a[e];return this._processRendererJSON(t,r,i)}))}_processRendererJSON(e,t,a){if("classBreaks"===e.type){const r=$(e);return{classBreaks:r.classBreakInfos.map(((e,i)=>(0===i&&null!=t&&(e.minValue=t),i===r.classBreakInfos.length-1&&null!=a&&(e.maxValue=a),{minValue:e.minValue,maxValue:e.maxValue,label:e.label}))),normalizationTotal:r.normalizationTotal}}return{uniqueValues:e.uniqueValueInfos.map(((r,i)=>(0===i&&null!=t&&(r.value=t),i===e.uniqueValueInfos.length-1&&null!=a&&(r.value=a),{count:r.count,value:r.value,label:r.label})))}}};e([a()],Ie.prototype,"checkValueRange",void 0),e([a()],Ie.prototype,"gdbVersion",void 0),e([a({type:J})],Ie.prototype,"source",void 0),e([a({readOnly:!0})],Ie.prototype,"parsedUrl",null),Ie=e([n("esri.tasks.GenerateRendererTask")],Ie);var Ne=Ie;const Pe=s.getLogger("esri.smartMapping.support.adapters.FeatureLayerAdapter");async function Qe(e){if(!e)throw new t("feature-layer-adapter:insufficient-data","layerView is required to fetch the features");const a=S(),r=z(e,"updating",a.signal);await _(r,5e3,a).catch((e=>{throw Pe.warn("LayerView is taking too long to update. Aborting fetch from layerView."),e}))}let Oe=class extends se{constructor(e){super(e)}destroy(){var e;this._hasLocalSource=null,null==(e=this.workerClient)||e.destroy()}_isStatsSupportedOnService(){const e=this.layer;return!e.get("capabilities.query.supportsStatistics")||"multipatch"===this.geometryType&&!b(e.url)&&e.version<10.5?Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support statistics query")):Promise.resolve()}async _fetchFeaturesFromMemory(e,t,a,r){const i=this.layer,s="json"===r;if(this._hasLocalSource){const e=await i.queryFeatures(t);return s?me(e.features):e.features}if(await Qe(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:r}=await e.queryFeaturesJSON(t,{signal:a});return r}const n=await e.queryFeatures(t,{signal:a});return s?me(n.features):n.features}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then((e=>e.features))}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(me)}_fetchFeaturesForStats(e,t){return F({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t)))}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:5,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:"field"===t?a:void 0,minValue:e.minValue,maxValue:e.maxValue,signal:e.signal}).then((e=>{let t,a,r;if(e.classBreakInfos.some((e=>(e.hasAvg&&(t=e),!!t))),t){const e=t.maxValue-t.minValue;a=t.minValue+e/2,r=4*e}return ge({min:e.minValue,max:e.maxValue,avg:a,stddev:r})}))}_getSummaryStatsQuery(e,t){const{field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,minValue:n,maxValue:o}=e,l=this.supportsSQLExpression&&t?je(this,a):e.sqlExpression,u=_e({field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,layer:this}),c=l||u,f=c?h(c,n,o):null,y=m({field:a,normalizationField:i,normalizationType:r}),g=d(e.sqlWhere,y),F=d(g,f),v=p({normalizationField:i,normalizationType:r,sqlExpression:l,supportsSQLExpression:this.supportsSQLExpression,minValue:n,maxValue:o}),w=L(this.getField(a)),x=ue.filter((e=>"nullcount"===e?v:!w||"count"===e)),S=this.layer.createQuery();return S.where=d(S.where,F),S.sqlFormat=l?"standard":null,S.outStatistics=x.map((e=>{const t=new P;let a=null,r=null,i=`${e}_value`;return"variance"===e?(a="var",r=c):"nullcount"===e?(a="count",r=this.layer.objectIdField,i="totalcount_value"):(a=e,r=c),t.statisticType=a,t.onStatisticField=r,t.outStatisticFieldName=i,t})),S}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),"percent-of-total"===e.normalizationType&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType));const a=this._getSummaryStatsQuery(e,t);return ge(pe(await this.layer.queryFeatures(a,{signal:e.signal}),t))}async _summaryStatsFromClientQuery(e,t){const a=this._getSummaryStatsQuery(e,t);return ge(pe(await this.layer.queryFeatures(a,{signal:e.signal}),t))}async _summaryStatsFromMemory(e,a){const{view:r,field:i,signal:s}=e,{featuresJSON:n,layerView:o,query:l}=await this._processStatsFromMemoryParams(e),u={field:i,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue};var c;e.valueExpression&&r&&n&&(u.fieldType=null==a?void 0:a.type,u.viewInfoParams={viewingMode:"2d"===r.type?"map":r.viewingMode,scale:r.scale,spatialReference:null==(c=r.spatialReference)?void 0:c.toJSON()});if("percent-of-total"===e.normalizationType&&null==e.normalizationTotal){const e=(!n&&o&&"querySummaryStatistics"in o&&o.querySummaryStatistics?await o.querySummaryStatistics(l,{field:i},{signal:s}):await this.workerClient.summaryStatistics({field:i},n)).sum;if(null==e)throw new t("feature-layer-adapter:invalid","invalid normalizationTotal");u.normalizationTotal=e}return ge(!n&&o&&"querySummaryStatistics"in o&&o.querySummaryStatistics?await o.querySummaryStatistics(l,u,{signal:s}):await this.workerClient.summaryStatistics(u,n))}async _processStatsFromMemoryParams(e){if(e.features)return{featuresJSON:me(e.features)};if(!e.view)throw new t("feature-layer-adapter:insufficient-data","View is required to fetch the features");const{view:a,field:r,normalizationField:i,valueExpression:s,signal:n}=e,o=await a.whenLayerView(this.layer);let l="querySummaryStatistics"in o&&"function"==typeof o.querySummaryStatistics,u=null,c=null;if(l)try{await Qe(o);const e=await F({field:r,normalizationField:i,valueExpression:s});(await de(this,e,o)).length?l=!1:(u=this.layer.createQuery(),u.outFields=e,u.returnGeometry=!1),o.suspended&&(l=!1)}catch{l=!1}var m;if(!l&&(c=await this._fetchFeaturesForStats({field:r,valueExpression:s,normalizationField:i,view:a,signal:n},"json"),null==(m=c)||!m.length))throw new t("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");return{layerView:o,query:u,featuresJSON:c}}_uvFromGenRenderer(e,t){const a=e.field,r=new ae;r.attributeField=a;const i=new ee;return i.classificationDefinition=r,this.generateRenderer(i,e.signal).then((e=>{const t={},r=this.getField(a);return e.uniqueValues.forEach((e=>{let a=e.value;null!=a&&""!==a&&("string"!=typeof a||""!==a.trim()&&"<null>"!==a.toLowerCase())||(a=null),null==t[a]?t[a]={count:e.count,data:M(r)&&a?Number(a):a}:t[a].count=t[a].count+e.count})),{count:t}})).then((a=>Me(a,t,e.returnAllCodedValues)))}_getUVQuery(e){const t=e.field,a=e.sqlExpression,r="countOF"+(t||"Expr"),i=new P;i.statisticType="count",i.onStatisticField=a?"1":t,i.outStatisticFieldName=r;const s=this.layer.createQuery();return s.where=d(s.where,e.sqlWhere),s.sqlFormat=a?"standard":null,s.outStatistics=[i],s.groupByFieldsForStatistics=[t||a],s}_uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(this._getUVQuery(e),{signal:e.signal}))).then((t=>be(t,this,e.field,null,e.signal))).then((a=>Me(a,t,e.returnAllCodedValues)))}async _uvFromClientQuery(e,t){const{signal:a}=e,r=this._getUVQuery(e),i=await this.layer.queryFeatures(r,{signal:a});return Me(await be(i,this,e.field,null,a),t,e.returnAllCodedValues)}async _uvFromMemory(e,t){const{field:a,valueExpression:r,view:i,signal:s}=e,n={field:a,valueExpression:r,view:i,signal:s};return Ce(e,e.features?e.features:await this._fetchFeaturesForStats(n),t)}_calcBinsSQL(e,t,a){const r=[],i=t.length;return t.forEach(((t,s)=>{const[n,o]=t;let l=null;l=0!==s||a?s!==i-1||a?d(`${e} >= ${n}`,`${e} ${s===i-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,r.push("WHEN ("+l+") THEN "+(s+1))})),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}_getNormalizationTotal(e,t,a){return e&&"percent-of-total"===t?this.summaryStatistics({field:e,signal:a}).then((e=>e.sum)):Promise.resolve(null)}_getQueryParamsForExpr(e,t){const a=e.valueExpression||e.sqlExpression,r=e.signal;if(!a){const{field:a,normalizationType:i,normalizationField:s}=e,n=a?this.getField(a):null,o=C(n),l={field:a,normalizationType:i,normalizationField:s,normalizationTotal:t,layer:this};return{sqlExpression:o?je(this,a):_e(l),sqlWhere:o?null:e.sqlWhere||m({field:a,normalizationType:i,normalizationField:s}),signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,signal:r}}_getDataRange(e,t,a){return null!=t&&null!=a?Promise.resolve({min:t,max:a}):this.summaryStatistics(e).then((e=>({min:e.min,max:e.max})))}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.signal).then((t=>{const a=this._getQueryParamsForExpr(e,t);return this._getDataRange(a,e.minValue,e.maxValue).then((r=>{const{min:i,max:s}=r,n=e.numBins||10,o=xe(i,s,n),l=this._calcBinsSQL(a.sqlExpression,o,null!=e.minValue&&null!=e.maxValue),u=new P({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=d(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[l],c.orderByFields=[l],this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(c,{signal:a.signal}))).then((e=>qe(e,i,s,n,t)))}))}))}_histogramForField(e){let a=null;return a=null!=e.minValue&&null!=e.maxValue?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics(e).then((e=>{if(!e.count)throw new t("feature-layer-adapter:insufficient-data","Either the layer has no features or none of the features have data for the field");return{min:e.min,max:e.max}})),a.then((t=>this._getBins({min:t.min,max:t.max},e.field,e.numBins,e.signal)))}_getBins(e,t,a=10,r){const{min:i,max:s,normTotal:n,excludeZerosExpr:o}=e,l=e.intervals||xe(i,s,a),u=e.sqlExpr||t;return this._queryBins(l,u,o,r).then((e=>({bins:e.map(((e,t)=>({minValue:l[t][0],maxValue:l[t][1],count:e.value}))),minValue:i,maxValue:s,normalizationTotal:n})))}_queryBins(e,t,a,r){const i=[],s=e.length;for(let r=0;r<s;r++){const n=d(a,d(t+" >= "+e[r][0],null!==e[r][1]?t+(r===s-1?" <= ":" < ")+e[r][1]:""));i.push(n)}return x(i.map((e=>this.queryFeatureCount(e,r))))}_binParamsFromGenRend(e,t){const{field:a,normalizationType:r,normalizationField:i,signal:s}=e,n=m({field:a,normalizationType:r,normalizationField:i}),o=new ee({classificationDefinition:Fe({field:a,normalizationType:r,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numBins||10}),where:d(n,t)});return this.generateRenderer(o,s).then((e=>{const{normalizationTotal:t,classBreaks:s}=e;return Se({field:a,normalizationType:r,normalizationField:i,normalizationTotal:t,classBreaks:s,where:n,layer:this})}))}_histogramFromMemory(e){const{field:a,normalizationField:r,normalizationType:i,valueExpression:s,classificationMethod:n,minValue:o,maxValue:l,view:u,signal:c}=e,m={field:a,valueExpression:s,normalizationField:r,view:u,signal:c};return(e.features?Promise.resolve(e.features):this._fetchFeaturesForStats(m)).then((r=>{if(!(r&&r.length))throw new t("feature-layer-adapter:insufficient-data","No features are available to calculate histogram");let m=null;if((!n||"equal-interval"===n)&&!i)m=null!=o&&null!=l?Promise.resolve({min:o,max:l,source:"parameters"}):this.summaryStatistics({field:a,valueExpression:s,features:r,view:u,signal:c}).then((e=>e.count?{min:e.min,max:e.max}:Promise.reject(new t("feature-layer-adapter:insufficient-data","No features are available to calculate histogram"))));else{const t={...e};t.features=r,m=this._getBinParamsFromMemory(t)}return m.then((t=>ze(e,t,r)))}))}async _getBinParamsFromMemory(e){const{field:t,valueExpression:a,classificationMethod:r,standardDeviationInterval:i,normalizationType:s,normalizationField:n,minValue:o,maxValue:l,features:u,view:c,signal:d}=e;return this._classBreaksFromMemory({field:t,valueExpression:a,normalizationType:s,normalizationField:n,classificationMethod:r,standardDeviationInterval:i,minValue:o,maxValue:l,numClasses:e.numBins,features:u,view:c,signal:d}).then((e=>{const a=e.normalizationTotal,r=e.classBreakInfos,i=m({field:t,normalizationType:s,normalizationField:n});return Se({field:t,normalizationType:s,normalizationField:n,normalizationTotal:a,classBreaks:r,where:i,layer:this})}))}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,n=m({field:t,normalizationType:a,normalizationField:r}),o=_e({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=h(o,e.minValue,e.maxValue),u=Fe({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||5}),c=new ee;return c.classificationDefinition=u,c.where=d(n,l),this.generateRenderer(c,s).then((t=>we(e,t)))}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||5,i=[],s=(a-t)/r;for(let e=0;e<r;e++){const a=t+e*s;i.push({minValue:a,maxValue:a+s})}i[r-1].maxValue=a;const n=we(e,{classBreaks:i,normalizationTotal:e.normalizationTotal});return Promise.resolve(n)}async _classBreaksFromMemory(e){const{field:a,normalizationField:r,valueExpression:i,view:s,signal:n}=e,o={field:a,valueExpression:i,normalizationField:r,view:s,signal:n},l=e.features||await this._fetchFeaturesForStats(o);if(!(l&&l.length))throw new t("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");const u={...e};if("percent-of-total"===u.normalizationType){const e=(await he({field:a},l)).sum;if(null==e)throw new t("feature-layer-adapter:invalid","invalid normalizationTotal");u.normalizationTotal=e}return ve(u,l)}async _heatmapStatsFromMemory(e,a){const{blurRadius:r,field:i,view:s,signal:n}=e,{resolution:o,size:l}=s.state,u=new N({extent:s.extent,tolerance:o}),c=this._quantizeFeatures(e.features||await this._fetchFeaturesForStats({field:i,view:s,returnGeometry:!0,signal:n}),u,s);if(!c||!c.length)return{count:0,min:null,max:null,avg:null,stddev:null};const m=function(e,t=10,a,r,i,s){const n=new Float64Array(i*s),o=B(t),l=Math.round(3*t);let u=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY,m=0,d=0,p=0,h=0;const f=A(r,a);for(const{geometry:t,attributes:a}of e){const e=t.x-l,r=t.y-l,y=Math.max(0,e),g=Math.max(0,r),F=Math.min(s,t.y+l),v=Math.min(i,t.x+l),w=+f(a);for(let t=g;t<F;t++){const a=o[t-r];for(let r=y;r<v;r++){const s=o[r-e],l=t*i+r,f=n[l];m=n[l]+=a*s*w;const y=m-f;d+=y,p+=y*y,m<u&&(u=m),m>c&&(c=m),h++}}}if(!h)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const y=(c-u)/2;return{mean:d/h,stdDev:Math.sqrt((p-d*d/h)/h),min:u,max:c,mid:y,count:h}}(c,r,a,i,l[0],l[1]);if(m)return{count:m.count,min:m.min,max:m.max,avg:m.mean,stddev:m.stdDev};throw new t("feature-layer-adapter:invalid","unable to calculate heatmap statistics")}_quantizeFeatures(e,t,a){const i=E(t),{spatialReference:s,size:n}=a,o=T(s)?q(s):null,l=o?Math.round((o.valid[1]-o.valid[0])/i.scale[0]):null;return e.map((e=>{const t=new Z(r(e.geometry));return V(i,t,t,t.hasZ,t.hasM),e.geometry=o?this._wrapPoint(t,l,n[0]):t,e}))}_wrapPoint(e,t,a){return e.x<0?e.x+=t:e.x>a&&(e.x-=t),e}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}summaryStatistics(e){const{field:a,normalizationType:r,sqlExpression:i,view:s,features:n}=e,o=a?this.getField(a):null,l=C(o),u=e.valueExpression||i,c=u&&!i,m=this._hasLocalSource||n,d=s&&"3d"===s.type;if(m||c)return c||n||d?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(l||u||"natural-log"===r||"square-root"===r))return Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries"));return(r&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch((()=>(w(e.signal),this._summaryStatsFromMemory(e,o))))}uniqueValues(e){const{field:t,valueExpression:a,sqlExpression:r,signal:i}=e,s=(t?this.getField(t):null)&&this.getFieldDomain(t),n=a&&(!r||!this.supportsSQLExpression),o=this._hasLocalSource||e.features||n,l=e.view,u=l&&"3d"===l.type;return o?n||e.features||u?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s):this._uvFromServiceQuery(e,s).catch((t=>(w(i),e.field?this._uvFromGenRenderer(e,s):t))).catch((()=>(w(i),n||e.features||u?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s))))}histogram(e){const{field:a,normalizationType:r,normalizationField:i,classificationMethod:s,signal:n}=e,o=a?this.getField(a):null,l=C(o),u=e.valueExpression||e.sqlExpression,c=u&&!e.sqlExpression,m=this._hasLocalSource||e.features||c,d=this.supportsSQLExpression,p=!s||"equal-interval"===s,f=e.minValue,y=e.maxValue,g=null!=f&&null!=y,F=e.numBins||10;return m?this._histogramFromMemory(e):(u||d)&&p?d||!u&&"natural-log"!==r&&"square-root"!==r?this._histogramForExpr(e):Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):l&&p?Promise.reject(new t("feature-layer-adapter:not-supported","Normalization and date field are not allowed when layer does not support standardized SQL expression for queries")):r||!p?this._binParamsFromGenRend(e).then((s=>{if(!g)return this._getBins(s,a,F,n);if(f>s.max||y<s.min)throw new t("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(p)return this._getBins({min:f,max:y,sqlExpr:s.sqlExpr,excludeZerosExpr:s.excludeZerosExpr},a,F,n);{const t=_e({field:a,normalizationType:r,normalizationField:i,normalizationTotal:s.normTotal,layer:this}),o=h(t,f,y);return this._binParamsFromGenRend(e,o).then((e=>this._getBins(e,a,F,n)))}})):this._histogramForField(e)}classBreaks(e){const t=!1!==e.analyzeData,a=this._hasLocalSource||e.features||e.valueExpression;if(t&&a)return this._classBreaksFromMemory(e);return(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch((()=>(w(e.signal),this._classBreaksFromMemory(e))))}queryFeatureCount(e,a){if(this._hasLocalSource)return Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support count query"));const r=this.layer,i=r.createQuery();return i.where=d(i.where,e),r.queryFeatureCount(i,{signal:a})}generateRenderer(e,a){const r=this.layer;if(this._hasLocalSource||r.version<10.1)return Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)"));const i=new Ne({url:r.parsedUrl.path,source:r.dynamicDataSource,gdbVersion:r.gdbVersion}),s=r.createQuery();return e.where=d(e.where,s.where),i.execute(e,{signal:a})}heatmapStatistics(e){const{field:t,fieldOffset:a,signal:r}=e;return(t&&null==a?this.summaryStatistics({field:t,signal:r}):Promise.resolve(null)).then((t=>{let r=a||0;if(t){const{count:e,min:a,max:i}=t;e?a===i&&0===a?r=1:i<=0?r="abs":a<0&&(r=-1.01*a):r=1}return this._heatmapStatsFromMemory(e,r).then((e=>({...e,summaryStatistics:t,fieldOffset:r})))}))}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new t("feature-layer-adapter:not-supported","Layer does not support advanced SQL expressions and standardized queries");const{fields:a,view:r,signal:i}=e,s=Q(a),n=O(a),o=(r&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:r,signal:i}):await this._uvFromServiceQuery({sqlExpression:n.expression,valueExpression:s,signal:i})).uniqueValueInfos,l=o.map((e=>e.value)),u=a.filter((e=>-1===l.indexOf(e)));for(const e of u)o.push({value:e,count:0});o.sort(((e,t)=>a.indexOf(e.value)-a.indexOf(t.value)));for(const e of o)e.value===k&&(e.value=null);return{predominantCategoryInfos:o}}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,signal:n}=e,o=this.layer.createQuery(),l="json"===t;o.outSpatialReference=e.spatialReference||a&&a.spatialReference,o.returnGeometry=!!s,o.outFields=i;let u=[],c=!1;if(a)try{const e=await a.whenLayerView(this.layer);if(c=!(await de(this,i,e)).length,c&&(u=await this._fetchFeaturesFromMemory(e,o,n,t),u.length&&r>0&&r<=u.length))return v(u,r,1)}catch(e){w(n)}try{if(this._hasLocalSource)return c?u:l?this._fetchFeaturesJSONFromService(o,n):this._fetchFeaturesFromService(o,n);const t=await this.queryFeatureCount(null,n),i=this.layer.capabilities.query.maxRecordCount;let s=-1===r?t:r;if(s=i&&s>i?i:s,t<=u.length||u.length>=i)return u;const m=a.extent.width/a.width/a.scale*4e5;if(o.maxAllowableOffset=e.resolution||m,t<=s)return l?this._fetchFeaturesJSONFromService(o,n):this._fetchFeaturesFromService(o,n);if(t<=2e4){const e=await this.layer.queryObjectIds();return o.objectIds=v(e,s,1),l?this._fetchFeaturesJSONFromService(o,n):this._fetchFeaturesFromService(o,n)}return this.layer.get("capabilities.query.supportsPagination")&&(o.num=Math.min(s,2e4)),l?this._fetchFeaturesJSONFromService(o,n):this._fetchFeaturesFromService(o,n)}catch(e){return w(n),u}}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.get("capabilities.query.supportsSqlExpression"),this._hasLocalSource=!t.url&&!!t.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=re.getInstance(),await this.workerClient.open(r(r(e).signal))}));return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({constructOnly:!0})],Oe.prototype,"layer",void 0),Oe=e([n("esri.smartMapping.support.adapters.FeatureLayerAdapter")],Oe);var ke=Oe;function De(e){return"esri.rest.support.ClassBreaksDefinition"===e.declaredClass}function Re(e){return"esri.rest.support.UniqueValueDefinition"===e.declaredClass}let Be=class extends ke{constructor(e){super(e)}async _createGenerateRendererResult(e,a,r,i,s){const n=e&&e.features;if(!(n&&n.length))throw new t("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");let o=null;if("percent-of-total"===i){if(o=(await he({field:a},n)).sum,null==o)throw new t("csv-layer-adapter:invalid","invalid normalizationTotal")}if(De(s)){const e=(await ye({field:a,normalizationType:i,normalizationField:r,normalizationTotal:o},n)).filter((e=>Number.isFinite(e)));return u({definition:s,values:e,normalizationTotal:o})}if(Re(s)){const e=(await ye({field:a},n)).filter((e=>null!=e&&"string"==typeof e&&""!==e.trim()));return c(e)}}generateRenderer(e,t){const a=e.classificationDefinition;let r=null,i=null,s=null;De(a)?(r=a.classificationField,i=a.normalizationField,s=a.normalizationType):Re(a)&&(r=a.attributeField);const n=this.layer;return F({field:r,normalizationField:i}).then((o=>{const l=n.createQuery();return l.returnGeometry=!1,l.outFields=o,l.where=d(l.where,e.where),n.queryFeatures(l,{signal:t}).then((e=>this._createGenerateRendererResult(e,r,i,s,a)))}))}load(e){const t=this.layer.load(e).then((e=>{this.geometryType=e.geometryType,this.objectIdField=e.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0}));return this.addResolvingPromise(t),Promise.resolve(this)}};Be=e([n("esri.smartMapping.support.adapters.CSVLayerAdapter")],Be);var Ae=Be;let Ge=class extends se{constructor(e){super(e)}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),s=t.filter((e=>{const t=this.layer.getField(e);return-1===a.indexOf(t.name)})),n=s.some((e=>this.layer.getField(e).name===r));return i.outFields=n?s:[...s,r],i}async _fetchFeaturesFromMemory(e,a,r){if(!e)throw new t("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),s=S(),n=z(i,"updating",s.signal);await _(n,5e3,s);const o=await de(this,r,i),l=this._updateQuery(a,r,o),u=(await i.queryFeatures(l)).features;return o.length?i.whenGraphicAttributes(u,o):u}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(me)}_fetchFeaturesForStats(e){return F({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((t=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:t,signal:e.signal})))}_generateFeatureSetForCachedHistogram(e,t=e.minimum,a=e.maximum,r){const i=[];for(let e=0;e<r;e++)i[e]=0;const s=e.counts.length,n=e.minimum,o=e.maximum;for(let l=0;l<s;l++){const u=(l+.5)/s,c=((1-u)*n+u*o-t)/(a-t)*r;c>=0&&c<=r&&(i[c===r?r-1:Math.floor(c)]+=e.counts[l])}const l=[];i.forEach(((e,t)=>{const a=new Y({attributes:{}});a.attributes.EXPR_1=t+1,a.attributes.countOFExpr=e,l.push(a)}));const u=new X;return u.features=l,u}_getCachedStatistics(e,a){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):r.queryCachedStatistics(a&&a.name,{signal:e.signal}).then((e=>{const t=e.stats,{min:a,max:r,totalValuesCount:i}=t;let{avg:s,stddev:n,sum:o,variance:l,count:u}=t;return 0===a&&0===r||(s=0===s?null:s,o=0===o?null:o,n=0===n?null:n,l=0===l?null:l,u=0===u?null:u),null==u&&(null!=o&&null!=s?u=Math.round(o/s):null!=i&&(u=i)),{avg:s,count:u,max:r,min:a,stddev:n,sum:o,variance:l}}))}async _getSummaryStatisticsFromMemory(e,a){const r={field:e.field,valueExpression:e.valueExpression,normalizationField:e.normalizationField,view:e.view,signal:e.signal},i=e.features?e.features:await this._fetchFeaturesForStats(r);if(!(i&&i.length))throw new t("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");const s=C(a),n={...e};if("percent-of-total"===n.normalizationType){const e=(await he({field:n.field},i)).sum;if(null==e)throw new t("scene-layer-adapter:invalid","invalid normalizationTotal");n.normalizationTotal=e}return ge(await he(n,i,s))}_getCachedStatisticsForUniqueValues(e,a){const r=this.layer,i=a&&a.name,s=a&&this.getFieldDomain(e.field);return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):r.queryCachedStatistics(i,{signal:e.signal}).then((t=>{const s=t.stats;if(!s.mostFrequentValues)return Promise.reject();const n=t.labels&&t.labels.labels,o={},l=[],u="countOF"+i;s.mostFrequentValues.forEach((e=>{const t=new Y({attributes:{}});t.attributes[i]=a&&a.name!==r.objectIdField&&(M(a)||C(a))?Number(e.value):e.value,t.attributes[u]=e.count,l.push(t)})),n&&n.forEach((e=>{o[e.value]=e.label}));const c=new X;return c.features=l,be(c,this,e.field,o,e.signal)})).then((t=>Me(t,s,e.returnAllCodedValues)))}_getUniqueValuesFromMemory(e,t){const a=t&&this.getFieldDomain(e.field),r={field:e.field,valueExpression:e.valueExpression,view:e.view,signal:e.signal};return(e.features?Promise.resolve(e.features):this._fetchFeaturesForStats(r)).then((t=>Ce(e,t,a)))}_getCachedStatisticsForHistogram(e,a){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):r.queryCachedStatistics(a&&a.name,{signal:e.signal}).then((t=>{const a=t.stats,{minValue:r,maxValue:i}=e,s=null!=r?r:a.min,n=null!=i?i:a.max,o=e.numBins||10;return qe(this._generateFeatureSetForCachedHistogram(a.histogram,s,n,o),s,n,o)}))}async _getClassBreaksFromMemory(e){const a={field:e.field,valueExpression:e.valueExpression,normalizationField:e.normalizationField,view:e.view,signal:e.signal},r=e.features?e.features:await this._fetchFeaturesForStats(a);if(!(r&&r.length))throw new t("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");const i={...e};if("percent-of-total"===i.normalizationType){const e=(await he({field:i.field},r)).sum;if(null==e)throw new t("scene-layer-adapter:invalid","invalid normalizationTotal");i.normalizationTotal=e}return ve(i,r)}_getHistogramFromMemory(e){const a={field:e.field,valueExpression:e.valueExpression,normalizationField:e.normalizationField,view:e.view,signal:e.signal};return(e.features?Promise.resolve(e.features):this._fetchFeaturesForStats(a)).then((a=>{if(!(a&&a.length))throw new t("scene-layer-adapter:insufficient-data","No features are available to calculate histogram");const{field:r,normalizationType:i,valueExpression:s,classificationMethod:n,minValue:o,maxValue:l,view:u}=e;let c=null;if((!n||"equal-interval"===n)&&!i)c=null!=o&&null!=l?Promise.resolve({min:o,max:l}):this.summaryStatistics({field:r,valueExpression:s,features:a,view:u,signal:e.signal}).then((e=>e.count?{min:e.min,max:e.max}:Promise.reject(new t("feature-layer-adapter:insufficient-data","No features are available to calculate histogram"))));else{const t={...e};t.features=a,c=this._getBinParamsFromMemory(t)}return c.then((t=>ze(e,t,a)))}))}async _getBinParamsFromMemory(e){const{field:t,valueExpression:a,classificationMethod:r,standardDeviationInterval:i,normalizationType:s,normalizationField:n,minValue:o,maxValue:l,features:u,view:c}=e;return this._getClassBreaksFromMemory({field:t,valueExpression:a,normalizationType:s,normalizationField:n,classificationMethod:r,standardDeviationInterval:i,minValue:o,maxValue:l,numClasses:e.numBins,features:u,view:c}).then((e=>{const a=e.normalizationTotal,r=e.classBreakInfos,i=m({field:t,normalizationType:s,normalizationField:n});return Se({field:t,normalizationType:s,normalizationField:n,normalizationTotal:a,classBreaks:r,where:i,layer:this})}))}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}summaryStatistics(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.summaryStatistics(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatistics(e,t).catch((()=>(w(e.signal),this._getSummaryStatisticsFromMemory(e,t)))):this._getSummaryStatisticsFromMemory(e,t)}uniqueValues(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.uniqueValues(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForUniqueValues(e,t).catch((()=>(w(e.signal),this._getUniqueValuesFromMemory(e,t)))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.histogram(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForHistogram(e,t).catch((()=>(w(e.signal),this._getHistogramFromMemory(e)))):this._getHistogramFromMemory(e)}classBreaks(e){const a=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.classBreaks(e):this._hasCachedStatistics(a&&a.name)?Promise.reject(new t("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e,a){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e,a):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,a){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,a):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,signal:n}=e,o="json"===t,l=this.layer.createQuery();l.outFields=i,l.returnGeometry=!!s,l.where=null,l.num=r;let u=[];try{if(u=o?await this._fetchFeaturesJSONFromMemory(a,l,i):await this._fetchFeaturesFromMemory(a,l,i),u.length&&r>0&&r<=u.length)return v(u,r,1)}catch(e){w(n)}let c=null;if(this._featureLayerAdapter){const a={...e};delete a.view,c=await this._featureLayerAdapter.getSampleFeatures(a,t)}return c&&c.length?c:v(u,u.length,1)}load(e){const t=this.layer.load(e).then((t=>{const a=t.associatedLayer;if(this.geometryType=t.geometryType,i(a)){this._featureLayerAdapter=new ke({layer:a});return this._featureLayerAdapter.load(e).then((()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent}))}this.objectIdField=t.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=t.fullExtent}));return this.addResolvingPromise(t),Promise.resolve(this)}};e([a({constructOnly:!0})],Ge.prototype,"layer",void 0),Ge=e([n("esri.smartMapping.support.adapters.SceneLayerAdapter")],Ge);var Ue=Ge;let Je=class extends Ue{constructor(e){super(e)}getField(e=""){return this.layer.fieldsIndex.get(e)}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then((()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1}));return this.addResolvingPromise(t),Promise.resolve(this)}};Je=e([n("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],Je);const $e={0:{adapter:Ae,type:"csv",label:"CSVLayer"},2:{adapter:ke,type:"feature",label:"FeatureLayer"},1:{adapter:ke,type:"geojson",label:"GeoJSONLayer"},3:{adapter:Ue,type:"scene",label:"SceneLayer"},4:{adapter:Je,type:"point-cloud",label:"PointCloudLayer"},5:{adapter:ke,type:"wfs",label:"WFSLayer"}},We=[0,2,1,3,4,5];function He(e){return e.map((e=>$e[e].label))}function Ze(e,t=We){if(e instanceof se)return e;let a=null;return t.some((t=>{const r=e.type===$e[t].type;if(r){const r=$e[t].adapter;a=new r({layer:e})}return r})),a}export{Ze as c,He as g};
