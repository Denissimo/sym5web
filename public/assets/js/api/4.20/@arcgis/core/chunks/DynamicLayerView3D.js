/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{f as t,r as i}from"./asyncUtils.js";import{L as a}from"./Logger.js";import{i as r,b as s}from"../core/lang.js";import{isAbortError as n,eachAlways as o,createAbortController as l,onAbort as h,isAborted as m,createAbortError as d,always as c,throwIfAborted as g}from"../core/promiseUtils.js";import{whenOnce as u}from"../core/watchUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as f}from"../core/accessorSupport/decorators/subclass.js";import y from"../geometry/Extent.js";import{w as x,h as w,d as _,a as v,n as R,s as S,k as E}from"./aaBoundingRect.js";import{L as b}from"./LayerView3D.js";import{a0 as j}from"./VertexColor.glsl.js";import{G as A}from"./ColorMaterial.js";import{t as L}from"./projectExtentUtils.js";import{d as M}from"./lineUtils.js";import{R as I}from"./RenderGeometry.js";import{T as C}from"./Texture2.js";import{I as D}from"./ImageMaterial.js";import G from"../views/layers/LayerView.js";import{R as T}from"./RefreshableLayerView.js";function H(e){return A.createSquareGeometry([[e[0],e[1],-1],[e[2],e[1],-1],[e[2],e[3],-1],[e[0],e[3],-1]])}const O=[0,0,1],P=a.getLogger("esri.views.3d.layers.DynamicLayerView3D");let V=class extends(T(b(G))){constructor(){super(...arguments),this.drapeSourceType=0,this.updatePolicy=1,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlayExtents=new Array,this.updateWhenStationary=!0}initialize(){this.addResolvingPromise(L(this).then((e=>this._set("fullExtentInLocalViewSpatialReference",e)))),this.updatingHandles.add(this,"suspended",(()=>this._suspendedChangeHandler())),this.handles.add(this.view.resourceController.scheduler.registerIdleStateCallbacks((()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")}),(()=>{}))),this._isScaleRangeLayer()&&this.updatingHandles.add(this.layer,"scaleRangeId",(()=>this.notifyChange("suspended"))),"local"===this.view.viewingMode&&this.updatingHandles.add(this.view.basemapTerrain,"extent",(()=>this._overlayExtents.forEach(((e,t)=>this._updateImageExtent(t)))))}destroy(){this.clear()}setDrapingExtent(e,t){this._overlayExtents[e.index]={extent:v(e.extent),spatialReference:t,resolution:e.resolution,renderLocalOrigin:e.renderLocalOrigin,pixelRatio:e.pixelRatio},this._updateImageExtent(e.index)}_updateImageExtent(e){const t=this._overlayExtents[e],i=this._clippedExtent(t.extent,z),a=function(e,t,i){const a=x(e)/w(e),r={width:i,height:i};return a>1.0001?r.height=i/a:a<.9999&&(r.width=i*a),r.width=Math.round(r.width/(x(e)/x(t))),r.height=Math.round(r.height/(w(e)/w(t))),r}(t.extent,i,t.resolution);let r=t.pixelRatio*this.view.pixelRatio;if("imageMaxWidth"in this.layer||"imageMaxHeight"in this.layer){const e=this.layer.imageMaxWidth,t=this.layer.imageMaxHeight;if(a.width>e){const t=e/a.width;a.height=Math.floor(a.height*t),a.width=e,r*=t}if(a.height>t){const e=t/a.height;a.width=Math.floor(a.width*e),a.height=t,r*=e}}const s=this._extents[e];s&&R(s.extent,i)&&!this._imageSizeDiffers(i,s.imageSize,a)||(this._extents[e]={extent:v(i),spatialReference:t.spatialReference,imageSize:a,pixelRatio:r},this.suspended||this._fetch(e).catch((e=>{n(e)||P.error(e)})))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(e){if(this.suspended)return;const t=[];for(let i=0;i<this._extents.length;i++)this._extents[i]&&t.push(this._fetch(i,e));await o(t)}canResume(){if(!super.canResume())return!1;if(this._isScaleRangeLayer()){const{minScale:e,maxScale:t}=this.layer;if(e>0||t>0){const i=this.view.scale;if(i<t||e>0&&i>e)return!1}}return!0}isUpdating(){return this._images.some((e=>!!e.loadingPromise))}async processResult(e,t,i){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const i=t.extent;if(new y(i[0],i[1],i[2],i[3],t.spatialReference).contains(e))return t}return null}getFetchOptions(){}async redraw(e,i){await t(this._images,(async(t,a)=>{t&&(await e(t,i),await this._createStageObjects(a,t.image))}))}_imageSizeDiffers(e,t,i){if(!this.maximumDataResolution||M.TESTS_DISABLE_UPDATE_THRESHOLDS)return!0;const a=x(e)/this.maximumDataResolution.x,r=w(e)/this.maximumDataResolution.y,s=a/t.width,n=r/t.height,o=a/i.width,l=r/i.height,h=Math.abs(s-o),m=Math.abs(n-l);return h>1.5||m>1.5}async _fetch(e,t){if(this.suspended)return;const i=this._extents[e],a=i.extent;this._images[e]||(this._images[e]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:v(a)});const r=this._images[e];r.loadingAbortController&&(r.loadingAbortController.abort(),r.loadingAbortController=null);const s=new y(a[0],a[1],a[2],a[3],i.spatialReference);if(0===s.width||0===s.height)return void this._clearImage(e);const o=l();r.loadingAbortController=o,h(t,(()=>o.abort()));const g=o.signal,u=this._waitFetchReady(g).then((()=>{const t={requestAsImageElement:!0,pixelRatio:this._overlayExtents[e].pixelRatio,...this.getFetchOptions(),signal:g},{height:a,width:r}=i.imageSize;return t.timestamp=this.refreshTimestamp,this.layer.fetchImage(s,r,a,t)})).then((e=>{if(m(g))throw P.warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),d();return this.processResult(r,e)})).then((()=>S(r.renderExtent,a)));r.loadingPromise=u,c(u,(()=>{u===r.loadingPromise&&(r.loadingPromise=null,r.loadingAbortController=null)}));const p=u.then((async()=>{await this._createStageObjects(e,r.image),this.notifyChange("updating")})).catch((e=>{throw e&&!n(e)&&P.error(e),this.notifyChange("updating"),e}));this.notifyChange("updating"),await p}_clearImage(e){const t=this._images[e];if(t){r(t.renderGeometry)&&(this.view.basemapTerrain.overlayManager.renderer.removeGeometries([t.renderGeometry],this,2),t.renderGeometry=null);const e=this.view._stage;e.remove(t.texture),t.texture=null,e.remove(t.material),t.material=null,t.loadingAbortController&&(t.loadingAbortController.abort(),t.loadingAbortController=null),t.loadingPromise=null,t.image=null,t.pixelData=null}}async _createStageObjects(e,t){const a=this.view._stage,n=this._images[e],o=this.view.basemapTerrain.overlayManager.renderer,l=()=>{a.remove(n.texture),n.texture=null,r(n.renderGeometry)&&(o.removeGeometries([n.renderGeometry],this,2),n.renderGeometry=null)};if(t){const r=new C(t,{width:t.width,height:t.height,preMultiplyAlpha:!0,wrap:{s:33071,t:33071}});let h;if(await i(this._images[0===e?1:0].loadingPromise),0===e)h=H(n.renderExtent);else{const e=this._images[0].renderExtent;if(!e)return void l();h=function(e,t){if(!_(e,t))return H(t);const i=[e[1]-t[1],Math.min(e[3],t[3])-Math.max(e[1],t[1]),t[3]-e[3],123456],a=[e[0]-t[0],Math.min(e[2],t[2])-Math.max(e[0],t[0]),t[2]-e[2],123456],r=t[2]-t[0],s=t[3]-t[1],n=a[0]>0&&a[2]>0?3:2,o=i[0]>0&&i[2]>0?3:2,l=(o+1)*(n+1),h=new Float64Array(3*l),m=new Float32Array(2*l),d=new Uint32Array(6*(o*n-1));let c=0,g=0,u=0,p=0,f=0;for(let e=0;e<4;e++){const o=i[e];if(o<=0)continue;let l=0;for(let i=0;i<4;i++){const o=a[i];o<=0||(h[g++]=t[0]+l,h[g++]=t[1]+c,h[g++]=-1,m[u++]=l/r,m[u++]=c/s,i<3&&e<3&&(1!==i||1!==e)&&(d[f++]=p,d[f++]=p+1,d[f++]=p+n+1,d[f++]=p+1,d[f++]=p+n+2,d[f++]=p+n+1),p++,l+=o)}c+=o}const y=new Uint32Array(d.length);return new j([["position",{size:3,data:h,exclusive:!0}],["normal",{size:3,data:O,exclusive:!0}],["uv0",{size:2,data:m,exclusive:!0}]],[["position",d],["normal",y],["uv0",d]])}(e,n.renderExtent)}l(),a.add(r),n.texture=r,s(n.material)?(n.material=new D({transparent:!0,textureId:r.id}),a.add(n.material)):n.material.setParameterValues({textureId:r.id}),n.renderGeometry=new I(h,n.material),n.renderGeometry.origin=this._overlayExtents[e].renderLocalOrigin,o.addGeometries([n.renderGeometry],this,2)}else l(),a.remove(n.material),n.material=null}_isScaleRangeLayer(){return"minScale"in this.layer&&"maxScale"in this.layer}_isScaleRangeActive(){return!!this._isScaleRangeLayer()&&(this.layer.minScale>0||this.layer.maxScale>0)}_clippedExtent(e,t){if("local"!==this.view.viewingMode)return S(t,e);const i=this.view.basemapTerrain,a=i.extent;return i.ready&&a?E(e,a,t):S(t,e)}_suspendedChangeHandler(){this.suspended?this.clear():this.refresh()}async _waitFetchReady(e){await u(this.view,"stationary",e),g(e)}};e([p()],V.prototype,"layer",void 0),e([p()],V.prototype,"suspended",void 0),e([p({readOnly:!0})],V.prototype,"fullExtentInLocalViewSpatialReference",void 0),e([p()],V.prototype,"updating",void 0),V=e([f("esri.views.3d.layers.DynamicLayerView3D")],V);const z=v();var U=V;export{U as D};
