/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../TimeExtent.js";import r,{t as o}from"../TimeInterval.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import"./Logger.js";import{r as i}from"./reader.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import m from"../layers/support/TimeInfo.js";import{fixTimeInfoFields as p}from"../layers/support/fieldUtils.js";function f(e){return void 0!==e.timeInfo}const a=f=>{let a=class extends f{constructor(){super(...arguments),this.timeExtent=null,this.timeOffset=null,this.useViewTime=!0}readOffset(e,t){const s=t.timeInfo.exportOptions;if(!s)return null;const i=s.timeOffset,n=o.fromJSON(s.timeOffsetUnits);return i&&n?new r({value:i,unit:n}):null}set timeInfo(e){p(e,this.fieldsIndex),this._set("timeInfo",e)}};return e([s({type:t,json:{write:!1}})],a.prototype,"timeExtent",void 0),e([s({type:r})],a.prototype,"timeOffset",void 0),e([i("service","timeOffset",["timeInfo.exportOptions"])],a.prototype,"readOffset",null),e([s({value:null,type:m,json:{write:!0,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"timeInfo",null),e([s({type:Boolean,json:{read:{source:"timeAnimation"},write:{target:"timeAnimation"},origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"useViewTime",void 0),a=e([n("esri.layers.mixins.TemporalLayer")],a),a};export{a as T,f as i};
