/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import r from"../request.js";import{throwIfAborted as s}from"../core/promiseUtils.js";import{urlToObject as t}from"../core/urlUtils.js";import{V as o}from"./Version.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{L as i}from"./Logger.js";import{r as l}from"./reader.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import p from"../geometry/Extent.js";import u from"../geometry/SpatialReference.js";import{i as y,p as c}from"./commonProperties2.js";import d from"../core/Collection.js";import{C as b}from"./CollectionFlattener.js";import h from"../core/Error.js";import{g as m}from"./metadata.js";import{n as f,c as S}from"../core/Accessor.js";import g from"../layers/support/Sublayer.js";import{i as x}from"./sublayerUtils.js";const v=i=>{let d=class extends i{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,r){const s=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!s)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const t=this.type,a=-1!==s.indexOf("query"),i=-1!==s.indexOf("map"),l=!!r.exportTilesAllowed,n=-1!==s.indexOf("tilemap"),p="tile"!==t&&!!r.supportsDynamicLayers,u="tile"!==t&&(!r.tileInfo||p),y="tile"!==t&&(!r.tileInfo||p),c="tile"!==t,d=!!r.cimVersion&&o.parse(r.cimVersion).since(1,4);return{operations:{supportsQuery:a,supportsExportMap:i,supportsExportTiles:l,supportsTileMap:n},exportMap:i?{supportsArcadeExpressionForLabeling:d,supportsSublayersChanges:c,supportsDynamicLayers:p,supportsSublayerVisibility:u,supportsSublayerDefinitionExpression:y}:null,exportTiles:l?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let s=r.currentVersion;return s||(s=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchSublayerInfo(e,r){return await this.fetchAllLayersAndTables(r),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=r(t(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const r of e.data.layers)this._allLayersAndTablesMap.set(r.id,r);return{result:e.data}}),(e=>({error:e}))));const o=await this._allLayersAndTablesPromise;if(s(e),"result"in o)return o.result;throw o.error}};return e([a({readOnly:!0})],d.prototype,"capabilities",void 0),e([l("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],d.prototype,"readCapabilities",null),e([a({json:{read:{source:"copyrightText"}}})],d.prototype,"copyright",void 0),e([a({type:p})],d.prototype,"fullExtent",void 0),e([a(y)],d.prototype,"id",void 0),e([a({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],d.prototype,"legendEnabled",void 0),e([a(c)],d.prototype,"popupEnabled",void 0),e([a({type:u})],d.prototype,"spatialReference",void 0),e([a()],d.prototype,"version",void 0),e([l("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],d.prototype,"readVersion",null),d=e([n("esri.layers.mixins.ArcGISMapService")],d),d},w=i.getLogger("esri.layers.TileLayer");const L=d.ofType(g);function T(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&T(e.sublayers,r)}))}const j=r=>{let s=class extends r{constructor(...e){super(...e),this.allSublayers=new b({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.handles.add(this.watch("sublayers",((e,r)=>this._handleSublayersChange(e,r)),!0))}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:s}=this,t=f(r.origin);if(t<2)return;if(s[t]={context:r,visibleLayers:e.visibleLayers||s[t].visibleLayers,layers:e.layers||s[t].layers},t>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:o,origin:a}=this.createSublayersForOrigin("web-document"),i=m(this);i.setDefaultOrigin(a),this._set("sublayers",new L(o)),i.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const r=f("web-document"===e?"web-map":e);let s=2,t=this.sublayersSourceJSON[2].layers,o=this.sublayersSourceJSON[2].context,a=null;const i=[3,4,5].filter((e=>e<=r));for(const e of i){const r=this.sublayersSourceJSON[e];x(r.layers)&&(s=e,t=r.layers,o=r.context,r.visibleLayers&&(a={visibleLayers:r.visibleLayers,context:r.context}))}const l=[3,4,5].filter((e=>e>s&&e<=r));let n=null;for(const e of l){const{layers:r,visibleLayers:s,context:t}=this.sublayersSourceJSON[e];r&&(n={layers:r,context:t}),s&&(a={visibleLayers:s,context:t})}const p=function(e,r){const s=[],t={};return e?(e.forEach((e=>{const o=new g;if(o.read(e,r),t[o.id]=o,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=t[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(o)}else s.unshift(o)})),s):s}(t,o),u=new Map,y=new Set;if(n)for(const e of n.layers)u.set(e.id,e);if(a)for(const e of a.visibleLayers)y.add(e);return T(p,(e=>{n&&e.read(u.get(e.id),n.context),a&&e.read({defaultVisibility:y.has(e.id)},a.context)})),{origin:S(s),sublayers:new L({items:p})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{w.error(new h("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return e([a({readOnly:!0})],s.prototype,"allSublayers",void 0),e([a({readOnly:!0,type:d.ofType(g)})],s.prototype,"serviceSublayers",void 0),e([a({value:null,type:L,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],s.prototype,"sublayers",void 0),e([a({readOnly:!0})],s.prototype,"sublayersSourceJSON",void 0),s=e([n("esri.layers.mixins.SublayersOwner")],s),s};export{v as A,j as S};
