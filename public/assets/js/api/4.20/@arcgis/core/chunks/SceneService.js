/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../request.js";import r from"../core/Error.js";import{i}from"../core/lang.js";import{L as o}from"./Logger.js";import{debounce as s}from"../core/promiseUtils.js";import{urlToObject as a}from"../core/urlUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{r as n}from"./reader.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{w as d}from"./writer.js";import{u}from"./originUtils.js";import c from"../geometry/Extent.js";import m from"../geometry/HeightModelInfo.js";import y from"../geometry/SpatialReference.js";import{t as h,p as f,c as v,a as g,w as S}from"./arcgisLayerUrl.js";import{i as w,u as I}from"./commonProperties2.js";import{f as x}from"./I3SIndexInfo.js";import b from"../portal/Portal.js";import j from"../portal/PortalItem.js";import{s as _}from"./saveUtils.js";const N=o.getLogger("esri.layers.mixins.SceneService"),R=o=>{let R=class extends o{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=s((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return y.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,i=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=i?new y(i):null}}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e)return c.fromJSON(e,r);const i=t.store,o=this._readSpatialReference(t);return null==o||null==i||null==i.extent||!Array.isArray(i.extent)||i.extent.some((e=>e<O))?null:new c({xmin:i.extent[0],ymin:i.extent[1],xmax:i.extent[2],ymax:i.extent[3],spatialReference:o})}readVersion(e,t){const r=t.store,i=null!=r.version?r.version.toString():"",o={major:Number.NaN,minor:Number.NaN,versionString:i},s=i.split(".");return s.length>=2&&(o.major=parseInt(s[0],10),o.minor=parseInt(s[1],10)),o}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return h(this.url,t.name);let o=t.name;if(!o&&this.url){const e=f(this.url);i(e)&&(o=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(o=r+" - "+o),v(o)}set url(e){const t=g({layer:this,url:e,nonStandardUrlAllowed:!1,logger:N});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,i){S(this,e,"layers",t,i)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=a(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=x(this.parsedUrl.path,this.rootNode,e,this.apiKey,N,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===(null==e?void 0:e.type)){var t,i;const o=e.rootIndex%e.pageSize,s=null==(t=e.rootPage)||null==(i=t.nodes)?void 0:i[o];if(null==s||null==s.obb||null==s.obb.center||null==s.obb.halfSize)throw new r("sceneservice:invalid-node-page","Invalid node page.");if(s.obb.center[0]<O||null==this.fullExtent||this.fullExtent.hasZ)return;const a=s.obb.halfSize,l=s.obb.center[2],n=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);this.fullExtent.zmin=l-n,this.fullExtent.zmax=l+n}else if("node"===(null==e?void 0:e.type)){var o;const t=null==(o=e.rootNode)?void 0:o.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<O)return;const r=t[2],i=t[3];this.fullExtent.zmin=r-i,this.fullExtent.zmax=r+i}}async _fetchService(e){if(null==this.url)throw new r("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const r=await t(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(r.data&&Array.isArray(r.data.layers)&&r.data.layers.length>0)return r.data.layers[0].id}async _fetchServiceLayer(e){const r=await t(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=r.data;this.read(i,{origin:"service",url:this.parsedUrl}),this.validateLayer(i)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const i=t.getTypeKeywords();for(const t of i)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const i={...E,...t};let o=j.from(e);o||(N.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new r("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),o.id&&(o=o.clone(),o.id=null);const s=o.portal||b.getDefault();await this._ensureLoadBeforeSave(),o.type=T,o.portal=s;const a={origin:"portal-item",url:null,messages:[],portal:s,portalItem:o,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},l={layers:[this.write(null,a)]};return await Promise.all(a.resources.pendingOperations),await this._validateAgainstJSONSchema(l,a,i),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,i,1),await s._signIn(),await s.user.addItem({item:o,folder:i&&i.folder,data:l}),await _(this.resourceReferences,a,null),this.portalItem=o,u(a),a.portalItem=o,o}async _save(e){const t={...E,...e};this.portalItem||(N.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new r("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==T&&(N.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+T),await Promise.reject(new r("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${T}"`))),await this._ensureLoadBeforeSave();const i={origin:"portal-item",url:this.portalItem.itemUrl&&a(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||b.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write(null,i)]};return await Promise.all(i.resources.pendingOperations),await this._validateAgainstJSONSchema(o,i,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:o}),await _(this.resourceReferences,i,null),u(i),this.portalItem}async _validateAgainstJSONSchema(e,t,i){let o=t.messages.filter((e=>"error"===e.type)).map((e=>new r(e.name,e.message,e.details)));if(i&&i.validationOptions.ignoreUnsupported&&(o=o.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),i.validationOptions.enabled||U){const t=(await import("./schemaValidator2.js")).validate(e,i.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(N.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===i.validationOptions.failPolicy){const e=t.map((e=>new r("sceneservice:schema-validation",e))).concat(o);throw new r("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(o.length>0)throw new r("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:o})}};return e([l(w)],R.prototype,"id",void 0),e([l({type:y})],R.prototype,"spatialReference",void 0),e([n("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],R.prototype,"readSpatialReference",null),e([l({type:c})],R.prototype,"fullExtent",void 0),e([n("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],R.prototype,"readFullExtent",null),e([l({readOnly:!0,type:m})],R.prototype,"heightModelInfo",void 0),e([l({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],R.prototype,"minScale",void 0),e([l({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],R.prototype,"maxScale",void 0),e([l({readOnly:!0})],R.prototype,"version",void 0),e([n("version",["store.version"])],R.prototype,"readVersion",null),e([l({type:String,json:{read:{source:"copyrightText"}}})],R.prototype,"copyright",void 0),e([l({type:String,json:{read:!1}})],R.prototype,"sublayerTitleMode",void 0),e([l({type:String})],R.prototype,"title",void 0),e([n("portal-item","title")],R.prototype,"readTitlePortalItem",null),e([n("service","title",["name"])],R.prototype,"readTitleService",null),e([l({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],R.prototype,"layerId",void 0),e([l(I)],R.prototype,"url",null),e([d("url")],R.prototype,"writeUrl",null),e([l()],R.prototype,"parsedUrl",null),e([l({readOnly:!0})],R.prototype,"store",void 0),e([l({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],R.prototype,"rootNode",void 0),R=e([p("esri.layers.mixins.SceneService")],R),R},O=-1e38,U=!1,T="Scene Service",E={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{R as S};
