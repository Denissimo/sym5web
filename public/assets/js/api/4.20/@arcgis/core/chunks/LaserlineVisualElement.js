/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{i as e,b as t,l as i,k as n}from"../core/lang.js";import{b as s,e as r,s as a,k as l,j as o,t as c,w as h,n as d,a as f,g as p,u}from"./mathUtils.js";import{c as g,e as m,b as _,g as b}from"./lineSegment.js";import{V as P}from"./VisualElement.js";import{a as v}from"./vec2f64.js";import{t as V}from"./vec4.js";import{a as x}from"./vec4f64.js";import{k as D,l as L,m as E,n as y,o as w}from"./frustum.js";import{c as C,r as M}from"./plane.js";import{w as S}from"./ray.js";import{c as A}from"./sphere.js";import{g as R}from"./glUtil.js";import{n as U}from"./InterleavedLayout.js";import{_ as q}from"./tslib.es6.js";import{t as j}from"./mat4.js";import{c as T}from"./mat4f64.js";import{z,g as I,S as O,p as B,a as W,b as F,P as H,R as N,D as k,au as G,av as X,d as J}from"./VertexColor.glsl.js";import{C as K}from"./CameraSpace.glsl.js";import{m as Q,a as Y,d as Z,V as $,B as ee}from"./VertexArrayObject.js";import{i as te}from"./Util.js";import{S as ie}from"./ColorMaterial.js";function ne(e,t){e.extensions.add("GL_OES_standard_derivatives"),e.fragment.include(z),e.include(K),e.fragment.uniforms.add("glowColor","vec3"),e.fragment.uniforms.add("glowWidth","float"),e.fragment.uniforms.add("glowFalloff","float"),e.fragment.uniforms.add("innerColor","vec3"),e.fragment.uniforms.add("innerWidth","float"),e.fragment.uniforms.add("depthMap","sampler2D"),e.fragment.uniforms.add("nearFar","vec2"),e.fragment.uniforms.add("frameColor","sampler2D"),t.contrastControlEnabled&&e.fragment.uniforms.add("globalAlphaContrastBoost","float"),e.fragment.code.add(I`vec4 blendPremultiplied(vec4 source, vec4 dest) {
float oneMinusSourceAlpha = 1.0 - source.a;
return vec4(
source.rgb + dest.rgb * oneMinusSourceAlpha,
source.a + dest.a * oneMinusSourceAlpha
);
}`),e.fragment.code.add(I`vec4 premultipliedColor(vec3 rgb, float alpha) {
return vec4(rgb * alpha, alpha);
}`),e.fragment.code.add(I`vec4 laserlineProfile(float dist) {
if (dist > glowWidth) {
return vec4(0.0);
}
float innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));
float glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);
return blendPremultiplied(
premultipliedColor(innerColor, innerAlpha),
premultipliedColor(glowColor, glowAlpha)
);
}`),e.fragment.code.add(I`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {
float depth = linearDepthFromTexture(depthMap, uv, nearFar);
if (-depth == nearFar[0]) {
return false;
}
pos = reconstructPosition(gl_FragCoord.xy, depth);
normal = normalize(cross(dFdx(pos), dFdy(pos)));
float ddepth = fwidth(depth);
depthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);
return true;
}`),t.contrastControlEnabled?e.fragment.code.add(I`float rgbToLuminance(vec3 color) {
return dot(vec3(0.2126, 0.7152, 0.0722), color);
}
vec4 laserlineOutput(vec4 color) {
float backgroundLuminance = rgbToLuminance(texture2D(frameColor, uv).rgb);
float alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);
return color * alpha;
}`):e.fragment.code.add(I`vec4 laserlineOutput(vec4 color) {
return color * globalAlpha;
}`)}var se=Object.freeze({__proto__:null,build:function(e){const t=new O;return t.include(ne,e),t.vertex.uniforms.add("uModelViewMatrix","mat4"),t.vertex.uniforms.add("uProjectionMatrix","mat4"),t.attributes.add("start","vec3"),t.attributes.add("end","vec3"),t.attributes.add("up","vec3"),t.attributes.add("extrude","vec2"),t.varyings.add("uv","vec2"),t.varyings.add("vViewStart","vec3"),t.varyings.add("vViewEnd","vec3"),t.varyings.add("vViewPlane","vec4"),t.vertex.uniforms.add("glowWidth","float"),t.vertex.uniforms.add("pixelToNDC","vec2"),t.vertex.code.add(I`void main() {
vec3 pos = mix(start, end, extrude.x);
vec4 viewPos = uModelViewMatrix * vec4(pos, 1);
vec4 projPos = uProjectionMatrix * viewPos;
vec2 ndcPos = projPos.xy / projPos.w;
vec3 viewUp = (uModelViewMatrix * vec4(extrude.y * up, 0)).xyz;
vec4 projPosUp = uProjectionMatrix * vec4(viewPos.xyz + viewUp, 1);
vec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);
vec2 lxy = abs(sign(projExtrudeDir) - ndcPos);
ndcPos += length(lxy) * projExtrudeDir;
vec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));
vec3 viewPlaneNormal = (uModelViewMatrix * vec4(worldPlaneNormal, 0)).xyz;
vViewStart = (uModelViewMatrix * vec4(start, 1)).xyz;
vViewEnd = (uModelViewMatrix * vec4(end, 1)).xyz;
vViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));
float xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;
ndcPos.x += xPaddingPixels * pixelToNDC.x;
uv = ndcPos * 0.5 + 0.5;
gl_Position = vec4(ndcPos, 0, 1);
}`),t.fragment.uniforms.add("globalAlpha","float"),t.fragment.uniforms.add("perScreenPixelRatio","float"),t.fragment.code.add(I`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {
vec3 origin = mix(start, end, 0.5);
vec3 basis = end - origin;
vec3 posAtOrigin = pos - origin;
float x = dot(normalize(basis), posAtOrigin);
float y = dot(plane.xyz, posAtOrigin);
float dx = max(abs(x) - length(basis), 0.0);
float dy = y;
float dist = length(vec2(dx, dy));
float width = fwidth(y);
float maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;
float pixelDist = dist / min(width, maxPixelDistance);
return abs(pixelDist);
}
void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
float distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);
vec4 color = laserlineProfile(distance);
float alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));
gl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);
}`),t}});class re extends F{initializeProgram(e){const t=re.shader.get(),i=this.configuration,n=t.build(i);return new H(e.rctx,n,re.attributeLocations)}bind(e,t,i){this.program.setUniform3fv("innerColor",e.innerColor),this.program.setUniform1f("innerWidth",e.innerWidth*i.pixelRatio),this.program.setUniform3fv("glowColor",e.glowColor),this.program.setUniform1f("glowWidth",e.glowWidth*i.pixelRatio),this.program.setUniform1f("glowFalloff",e.glowFalloff),this.program.setUniform1f("globalAlpha",e.globalAlpha),this.program.setUniform1f("perScreenPixelRatio",i.perScreenPixelRatio),this.program.setUniform2f("pixelToNDC",2/i.fullWidth,2/i.fullHeight),this.program.setUniformMatrix4fv("uProjectionMatrix",i.projectionMatrix),j(le,i.viewMatrix,t),this.program.setUniformMatrix4fv("uModelViewMatrix",le),this.configuration.contrastControlEnabled&&this.program.setUniform1f("globalAlphaContrastBoost",null!=e.globalAlphaContrastBoost?e.globalAlphaContrastBoost:1)}initializePipeline(){return Q({blending:Y(1,771),colorWrite:Z})}bindPipelineState(e){e.setPipelineState(this.pipeline)}}re.shader=new N(se,(()=>Promise.resolve().then((function(){return se})))),re.attributeLocations=new Map([["start",0],["end",1],["up",2],["extrude",3]]);class ae extends W{constructor(){super(...arguments),this.contrastControlEnabled=!1}}q([B()],ae.prototype,"contrastControlEnabled",void 0);const le=T();class oe{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=s(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=new Float64Array(3*e.length);let i=0;for(const n of e)t[i++]=n[0],t[i++]=n[1],t[i++]=n[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const e=this._buffers[0],t=3*Math.floor(e.length/3/2);r(this._origin,e[t+0],e[t+1],e[t+2])}else r(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(t){const i=this.ensureVAO(t);e(i)&&(t.bindVAO(i),t.drawArrays(4,0,this._count))}dispose(){e(this._vao)&&this._vao.dispose()}ensureVAO(e){return t(this._buffers)?null:(t(this._vao)&&(this._vao=this.createVAO(e,this._buffers)),this.ensureVertexData(this._vao,this._buffers),this._vao)}createVAO(e,t){const i=this.createDataBuffer(t);return this._dirty=!1,new $(e,re.attributeLocations,{data:R(de)},{data:ee.createVertex(e,35044,i)})}ensureVertexData(e,t){if(!this._dirty)return;const i=this.createDataBuffer(t);e.vertexBuffers.data.setData(i),this._dirty=!1}numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}createDataBuffer(e){const t=e.reduce(((e,t)=>e+this.numberOfRenderVertices(t)),0);this._count=t;const i=de.createBuffer(t),n=this._origin;let s=0,l=0;for(const t of e){for(let e=0;e<t.length;e+=3){const o=r(he,t[e+0],t[e+1],t[e+2]);0===e?l=this._renderCoordsHelper.getAltitude(o):this._renderCoordsHelper.setAltitude(o,l);const c=this._renderCoordsHelper.worldUpAtPosition(o,ce),h=s+2*e,d=a(he,o,n);if(e<t.length-3){i.up.setVec(h,c),i.up.setVec(h+3,c),i.up.setVec(h+5,c);for(let e=0;e<6;e++)i.start.setVec(h+e,d);i.extrude.setValues(h+0,0,-1),i.extrude.setValues(h+1,1,-1),i.extrude.setValues(h+2,1,1),i.extrude.setValues(h+3,0,-1),i.extrude.setValues(h+4,1,1),i.extrude.setValues(h+5,0,1)}if(e>0){i.up.setVec(h-2,c),i.up.setVec(h-4,c),i.up.setVec(h-5,c);for(let e=-6;e<0;e++)i.end.setVec(h+e,d)}}s+=this.numberOfRenderVertices(t)}return i.buffer}}const ce=s(),he=s(),de=U().vec3f("start").vec3f("end").vec3f("up").vec2f("extrude"),fe=l(6);var pe=Object.freeze({__proto__:null,defaultAngleCutoff:fe,build:function(e){const t=new O;return t.extensions.add("GL_OES_standard_derivatives"),t.include(ie),t.include(ne,e),t.fragment.uniforms.add("angleCutoff","vec2"),t.fragment.uniforms.add("globalAlpha","float"),e.heightManifoldEnabled&&t.fragment.uniforms.add("heightPlane","vec4"),e.pointDistanceEnabled&&t.fragment.uniforms.add("pointDistanceSphere","vec4"),e.lineVerticalPlaneEnabled&&t.fragment.uniforms.add("lineVerticalPlane","vec4").add("lineVerticalStart","vec3").add("lineVerticalEnd","vec3"),(e.heightManifoldEnabled||e.pointDistanceEnabled||e.lineVerticalPlaneEnabled)&&t.fragment.uniforms.add("maxPixelDistance","float"),e.intersectsLineEnabled&&t.fragment.uniforms.add("intersectsLineStart","vec3").add("intersectsLineEnd","vec3").add("intersectsLineDirection","vec3").add("intersectsLineRadius","float").add("perScreenPixelRatio","float"),(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)&&t.fragment.code.add(I`float planeDistancePixels(vec4 plane, vec3 pos) {
float dist = dot(plane.xyz, pos) + plane.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),e.pointDistanceEnabled&&t.fragment.code.add(I`float sphereDistancePixels(vec4 sphere, vec3 pos) {
float dist = distance(sphere.xyz, pos) - sphere.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),e.intersectsLineEnabled&&t.fragment.code.add(I`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {
float dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);
return abs(dist) - radius;
}`),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&t.fragment.code.add(I`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {
vec3 dir = end - start;
float t2 = dot(dir, pos - start);
float l2 = dot(dir, dir);
return t2 >= 0.0 && t2 <= l2;
}`),t.fragment.code.add(I`void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
vec4 color = vec4(0, 0, 0, 0);`),e.heightManifoldEnabled&&t.fragment.code.add(I`{
float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, heightPlane.xyz)));
vec4 heightManifoldColor = laserlineProfile(planeDistancePixels(heightPlane, pos));
color = max(color, heightManifoldColor * heightManifoldAlpha);
}`),e.pointDistanceEnabled&&t.fragment.code.add(I`{
float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);
vec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);
float pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));
color = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);
}`),e.lineVerticalPlaneEnabled&&t.fragment.code.add(I`{
if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {
float lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);
vec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);
float lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));
color = max(color, lineVerticalColor * lineVerticalAlpha);
}
}`),e.intersectsLineEnabled&&t.fragment.code.add(I`{
if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {
float intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);
vec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);
float intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));
color = max(color, intersectsLineColor * intersectsLineAlpha);
}
}`),t.fragment.code.add(I`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);
}`),t}});class ue extends F{initializeProgram(e){const t=ue.shader.get(),i=this.configuration,n=t.build(i);return new H(e.rctx,n,k)}bind(e,t){this.program.setUniform3fv("innerColor",e.innerColor),this.program.setUniform1f("innerWidth",e.innerWidth*t.pixelRatio),this.program.setUniform3fv("glowColor",e.glowColor),this.program.setUniform1f("glowWidth",e.glowWidth*t.pixelRatio),this.program.setUniform1f("glowFalloff",e.glowFalloff),this.program.setUniform1f("globalAlpha",e.globalAlpha),this.configuration.contrastControlEnabled&&this.program.setUniform1f("globalAlphaContrastBoost",null!=e.globalAlphaContrastBoost?e.globalAlphaContrastBoost:1);const i=null!=e.angleCutoff?e.angleCutoff:fe;this.program.setUniform2f("angleCutoff",Math.cos(i),Math.cos(Math.max(0,i-l(2)))),this.configuration.intersectsLineEnabled&&this.program.setUniform1f("perScreenPixelRatio",t.perScreenPixelRatio)}initializePipeline(){return Q({blending:Y(1,771),colorWrite:Z})}}ue.shader=new N(pe,(()=>Promise.resolve().then((function(){return pe}))));class ge extends W{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1,this.contrastControlEnabled=!1}}q([B()],ge.prototype,"heightManifoldEnabled",void 0),q([B()],ge.prototype,"pointDistanceEnabled",void 0),q([B()],ge.prototype,"lineVerticalPlaneEnabled",void 0),q([B()],ge.prototype,"intersectsLineEnabled",void 0),q([B()],ge.prototype,"contrastControlEnabled",void 0);const me=s(),_e=x(),be={glowColor:[1,.5,0],glowWidth:8,glowFalloff:8,innerColor:[1,1,1],innerWidth:1,globalAlpha:.75,angleCutoff:l(6),globalAlphaContrastBoost:2};function Pe(e,t,i,n){const s=me,r=_e;c(s,t,n),o(r,i),r[3]=0,V(r,r,n),M(s,r,e)}class ve{constructor(e,t={},i={contrastControlEnabled:!1}){this._renderCoordsHelper=e,this._config=i,this._technique=null,this._projInfo=x(),this._zScale=v(),this._heightManifoldEnabled=!1,this._heightManifoldTarget=s(),this._pointDistanceEnabled=!1,this._pointDistanceOrigin=s(),this._pointDistanceTarget=s(),this._lineVerticalPlaneEnabled=!1,this._lineVerticalPlaneSegment=g(),this._intersectsLineEnabled=!1,this._intersectsLineSegment=g(),this._intersectsLineRadius=3,this._intersectsLineInfinite=!1,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this.canRender=!0,this._tempNormal=s(),this._tempDir=s(),this._tempUp=s(),this._tempVec3A=s(),this._tempVec3B=s(),this._tempVec4=x(),this._tempPlane=C(),this._tempSphere=A(),this._params=G(t,be)}get renderSlots(){return[this._config.contrastControlEnabled?17:16]}get needsLinearDepth(){return!0}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._heightManifoldTarget}set heightManifoldTarget(e){o(this._heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._pointDistanceTarget}set pointDistanceTarget(e){o(this._pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._pointDistanceOrigin}set pointDistanceOrigin(e){o(this._pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){m(e,this._lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._intersectsLineSegment}set intersectsLineSegment(e){m(e,this._intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._intersectsLineRadius}set intersectsLineRadius(e){e!==this._intersectsLineRadius&&(this._intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(t){t!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=t,e(this._pathVerticalPlaneData)&&this._requestRender())}set pathVerticalPlaneVertices(e){t(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new oe(this._renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){t(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new oe(this._renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameterValues(e){X(this._params,e)&&this._requestRender()}initializeRenderContext(e){this._context=e;const t=e.renderContext.rctx;this._quadVAO=J(t),this._techniqueRepository=e.shaderTechniqueRep,this._techniqueConfig=new ge;const i=new ae;i.contrastControlEnabled=this._config.contrastControlEnabled,this._pathTechnique=this._techniqueRepository.acquire(re,i)}uninitializeRenderContext(){this._quadVAO=i(this._quadVAO),this._technique=n(this._technique),this._pathVerticalPlaneData=i(this._pathVerticalPlaneData),this._pathTechnique=n(this._pathTechnique)}render(e){const t=this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled,i=this.pathVerticalPlaneEnabled;if(!t&&!i)return!0;const n=e.camera;return te(n.projectionMatrix,n.fullWidth,n.fullHeight,this._projInfo,this._zScale),t&&this.renderUnified(e),i&&this.renderPath(e),!0}renderUnified(e){const t=e.rctx,i=this._selectTechnique(),n=i.program;t.useProgram(n),i.bindPipelineState(t),this._bindGlobalUniforms(e,n),this.bindHeightManifoldUniforms(e,n),this.bindPointDistanceUniforms(e,n),this.bindLineVerticalPlaneUniforms(e,n),this.bindIntersectsLineUniforms(e,n),i.bind(this._params,e.camera),t.bindVAO(this._quadVAO),t.drawArrays(5,0,4)}renderPath(e){if(t(this._pathVerticalPlaneData)||t(this._pathTechnique))return;const i=e.rctx,n=this._pathTechnique,s=n.program;i.useProgram(s),n.bindPipelineState(i),this._bindGlobalUniforms(e,s),n.bind(this._params,this._pathVerticalPlaneData.origin,e.camera),this._pathVerticalPlaneData.draw(e.rctx)}bindHeightManifoldUniforms(e,t){if(!this.heightManifoldEnabled)return;const i=this._tempVec3A,n=this._tempPlane;this._renderCoordsHelper.worldUpAtPosition(this._heightManifoldTarget,i),Pe(n,this._heightManifoldTarget,i,e.camera.viewMatrix),t.setUniform4fv("heightPlane",n)}bindPointDistanceUniforms(e,t){if(!this._pointDistanceEnabled)return;const i=e.camera,n=this._tempSphere;o(n,this._pointDistanceOrigin),c(n,n,i.viewMatrix),n[3]=h(this._pointDistanceOrigin,this._pointDistanceTarget),t.setUniform4f("pointDistanceSphere",n[0],n[1],n[2],n[3])}bindLineVerticalPlaneUniforms(e,t){if(!this._lineVerticalPlaneEnabled)return;const i=this._renderCoordsHelper,n=e.camera,s=this._tempPlane,r=this._tempVec3A,a=this._tempUp,l=this._tempDir,h=this._tempNormal;_(this._lineVerticalPlaneSegment,.5,r),i.worldUpAtPosition(r,a),d(l,this._lineVerticalPlaneSegment.vector),f(h,a,l),d(h,h),Pe(s,this._lineVerticalPlaneSegment.origin,h,n.viewMatrix),t.setUniform4fv("lineVerticalPlane",s);const u=this._tempVec3A;o(u,this._lineVerticalPlaneSegment.origin),i.setAltitude(u,0),c(u,u,n.viewMatrix),t.setUniform3fv("lineVerticalStart",u);const g=this._tempVec3B;p(g,this._lineVerticalPlaneSegment.origin,this._lineVerticalPlaneSegment.vector),i.setAltitude(g,0),c(g,g,n.viewMatrix),t.setUniform3fv("lineVerticalEnd",g)}bindIntersectsLineUniforms(e,t){if(!this._intersectsLineEnabled)return;const i=xe,n=De;if(this._intersectsLineInfinite){const t=e.camera;if(L(S(this._intersectsLineSegment.origin,this._intersectsLineSegment.vector),Ve),Ve.c0=-Number.MAX_VALUE,!E(t.frustum,Ve))return;y(Ve,i),w(Ve,n)}else o(i,this._intersectsLineSegment.origin),p(n,this._intersectsLineSegment.origin,this._intersectsLineSegment.vector);const s=this._tempVec3A;c(s,i,e.camera.viewMatrix),t.setUniform3fv("intersectsLineStart",s);const r=this._tempVec4;o(r,this._intersectsLineSegment.vector),this._tempVec4[3]=0,V(this._tempVec4,this._tempVec4,e.camera.viewMatrix),c(n,n,e.camera.viewMatrix),t.setUniform3fv("intersectsLineEnd",n),d(r,r),t.setUniform3f("intersectsLineDirection",r[0],r[1],r[2]),t.setUniform1f("intersectsLineRadius",this._intersectsLineRadius)}_bindGlobalUniforms(e,t){const i=e.camera;t.setUniform4fv("projInfo",this._projInfo),t.setUniform2fv("zScale",this._zScale),t.setUniform2f("nearFar",i.near,i.far),this._heightManifoldEnabled?t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._heightManifoldTarget)):this._pointDistanceEnabled?t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._pointDistanceTarget)):this._lineVerticalPlaneEnabled&&t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._lineVerticalPlaneSegment.origin)),t.bindTexture(e.offscreenRenderingHelper.linearDepthTexture,"depthMap"),t.bindTexture(e.offscreenRenderingHelper.mainColorTexture,"frameColor")}_requestRender(){this._context&&this._context.requestRender()}_selectTechnique(){return this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this._config.contrastControlEnabled,this._technique=this._techniqueRepository.releaseAndAcquire(ue,this._techniqueConfig,this._technique),this._technique}}const Ve=D(),xe=s(),De=s();class Le extends P{constructor(e){super(e.view),this._angleCutoff=fe,this._style={},this._heightManifoldTarget=s(),this._heightManifoldEnabled=!1,this._intersectsLine=g(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProps(e)}get testData(){return this.renderer}createResources(){this.ensureRenderer()}destroyResources(){this.disposeRenderer()}updateVisibility(){this.syncHeightManifold(),this.syncIntersectsLine(),this.syncPathVerticalPlane(),this.syncLineVerticalPlane(),this.syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this.syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this.syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(t){e(t)?(o(this._heightManifoldTarget,t),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this.syncRenderer(),this.syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(t(e))return void(this.intersectsLine=null);const i=this.view.renderCoordsHelper.worldUpAtPosition(e,Ee);this.intersectsLine=b(e,i),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(t){e(t)?(m(t,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this.syncIntersectsLine(),this.syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this.syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(t){this._lineVerticalPlaneSegment=e(t)?m(t):null,this.syncLineVerticalPlane(),this.syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this.syncPathVerticalPlane(),this.syncLineVerticalPlane(),this.syncPointDistance(),this.syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(t){this._pointDistanceLine=e(t)?{origin:u(t.origin),target:u(t.target)}:null,this.syncPointDistance(),this.syncRenderer()}syncRenderer(){this.attached&&(this._intersectsLineEnabled||this._heightManifoldEnabled||e(this._pointDistanceLine)||e(this._pathVerticalPlaneBuffers))?this.ensureRenderer():this.disposeRenderer()}ensureRenderer(){e(this.renderer)||(this.renderer=new ve(this.view.renderCoordsHelper,void 0,{contrastControlEnabled:!0}),this.syncStyle(),this.syncHeightManifold(),this.syncIntersectsLine(),this.syncIntersectsLineInfinite(),this.syncPathVerticalPlane(),this.syncLineVerticalPlane(),this.syncPointDistance(),this.syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this.renderer.renderSlots,this.renderer))}syncStyle(){t(this.renderer)||(this.renderer.setParameterValues(this._style),null!=this._style.intersectsLineRadius&&(this.renderer.intersectsLineRadius=this._style.intersectsLineRadius))}syncAngleCutoff(){t(this.renderer)||this.renderer.setParameterValues({angleCutoff:this._angleCutoff})}syncHeightManifold(){t(this.renderer)||(this.renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this.renderer.heightManifoldTarget=this._heightManifoldTarget))}syncIntersectsLine(){t(this.renderer)||(this.renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this.renderer.intersectsLineSegment=this._intersectsLine))}syncIntersectsLineInfinite(){t(this.renderer)||(this.renderer.intersectsLineInfinite=this._intersectsLineInfinite)}syncPathVerticalPlane(){t(this.renderer)||(this.renderer.pathVerticalPlaneEnabled=e(this._pathVerticalPlaneBuffers)&&this.visible,e(this._pathVerticalPlaneBuffers)&&(this.renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}syncLineVerticalPlane(){t(this.renderer)||(this.renderer.lineVerticalPlaneEnabled=e(this._lineVerticalPlaneSegment)&&this.visible,e(this._lineVerticalPlaneSegment)&&(this.renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}syncPointDistance(){t(this.renderer)||(this.renderer.pointDistanceEnabled=e(this._pointDistanceLine)&&this.visible,e(this._pointDistanceLine)&&(this.renderer.pointDistanceOrigin=this._pointDistanceLine.origin,this.renderer.pointDistanceTarget=this._pointDistanceLine.target))}disposeRenderer(){e(this.renderer)&&this.view._stage&&(this.view._stage.removeRenderPlugin(this.renderer),this.renderer=null)}}const Ee=s();export{Le as L};
