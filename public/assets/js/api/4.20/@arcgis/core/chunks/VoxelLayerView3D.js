/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Error.js";import{init as s}from"../core/watchUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{L as r}from"./Logger.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import a from"../request.js";import{X as o,n as l,w as h,e as d,f as c,d as u,g as _,b as p,c as g}from"./mathUtils.js";import{isAbortError as v,createAbortController as x}from"../core/promiseUtils.js";import{g as m}from"./assets.js";import{a as y}from"./Intersector.js";import{L as w}from"./LayerView3D.js";import f from"../views/layers/LayerView.js";import"./Message.js";import"./object.js";import"../config.js";import"./string.js";import"./metadata.js";import"./handleUtils.js";import"../kernel.js";import"../core/urlUtils.js";import"./mat4f64.js";import"./ray.js";import"./vectorStacks.js";import"../core/scheduling.js";import"./arrayUtils.js";import"./quatf64.js";import"./vec2f64.js";import"./vec4f64.js";import"./mat4.js";import"./vec4.js";import"./boundedPlane.js";import"./lineSegment.js";import"./plane.js";import"./sphere.js";import"./Object3D.js";import"./mathUtils2.js";import"./utils4.js";import"./uid.js";import"./Util.js";import"./vec2.js";import"./ArrayPool.js";import"./verticalOffsetUtils.js";import"./mat3.js";import"./quat.js";import"./vec3f32.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./jsonMap.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"./write.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"../geometry/SpatialReference.js";import"./writer.js";import"./Ellipsoid.js";import"./reader.js";import"./arcgisLayerUrl.js";import"./persistableUrlUtils.js";import"./Evented.js";import"../core/HandleOwner.js";import"../core/Handles.js";import"../core/Collection.js";import"./Identifiable.js";import"./Promise.js";function b(e){return m(`esri/libs/vxl/${e}`)}const j=r.getLogger(" esri.layers.VoxelWasmPerScene");class L{constructor(e){this._useDepthPass=!1,this._havePreparedWithAllLayers=!1,this._renderPluginContext=null,this._vxl=null,this._pluginIsActive=!1,this._moreToLoad=!1,this._viewportWidth=-1,this._viewportHeight=-1,this._newLayers=[],this._layers=new Map,this._renderPass=0,this._renderSlot=4,this._rctx=null,this._renderTargetToRestore=null,this._dbgFlags=new Set,this._dbgFlags.add(4),this._view=e,this.initialize()}get canRender(){return!!this._vxl&&"local"===this._view.viewingMode}dbg(e,t){this._dbgFlags.has(e)&&(4===e?j.error(t):j.warn(t))}removeRenderPlugin(){this._pluginIsActive&&this._view._stage&&(this.dbg(1,"--removeRenderPlugin--"),this._view._stage.removeRenderPlugin(this)),this._pluginIsActive=!1}initialize(){this.dbg(1,"--initialize--"),this._readyWatchHandle=s(this._view,"ready",(e=>{e&&"local"===this._view.viewingMode?(this.dbg(1,"view ready status changed to ready on a local view, calling addRenderPlugin"),this._view._stage.addRenderPlugin([this._renderSlot],this),this._pluginIsActive=!0):(this.dbg(1,"view ready status changed, not ready or not a local view!"),this.removeRenderPlugin())})),this._qualityWatchHandle=s(this._view,"qualityProfile",(e=>{this.dbg(3,"qualityProfile changed to "+e),this._vxl&&this._vxl.set_quality(this.toWasmQuality(e))}))}initializeRenderContext(e){this.dbg(1,"--initializeRenderContext--");const t=e.renderContext.rctx;"webgl2"===t.webglVersion?(this._renderPluginContext=e,this._rctx=e.renderContext.rctx,this.initializeWasm(t.gl)):this.dbg(4,"WebGL 1 context only!")}uninitializeRenderContext(){this._renderPluginContext=null,this._rctx=null,this.dbg(1,"--uninitializeRenderContext--")}restoreFramebuffer(){if(!this._renderTargetToRestore)return;const e=this._renderTargetToRestore.fbo;if(!!!this._rctx)return void this.dbg(4,"no context in restoreFramebuffer!");this._rctx.bindFramebuffer(e,!0);const t=this._renderTargetToRestore.viewport;this._rctx.setViewport(t.x,t.y,t.width,t.height)}bindPreviousDepthToSlot(e,t){const s=!!this._rctx,i=!!this._renderTargetToRestore;if(!s||!i)return 0;const r=this._renderTargetToRestore.fbo.depthStencilTexture;return r?(0===t?this._rctx.bindTexture(null,e,!0):this._rctx.bindTexture(r,e,!0),1):(this.dbg(4,"no depth/stencil texture exists!"),0)}setBlendState(e,t,s,i){this._rctx?(this._rctx.setBlendingEnabled(1===e),this._rctx.setBlendFunction(t,s),this._rctx.setBlendEquation(i)):this.dbg(4,"setBlendState callback has no rendering context!")}setFrontFace(e){this._rctx?this._rctx.setFrontFace(e):this.dbg(4,"setFrontFace callback has no rendering context!")}setDepthStencilStateFunction(e,t,s){this._rctx?(this._rctx.setDepthFunction(s),this._rctx.setDepthTestEnabled(1===e),this._rctx.setDepthWriteEnabled(1===t),this._rctx.setStencilTestEnabled(!1),this._rctx.setStencilFunction(519,0,255),this._rctx.setStencilOpSeparate(1028,7680,7682,7680),this._rctx.setStencilOpSeparate(1029,7680,7683,7680)):this.dbg(4,"setDepthStencilStateFunction callback has no rendering context!")}setRasterizerState(e){if(this._rctx)switch(e){case 1:this._rctx.setFaceCullingEnabled(!1);break;case 3:this._rctx.setCullFace(1029),this._rctx.setFaceCullingEnabled(!0);break;case 2:this._rctx.setCullFace(1028),this._rctx.setFaceCullingEnabled(!0)}else this.dbg(4,"setRasterizerState callback has no rendering context!")}setViewport(e,t,s,i){this._rctx?this._rctx.setViewport(e,t,s,i):this.dbg(4,"setViewport callback has no rendering context!")}syncRequestsResponses(){this._layers.forEach(((e,t)=>{const s=[];e.responses.forEach(((e,i)=>{s.push(i),this.dbg(2,"responding for requestID:"+i+" size:"+e.size),this._vxl.respond(t,i,e)}));const i=e.responses;for(const e of s)i.delete(e);const r=this._vxl.get_new_requests(t),n=e.abortController.signal;for(const t in r){e.outstandingRequestCount+=1,1===e.outstandingRequestCount&&e.layerView.updatingFlagChanged();const s=r[t],o={responseType:"array-buffer",signal:n};this.dbg(2,"making requestID:"+t+" url:"+s.url),a(s.url,o).then((r=>{e.outstandingRequestCount-=1,0===e.outstandingRequestCount&&e.layerView.updatingFlagChanged(),this.dbg(2,"have response for requestID:"+t);let n=0;if(r.data.byteLength>0){n=this._vxl._malloc(r.data.byteLength);const e=new Uint8Array(this._vxl.HEAPU8.buffer,n,r.data.byteLength),t=new Uint8Array(r.data);for(let s=0;s<r.data.byteLength;++s)e[s]=t[s]}i.set(+t,{type:s.type,ptr:n,size:r.data.byteLength,success:!0})})).catch((r=>{e.outstandingRequestCount-=1,0===e.outstandingRequestCount&&e.layerView.updatingFlagChanged(),v(r)||(this.dbg(4,"requestID:"+t+" failed"),i.set(+t,{type:s.type,ptr:0,size:0,success:!1}))}))}}))}updateWasmCamera(e){this._vxl.set_projection_matrix.apply(this._vxl,e.projectionMatrix),this._vxl.set_view_matrix.apply(this._vxl,e.viewMatrix),this._vxl.set_near_far(e.near,e.far)}isUpdating(e){return!(this._vxl||!this._vxlPromise)||!!this._layers.has(e)&&this._layers.get(e).outstandingRequestCount>0}setEnabled(e,t){this._layers.forEach(((s,i)=>{s.layerView===e&&(this._vxl.set_enabled(i,t?1:0),this._renderPluginContext.requestRender())}))}addVoxelLayer(e){if(!this._vxl){const t={layerView:e,resolveCallback:"",rejectCallback:""},s=new Promise(((e,s)=>{t.resolveCallback=e,t.rejectCallback=s}));return this._newLayers.push(t),s}const t=this._addVoxelLayer(e);return t<0?Promise.reject(-1):Promise.resolve(t)}removeVoxelLayer(e){if(!this._vxl){const t=this._newLayers.findIndex((t=>e===t.layerView));t>=0&&(this._newLayers[t].resolveCallback(-1),this._newLayers.splice(t,1));const s=this._newLayers.length;return 0===s&&(this.dbg(1," no voxel layers left after removing a layer, removing RenderPlugin and destroying"),this.destroy()),s}let t=-1;this._layers.forEach(((s,i)=>{s.layerView===e&&(t=i,s.abortController.abort(),this._vxl.remove_layer(t))})),t>=0&&this._layers.delete(t);const s=this._layers.size;return 0===s&&(this.dbg(1," no voxel layers left after removing a layer, removing RenderPlugin and destroying"),this.destroy()),s}_addVoxelLayer(e){const t=e.layer;let s=-1;const i=t.layerData;if(i&&i.data.byteLength>0){const e=this._vxl._malloc(i.data.byteLength),r=new Uint8Array(this._vxl.HEAPU8.buffer,e,i.data.byteLength),n=new Uint8Array(i.data);for(let e=0;e<i.data.byteLength;++e)r[e]=n[e];const a=32662===this._view.spatialReference.wkid&&t.spatialReference.isWGS84?111319.49079327357:1;s=this._vxl.add_layer(t.serviceRoot,e,i.data.byteLength,a,a),this._vxl._free(e)}if(s>=0){const t=x();return this._layers.set(s,{layerView:e,responses:new Map,outstandingRequestCount:0,abortController:t}),s}return-1}prepareRender(e){if(!this._vxl)return;const t=e.viewForward,s=e.eye;this._vxl.update_camera_pos_and_direction(s[0],s[1],s[2],t[0],t[1],t[2]);const i=this._vxl.cull();this.dbg(2,"missingResourceCount="+i),this._moreToLoad=i>0,this._havePreparedWithAllLayers=0===this._newLayers.length}render(e){if(!this._vxl)return!1;for(const e of this._newLayers){const t=this._addVoxelLayer(e.layerView);-1===t?e.rejectCallback(-1):e.resolveCallback(t)}if(this._newLayers=[],e.pass!==this._renderPass)return!1;if(e.slot!==this._renderSlot)return!1;if(0===this._layers.size)return this.dbg(4,"No voxel layers but RenderPlugin instance is being asked to render!"),!0;this._renderTargetToRestore={fbo:this._rctx.getBoundFramebufferObject(),viewport:this._rctx.getViewport()},this.syncRequestsResponses(),this._vxl.begin_frame();const t=this._renderTargetToRestore.viewport;return t.width===this._viewportWidth&&t.height===this._viewportHeight||(this._viewportWidth=t.width,this._viewportHeight=t.height,this._vxl.set_viewport(t.width,t.height)),0===t.x&&0===t.y||this.dbg(4,"Unsupported viewport parameters detected!"),this.updateWasmCamera(e.camera),this._vxl.draw(),this._renderTargetToRestore.fbo=null,e.rctx.externalTextureUnitUpdate(this._vxl.get_texture_units_bound_in_frame(),this._vxl.get_active_texture_unit()),e.rctx.externalVertexArrayObjectUpdate(),e.rctx.externalVertexBufferUpdate(),(this._moreToLoad||!this._havePreparedWithAllLayers&&this._layers.size>0)&&this._renderPluginContext.requestRender(),!0}queryDepthRange(e){this.dbg(1,"--queryDepthRange--");const t=e.viewForward,s=e.eye;this._vxl.update_camera_pos_and_direction(s[0],s[1],s[2],t[0],t[1],t[2]),this._vxl.cull();const i={near:5,far:1e4};return i.near=this._vxl.get_near(),i.far=this._vxl.get_far(),i}destroy(){this.dbg(1,"--destroy--"),this.removeRenderPlugin(),this._readyWatchHandle&&(this._readyWatchHandle.remove(),this._readyWatchHandle=null),this._qualityWatchHandle&&(this._qualityWatchHandle.remove(),this._qualityWatchHandle=null),this._vxl&&(this._vxl.uninitialize_voxel_wasm(),this._vxl=null)}initializeWasm(e){return this._vxl?Promise.resolve():(this._vxlPromise||(this._vxlPromise=function(e){return new Promise((t=>import("./vxlLayer.js").then((function(e){return e.v})).then((({default:s})=>{const i=s({locateFile:b,preinitializedWebGLContext:e,onRuntimeInitialized:()=>t(i)})})))).catch((e=>Promise.reject(e)))}(e).then((e=>{if(this._vxl=e,this._vxlPromise=null,this._newLayers.length<=0)return this.dbg(1," no voxel layers left after WASM downloaded, removing RenderPlugin and destroying"),void this.destroy();const t=this._vxl.addFunction(this.restoreFramebuffer.bind(this),"v"),s=this._vxl.addFunction(this.setBlendState.bind(this),"viiii"),i=this._vxl.addFunction(this.setFrontFace.bind(this),"vi"),r=this._vxl.addFunction(this.setRasterizerState.bind(this),"vi"),n=this._vxl.addFunction(this.setDepthStencilStateFunction.bind(this),"viii"),a=this._vxl.addFunction(this.setViewport.bind(this),"viiii"),o=this._vxl.addFunction(this.bindPreviousDepthToSlot.bind(this),"iii");this._vxl.initialize_voxel_wasm(t,s,i,r,n,a,o),this._vxl.set_quality(this.toWasmQuality(this._view.qualityProfile)),this._renderPluginContext&&this._renderPluginContext.requestRender()})).catch((()=>{for(const e of this._newLayers)e.rejectCallback(-2);this.dbg(4," WASM failed to download, removing RenderPlugin and destroying"),this.destroy()}))),this._vxlPromise)}get type(){return"external"}get isGround(){return!1}get slicePlane(){return!1}get intersectionHandlerId(){return"unj"}intersect(e,t,s,i,r){if(!this._vxl)return;if(!this._rctx)return;if(0===this._layers.size)return;if(r[0]<0||r[0]>e.camera.viewport[2]||r[1]<0||r[1]>e.camera.viewport[3])return;this._renderTargetToRestore={fbo:this._rctx.getBoundFramebufferObject(),viewport:this._rctx.getViewport()};const n=e.camera.viewForward,a=e.camera.eye;this._vxl.update_camera_pos_and_direction(a[0],a[1],a[2],n[0],n[1],n[2]),this.updateWasmCamera(e.camera),this._vxl.begin_frame(),this._useDepthPass?this.intersectDepth(e,t,s,i,r):this.intersectObject(e,t,s,i,r),this._renderTargetToRestore.fbo=null,this._rctx.externalTextureUnitUpdate(this._vxl.get_texture_units_bound_in_frame(),this._vxl.get_active_texture_unit()),this._rctx.externalVertexArrayObjectUpdate(),this._rctx.externalVertexBufferUpdate()}intersectObject(e,t,s,i,r){const n=this._vxl.pick_object(r[0],r[1]);if(n.success){const r=p();o(r,i,s),l(r,r);const a=h(s,i),v=p();d(v,n.worldX,n.worldY,n.worldZ);const x=p();o(x,v,s);const m=p();c(m,r,u(x,r));const w=p();_(w,s,m);const f=h(s,w),b=g(f/a,0,1),j=e=>{e.intersector="Voxel",e.dist=b,e.target={type:"external",metadata:{layerUid:this.intersectionHandlerId}}},L=e.results.min;(null==L.dist||b<L.dist)&&(null==t||t(s,i,b))&&j(L);const R=e.results.max;if(0!==e.options.store&&(null==R.dist||b>R.dist)&&(null==t||t(s,i,b))&&j(R),2===e.options.store){const t=new y(e.ray);j(t),e.results.all.push(t)}}}intersectDepth(e,t,s,i,r){const n=this._vxl.pick_depth(r[0],r[1]);if(n.success){const r=p();o(r,i,s),l(r,r);const a=h(s,i),v=p();d(v,n.worldX,n.worldY,n.worldZ);const x=p();o(x,v,s);const m=p();c(m,r,u(x,r));const w=p();_(w,s,m);const f=h(s,w),b=g(f/a,0,1),j=e=>{e.intersector="Voxel",e.dist=b,e.target={type:"external",metadata:{layerUid:this.intersectionHandlerId}}},L=e.results.min;(null==L.dist||b<L.dist)&&(null==t||t(s,i,b))&&j(L);const R=e.results.max;if(0!==e.options.store&&(null==R.dist||b>R.dist)&&(null==t||t(s,i,b))&&j(R),2===e.options.store){const t=new y(e.ray);j(t),e.results.all.push(t)}}}toWasmQuality(e){switch(e){case"low":return 0;case"medium":return 1;case"high":return 2}}}class R{constructor(){this.view2WASM=new Map}static getInstance(){return R.instance||(R.instance=new R),R.instance}isUpdating(e,t){return!!this.view2WASM.has(e)&&this.view2WASM.get(e).isUpdating(t)}addLayer(e,t){return this.view2WASM.has(e)||this.view2WASM.set(e,new L(e)),this.view2WASM.get(e).addVoxelLayer(t)}removeLayer(e,t){if(this.view2WASM.has(e)){this.view2WASM.get(e).removeVoxelLayer(t)<1&&this.view2WASM.delete(e)}}setLayerEnabled(e,t,s){if(this.view2WASM.has(e)){this.view2WASM.get(e).setEnabled(t,s)}}}let P=class extends(w(f)){constructor(){super(...arguments),this.type="voxel-3d",this._wasmLayerId=-1}initialize(){if("local"!==this.view.viewingMode)throw new t("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if("webgl"===this.view.renderContext)throw new t("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});const e=R.getInstance(),i=e.addLayer(this.view,this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=s(this,"suspended",(e=>{R.getInstance().setLayerEnabled(this.view,this,!e)}))})).catch((s=>{if(e.removeLayer(this.view,this),this._wasmLayerId=-1,-1===s)throw new t("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===s)throw new t("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(i)}destroy(){R.getInstance().removeLayer(this.view,this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){return!(this._wasmLayerId<0)&&R.getInstance().isUpdating(this.view,this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}};e([i()],P.prototype,"layer",void 0),e([i({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],P.prototype,"baseUrl",void 0),P=e([n("esri.views.3d.layers.VoxelLayerView3D")],P);var C=P;export default C;
