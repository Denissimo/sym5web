/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{E as t}from"./Evented.js";import s from"../core/Handles.js";import{b as i,i as r,u as o}from"../core/lang.js";import{createTask as n,createAbortController as a,throwIfAbortError as l,createDeferred as u,throwIfAborted as c,whenOrAbort as h}from"../core/promiseUtils.js";import{whenNotOnce as p}from"../core/watchUtils.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{L as f}from"./Logger.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import g from"../geometry/SpatialReference.js";import{B as y,F as j}from"./FeatureStore.js";import{Q as F}from"./QueryEngine.js";import v from"../layers/support/TileInfo.js";import S from"../layers/support/TimeInfo.js";import b from"../rest/support/Query.js";import{e as I}from"./arrayUtils.js";import w from"../core/Accessor.js";import{HandleOwner as T,W as C}from"../core/HandleOwner.js";import{m as P}from"./handleUtils.js";import x from"../geometry/Extent.js";import{a as E,p as O,d as z,t as A,x as R}from"./aaBoundingRect.js";import{l as M,m as B,g as q}from"./featureConversionUtils.js";import{O as _}from"./pbfQueryUtils.js";import{a as U,d as H,c as k,e as L}from"./query.js";import{a as N}from"./asyncUtils.js";import{e as Q,a as D}from"./byteSizeEstimations.js";import"../core/Collection.js";import"./ArrayPool.js";import"../core/scheduling.js";import"../core/Error.js";import"./Message.js";import"./object.js";import"../config.js";import"./string.js";import"./metadata.js";import"./deprecate.js";import"./JSONSupport.js";import"./write.js";import"./writer.js";import"./aaBoundingBox.js";import"./PooledRBush.js";import"./quickselect.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"./OptimizedFeature.js";import"./MemCache.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./Ellipsoid.js";import"./extentUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"../geometry/Polyline.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"../geometry.js";import"./typeUtils.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./projectionSupport.js";import"../geometry/projection.js";import"./mathUtils.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./json.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"./utils6.js";import"../layers/support/fieldUtils.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"./enumeration.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./arcadeOnDemand.js";import"./spatialQuerySupport.js";import"../layers/support/FieldsIndex.js";import"./PromiseQueue.js";import"./utils7.js";import"./basemapUtils.js";import"../Basemap.js";import"./collectionUtils.js";import"./Loadable.js";import"./Promise.js";import"./loadAll.js";import"../portal/Portal.js";import"../intl.js";import"./number.js";import"./locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./writeUtils.js";import"../layers/support/LOD.js";import"../TimeExtent.js";import"./timeUtils.js";import"../TimeInterval.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./fieldType.js";import"../rest/support/StatisticDefinition.js";import"./OptimizedFeatureSet.js";import"./pbf.js";import"./queryZScale.js";import"./zscale.js";let J=class extends w{constructor(){super(...arguments),this.updating=!1,this.pending=[]}push(e,t){this.pending.push({promise:e,callback:t}),1===this.pending.length&&this.process()}process(){if(!this.pending.length)return void(this.updating=!1);this.updating=!0;const e=this.pending[0];e.promise.then((t=>e.callback(t))).catch((()=>{})).then((()=>{this.pending.shift(),this.process()}))}};e([d()],J.prototype,"updating",void 0),J=e([m("esri.core.AsyncSequence")],J);class G{constructor(e,t){this.data=e,this.resolution=t,this.state={type:0},this.alive=!0}process(e){switch(this.state.type){case 0:return this.state=this.gotoFetchCount(this.state,e),this.state.task.promise.then(e.resume,e.resume);case 1:break;case 2:return this.state=this.gotoFetchFeatures(this.state,e),this.state.task.promise.then(e.resume,e.resume);case 3:break;case 4:this.state=this.goToDone(this.state,e)}return null}get debugInfo(){return{data:this.data,featureCount:this.featureCount,state:this.stateToString}}get featureCount(){switch(this.state.type){case 0:case 1:return 0;case 2:return this.state.featureCount;case 3:return this.state.previous.featureCount;case 4:return this.state.features.length;case 5:return this.state.previous.features.length}}get stateToString(){switch(this.state.type){case 0:return"created";case 1:return"fetch-count";case 2:return"fetched-count";case 3:return"fetch-features";case 4:return"fetched-features";case 5:return"done"}}gotoFetchCount(e,t){return{type:1,previous:e,task:n((async e=>{const s=await N(t.fetchCount(this,e));1===this.state.type&&(this.state=this.gotoFetchedCount(this.state,s.ok?s.value:1/0))}))}}gotoFetchedCount(e,t){return{type:2,featureCount:t,previous:e}}gotoFetchFeatures(e,t){return{type:3,previous:e,task:n((async s=>{const i=await N(t.fetchFeatures(this,e.featureCount,s));3===this.state.type&&(this.state=this.gotoFetchedFeatures(this.state,i.ok?i.value:[]))}))}}gotoFetchedFeatures(e,t){return{type:4,previous:e,features:t}}goToDone(e,t){return t.finish(this,e.features),{type:5,previous:e}}reset(){const e=this.state;switch(this.state={type:0},e.type){case 0:case 2:case 4:case 5:break;case 1:case 3:e.task.abort()}}intersects(e){return!(!i(e)&&this.data.extent)||(O(e,V),z(this.data.extent,V))}}const V=E(),Z=f.getLogger("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiledFetcher");let $=class extends T{constructor(e){super(e),this.tilesOfInterest=[],this.availability=0,this.pendingTiles=new Map,this.pendingEdits=new J,this.pendingEditsAbortController=a()}get minimumVerticesPerFeature(){var e;switch(null==(e=this.store)?void 0:e.featureStore.geometryType){case"esriGeometryPoint":case"esriGeometryMultipoint":return 1;case"esriGeometryPolygon":return 4;case"esriGeometryPolyline":return 2}}set filter(e){const t=this._get("filter"),s=this.filterProperties(e);JSON.stringify(t)!==JSON.stringify(s)&&this._set("filter",s)}set customParameters(e){const t=this._get("customParameters");JSON.stringify(t)!==JSON.stringify(e)&&this._set("customParameters",e)}get configuration(){return{filter:this.filter,customParameters:this.customParameters,tileInfo:this.tileInfo,tileSize:this.tileSize}}set tileInfo(e){const t=this._get("tileInfo");t!==e&&(r(e)&&r(t)&&JSON.stringify(e)===JSON.stringify(t)||(this._set("tileInfo",e),this.store.tileInfo=e))}set tileSize(e){this._get("tileSize")!==e&&this._set("tileSize",e)}get updating(){return this.updatingHandles.updating||this.pendingEdits.updating}initialize(){this.initializeFetchExtent(),this.updatingHandles.add(this,"configuration",(()=>this.refresh())),this.updatingHandles.add(this,"tilesOfInterest",((e,t)=>{I(e,t,(({id:e},{id:t})=>e===t))||this.process()}),1)}destroy(){this.pendingTiles.forEach((e=>this.deletePendingTile(e))),this.pendingTiles.clear(),this.store.destroy(),this.tilesOfInterest.length=0,this.pendingEditsAbortController.abort(),this.pendingEditsAbortController=null}refresh(){this.store.refresh(),this.pendingTiles.forEach((e=>this.deletePendingTile(e))),this.process()}applyEdits(e){this.pendingEdits.push(e,(async e=>{if(0===e.addedFeatures.length&&0===e.updatedFeatures.length&&0===e.deletedFeatures.length)return;for(const[,e]of this.pendingTiles)e.reset();const t={...e,deletedFeatures:e.deletedFeatures.map((({objectId:e,globalId:t})=>e&&-1!==e?e:this.lookupObjectIdByGlobalId(t)))};await this.updatingHandles.addPromise(this.store.processEdits(t,((e,t)=>this.queryFeaturesById(e,t)),this.pendingEditsAbortController.signal)),this.processPendingTiles()}))}initializeFetchExtent(){if(!this.capabilities.query.supportsExtent)return;const e=n((async e=>{try{var t;const s=await U(this.url,new b({where:"1=1",outSpatialReference:this.spatialReference,cacheHint:!!this.capabilities.query.supportsCacheHint||void 0}),{query:this.configuration.customParameters,signal:e});this.store.extent=x.fromJSON(null==(t=s.data)?void 0:t.extent)}catch(e){l(e),Z.warn("Failed to fetch data extent",e)}}));this.updatingHandles.addPromise(e.promise.then((()=>this.process()))),this.handles.add(P((()=>e.abort())))}get debugInfo(){return{numberOfFeatures:this.store.featureStore.numFeatures,tilesOfInterest:this.tilesOfInterest,pendingTiles:Array.from(this.pendingTiles.values()).map((e=>e.debugInfo)),storedTiles:this.store.debugInfo}}process(){this.markTilesNotAlive(),this.createPendingTiles(),this.deletePendingTiles(),this.processPendingTiles()}markTilesNotAlive(){for(const[,e]of this.pendingTiles)e.alive=!1}createPendingTiles(){const e=this.collectMissingTilesInfo();if(this.setAvailability(i(e)?1:e.coveredArea/e.fullArea),!i(e))for(const{data:t,resolution:s}of e.missingTiles){const e=this.pendingTiles.get(t.id);e?(e.resolution=s,e.alive=!0):this.createPendingTile(t,s)}}collectMissingTilesInfo(){let e=null;for(let t=this.tilesOfInterest.length-1;t>=0;t--){const s=this.tilesOfInterest[t],r=this.store.process(s,((e,t)=>this.verifyTileComplexity(e,t)));i(e)?e=r:e.prepend(r)}return e}deletePendingTiles(){for(const[,e]of this.pendingTiles)e.alive||this.deletePendingTile(e)}processPendingTiles(){const e={fetchCount:(e,t)=>this.fetchCount(e,t),fetchFeatures:(e,t,s)=>this.fetchFeatures(e,t,s),finish:(e,t)=>this.finishPendingTile(e,t),resume:()=>this.processPendingTiles()};if(this.ensureFetchAllCounts(e))for(const[,t]of this.pendingTiles)this.verifyTileComplexity(this.store.getFeatureCount(t.data),t.resolution)&&this.updatingHandles.addPromise(t.process(e))}verifyTileComplexity(e,t){return this.verifyVertexComplexity(e)&&this.verifyFeatureDensity(e,t)}verifyVertexComplexity(e){return e*this.minimumVerticesPerFeature<K}verifyFeatureDensity(e,t){if(i(this.tileInfo))return!1;const s=this.tileSize*t;return e*(Y/(s*s))<ee}ensureFetchAllCounts(e){let t=!0;for(const[,s]of this.pendingTiles)s.state.type<2&&this.updatingHandles.addPromise(s.process(e)),s.state.type<=1&&(t=!1);return t}finishPendingTile(e,t){this.store.add(e.data,t),this.deletePendingTile(e),this.updateAvailability()}updateAvailability(){const e=this.collectMissingTilesInfo();this.setAvailability(i(e)?1:e.coveredArea/e.fullArea)}setAvailability(e){this._set("availability",e)}createPendingTile(e,t){const s=new G(e,t);return this.pendingTiles.set(e.id,s),s}deletePendingTile(e){e.reset(),this.pendingTiles.delete(e.data.id)}async fetchCount(e,t){return this.store.fetchCount(e.data,this.url,this.createCountQuery(e),{query:this.customParameters,timeout:X,signal:t})}async fetchFeatures(e,t,s){let i,r=0,n=0,a=t;for(;;){const l=this.createFeaturesQuery(e),u=this.setPagingParameters(l,r,a),{features:c,exceededTransferLimit:h}=await this.queryFeatures(l,s);if(u&&(r+=o(l.num)),n+=c.length,i=i?i.concat(c):c,a=t-n,!u||!h||a<=0)return i}}filterProperties(e){return i(e)?{where:"1=1",gdbVersion:void 0,timeExtent:void 0}:{where:e.where||"1=1",timeExtent:e.timeExtent,gdbVersion:e.gdbVersion}}lookupObjectIdByGlobalId(e){const t=this.globalIdField,s=this.objectIdField;if(i(t))throw new Error("Expected globalIdField to be defined");let r=null;if(this.store.featureStore.forEach((i=>{var o;e===i.attributes[t]&&(r=null!=(o=i.objectId)?o:i.attributes[s])})),i(r))throw new Error(`Expected to find a feature with globalId ${e}`);return r}queryFeaturesById(e,t){const s=this.createFeaturesQuery(null);return s.objectIds=e,this.queryFeatures(s,t)}queryFeatures(e,t){return this.capabilities.query.supportsFormatPBF?this.queryFeaturesPBF(e,t):this.queryFeaturesJSON(e,t)}async queryFeaturesPBF(e,t){const{sourceSpatialReference:s}=this,{data:i}=await H(this.url,e,new _({sourceSpatialReference:s}),{query:this.configuration.customParameters,timeout:X,signal:t});return M(i)}async queryFeaturesJSON(e,t){const{sourceSpatialReference:s}=this,{data:i}=await k(this.url,e,s,{query:this.configuration.customParameters,timeout:X,signal:t});return B(i,this.objectIdField)}createCountQuery(e){const t=this.createBaseQuery(e);return this.capabilities.query.supportsCacheHint&&(t.cacheHint=!0),t}createFeaturesQuery(e){const t=this.createBaseQuery(e);return t.outFields=this.globalIdField?[this.globalIdField,this.objectIdField]:[this.objectIdField],t.returnGeometry=!0,r(e)&&(this.capabilities.query.supportsResultType?t.resultType="tile":this.capabilities.query.supportsCacheHint&&(t.cacheHint=!0)),t}createBaseQuery(e){const t=new b({returnZ:!1,returnM:!1,geometry:r(this.tileInfo)&&r(e)?A(e.data.extent,this.tileInfo.spatialReference):void 0}),s=this.configuration.filter;return r(s)&&(t.where=s.where,t.gdbVersion=s.gdbVersion,t.timeExtent=s.timeExtent),t.outSpatialReference=this.spatialReference,t}setPagingParameters(e,t,s){if(!this.capabilities.query.supportsPagination)return!1;const{supportsMaxRecordCountFactor:i,supportsCacheHint:r,tileMaxRecordCount:o,maxRecordCount:n,supportsResultType:a}=this.capabilities.query,l=i?b.MAX_MAX_RECORD_COUNT_FACTOR:1,u=l*((a||r)&&o?o:n||W);return e.start=t,i?(e.maxRecordCountFactor=Math.min(l,Math.ceil(s/u)),e.num=Math.min(s,e.maxRecordCountFactor*u)):e.num=Math.min(s,u),!0}};e([d({constructOnly:!0})],$.prototype,"url",void 0),e([d({constructOnly:!0})],$.prototype,"objectIdField",void 0),e([d({constructOnly:!0})],$.prototype,"globalIdField",void 0),e([d({constructOnly:!0})],$.prototype,"capabilities",void 0),e([d({constructOnly:!0})],$.prototype,"sourceSpatialReference",void 0),e([d({constructOnly:!0})],$.prototype,"spatialReference",void 0),e([d({constructOnly:!0})],$.prototype,"store",void 0),e([d({readOnly:!0})],$.prototype,"minimumVerticesPerFeature",null),e([d()],$.prototype,"filter",null),e([d()],$.prototype,"customParameters",null),e([d({readOnly:!0})],$.prototype,"configuration",null),e([d()],$.prototype,"tileInfo",null),e([d()],$.prototype,"tileSize",null),e([d()],$.prototype,"tilesOfInterest",void 0),e([d({readOnly:!0})],$.prototype,"updating",null),e([d({readOnly:!0})],$.prototype,"availability",void 0),$=e([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiledFetcher")],$);const W=2e3,X=6e5,K=1e6,Y=25,ee=1;class te{constructor(){this._store=new Map,this._byteSize=0}set(e,t){this.delete(e),this._store.set(e,t),this._byteSize+=t.byteSize}delete(e){const t=this._store.get(e);return!!this._store.delete(e)&&(this._byteSize-=t.byteSize,!0)}get(e){return this.used(e),this._store.get(e)}has(e){return this.used(e),this._store.has(e)}clear(){this._store.clear()}applyByteSizeLimit(e,t){for(const[s,i]of this._store){if(this._byteSize<=e)break;this.delete(s),t(i)}}values(){return this._store.values()}[Symbol.iterator](){return this._store[Symbol.iterator]()}used(e){const t=this._store.get(e);t&&(this._store.delete(e),this._store.set(e,t))}}let se=class extends w{constructor(e){super(e),this.tileInfo=null,this.extent=null,this.maximumByteSize=10485760,this.tileBounds=new y,this.tiles=new te,this.refCounts=new Map,this.tileFeatureCounts=new Map,this.tmpBoundingRect=E()}add(e,t){const s=[];for(const e of t)0===this.referenceFeature(e.objectId)&&s.push(e);this.addTileStorage(e,new Set(t.map((({objectId:e})=>e))),this.byteSizeOfFeatures(t)),this.featureStore.addMany(s),this.tiles.applyByteSizeLimit(this.maximumByteSize,(e=>this.removeTileStorage(e)))}destroy(){this.clear(),this.tileFeatureCounts.clear()}clear(){this.featureStore.clear(),this.tileBounds.clear(),this.tiles.clear(),this.refCounts.clear()}refresh(){this.clear(),this.tileFeatureCounts.clear()}processEdits(e,t,s){return this.processEditsDelete(e.deletedFeatures.concat(e.updatedFeatures)),this.processEditsRefetch(e.addedFeatures.concat(e.updatedFeatures),t,s)}addTileStorage(e,t,s){this.tiles.set(e.id,new ie(e,t,s)),this.tileBounds.set(e.id,e.extent),this.tileFeatureCounts.set(e.id,t.size)}remove({id:e}){const t=this.tiles.get(e);t&&this.removeTileStorage(t)}removeTileStorage(e){const t=[];for(const s of e.objectIds)1===this.unreferenceFeature(s)&&t.push(s);this.featureStore.removeManyById(t);const s=e.data.id;this.tiles.delete(s),this.tileBounds.delete(s)}processEditsDelete(e){this.featureStore.removeManyById(e);for(const[,t]of this.tiles){for(const s of e)t.objectIds.delete(s);this.tileFeatureCounts.set(t.data.id,t.objectIds.size)}for(const t of e)this.refCounts.delete(t)}async processEditsRefetch(e,t,s){const i=(await t(e,s)).features,{hasZ:r,hasM:o}=this.featureStore;for(const e of i){const t=q(this.tmpBoundingRect,e.geometry,r,o);this.tileBounds.forEachInBounds(t,(t=>{const s=this.tiles.get(t);this.featureStore.add(e),s.objectIds.has(e.objectId)||(s.objectIds.add(e.objectId),this.referenceFeature(e.objectId),this.tileFeatureCounts.set(s.data.id,s.objectIds.size))}))}}process(e,t=(()=>!0)){if(i(this.tileInfo)||!e.extent||r(this.extent)&&!z(O(this.extent,this.tmpBoundingRect),e.extent))return new oe(e);if(this.tiles.has(e.id))return new oe(e);const s=this.createTileTree(e,this.tileInfo);return this.simplify(s,t,null,0,1),this.collectMissingTiles(e,s,this.tileInfo)}get debugInfo(){return Array.from(this.tiles.values()).map((({data:e})=>({data:e,featureCount:this.tileFeatureCounts.get(e.id)||0})))}getFeatureCount(e){const t=this.tileFeatureCounts.get(e.id);return null!=t?t:0}async fetchCount(e,t,s,i){const r=this.tileFeatureCounts.get(e.id);if(null!=r)return r;const o=await L(t,s,i);return this.tileFeatureCounts.set(e.id,o.data.count),o.data.count}createTileTree(e,t){const s=new re(e.level,e.row,e.col);return t.updateTileInfo(s,1),this.tileBounds.forEachInBounds(e.extent,(i=>{const r=this.tiles.get(i).data;this.tilesAreRelated(e,r)&&this.populateChildren(s,r,t,this.tileFeatureCounts.get(r.id)||0)})),s}tilesAreRelated(e,t){if(!e||!t)return!1;if(e.level===t.level)return e.row===t.row&&e.col===t.col;const s=e.level<t.level,i=s?e:t,r=s?t:e,o=1<<r.level-i.level;return Math.floor(r.row/o)===i.row&&Math.floor(r.col/o)===i.col}populateChildren(e,t,s,i){const o=t.level-e.level-1;if(o<0)return void(e.isLeaf=!0);const n=t.row>>o,a=t.col>>o,l=e.row<<1,u=a-(e.col<<1)+(n-l<<1),c=e.children[u];if(r(c))this.populateChildren(c,t,s,i);else{const r=new re(e.level+1,n,a);s.updateTileInfo(r,1),e.children[u]=r,this.populateChildren(r,t,s,i)}}simplify(e,t,s,i,o){const n=o*o;if(e.isLeaf)return t(this.getFeatureCount(e),o)?0:(this.remove(e),r(s)&&(s.children[i]=null),n);const a=o/2,l=a*a;let u=0;for(let s=0;s<e.children.length;s++){const i=e.children[s];u+=r(i)?this.simplify(i,t,e,s,a):l}return 0===u?this.mergeChildren(e):1-u/n<ae&&(this.purge(e),r(s)&&(s.children[i]=null),u=n),u}mergeChildren(e){const t=new Set;let s=0;this.forEachLeaf(e,(e=>{const i=this.tiles.get(e.id);if(i){s+=i.byteSize;for(const e of i.objectIds)t.has(e)||(t.add(e),this.referenceFeature(e));this.remove(e)}})),this.addTileStorage(e,t,s),e.isLeaf=!0,e.children[0]=e.children[1]=e.children[2]=e.children[3]=null,this.tileFeatureCounts.set(e.id,t.size)}forEachLeaf(e,t){for(const s of e.children)i(s)||(s.isLeaf?t(s):this.forEachLeaf(s,t))}purge(e){if(!i(e))if(e.isLeaf)this.remove(e);else for(let t=0;t<e.children.length;t++){const s=e.children[t];this.purge(s),e.children[t]=null}}collectMissingTiles(e,t,s){const i=new ne(s,e,this.extent);return this.collectMissingTilesRecurse(t,i,1),i.info}collectMissingTilesRecurse(e,t,s){if(e.isLeaf)return;if(!e.hasChildren)return void t.addMissing(e.level,e.row,e.col,s);const r=s/2;for(let s=0;s<e.children.length;s++){const o=e.children[s];i(o)?t.addMissing(e.level+1,(e.row<<1)+((2&s)>>1),(e.col<<1)+(1&s),r):this.collectMissingTilesRecurse(o,t,r)}}referenceFeature(e){const t=(this.refCounts.get(e)||0)+1;return this.refCounts.set(e,t),1===t?0:2}unreferenceFeature(e){const t=(this.refCounts.get(e)||0)-1;return 0===t?(this.refCounts.delete(e),1):(t>0&&this.refCounts.set(e,t),2)}byteSizeOfFeatures(e){let t=0;for(const s of e)t+=this.byteSizeOfFeature(s);return t}byteSizeOfFeature(e){return 32+this.byteSizeOfGeometry(e.geometry)+Q(e.attributes)}byteSizeOfGeometry(e){if(!e)return 0;const t=D(e.lengths,4);return 32+D(e.coords,8)+t}get test(){return{tiles:Array.from(this.tiles.values()).map((e=>`${e.data.id}:[${Array.from(e.objectIds)}]`)),featureReferences:Array.from(this.refCounts.keys()).map((e=>`${e}:${this.refCounts.get(e)}`))}}};e([d({constructOnly:!0})],se.prototype,"featureStore",void 0),e([d()],se.prototype,"tileInfo",void 0),e([d()],se.prototype,"extent",void 0),e([d()],se.prototype,"maximumByteSize",void 0),se=e([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTileStore")],se);class ie{constructor(e,t,s){this.data=e,this.objectIds=t,this.byteSize=s}}class re{constructor(e,t,s){this.level=e,this.row=t,this.col=s,this.isLeaf=!1,this.extent=null,this.children=[null,null,null,null]}get hasChildren(){return!this.isLeaf&&(r(this.children[0])||r(this.children[1])||r(this.children[2])||r(this.children[3]))}}class oe{constructor(e,t=[]){this.missingTiles=t,this.fullArea=0,this.coveredArea=0,this.fullArea=R(e.extent),this.coveredArea=this.fullArea}prepend(e){this.missingTiles=e.missingTiles.concat(this.missingTiles),this.coveredArea+=e.coveredArea,this.fullArea+=e.fullArea}}class ne{constructor(e,t,s){this.tileInfo=e,this.extent=null,this.info=new oe(t),r(s)&&(this.extent=O(s))}addMissing(e,t,s,i){const o={id:null,level:e,row:t,col:s};this.tileInfo.updateTileInfo(o,1),!r(o.extent)||r(this.extent)&&!z(this.extent,o.extent)||(this.info.missingTiles.push({data:o,resolution:i}),this.info.coveredArea-=R(o.extent))}}const ae=.18751;let le=class extends t.EventedAccessor{constructor(){super(...arguments),this.isInitializing=!0,this.whenSetup=u(),this.handles=new s,this.updatingHandles=new C,this.pendingApplyEdits=new Map}get updating(){return this.featureFetcher.updating||this.isInitializing||this.updatingHandles.updating}destroy(){this.featureFetcher.destroy(),this.queryEngine.destroy(),this.featureStore.clear(),this.handles.destroy()}async setup(e){const{geometryType:t,objectIdField:s,timeInfo:i,fields:r}=e.serviceInfo;return this.featureStore=new j({...e.serviceInfo,hasZ:!1,hasM:!1}),this.queryEngine=new F({spatialReference:e.spatialReference,featureStore:this.featureStore,geometryType:t,fields:r,hasZ:!1,hasM:!1,objectIdField:s,timeInfo:i?S.fromJSON(i):null}),this.featureFetcher=new $({store:new se({featureStore:this.featureStore}),url:e.serviceInfo.url,objectIdField:e.serviceInfo.objectIdField,globalIdField:e.serviceInfo.globalIdField,capabilities:e.serviceInfo.capabilities,spatialReference:g.fromJSON(e.spatialReference),sourceSpatialReference:g.fromJSON(e.serviceInfo.spatialReference)}),this.handles.add([this.featureFetcher.watch("availability",(e=>this.emit("notify-availability",{availability:e})),!0),this.watch("updating",(()=>this.notifyUpdating()))]),this.whenSetup.resolve(),this.isInitializing=!1,this.configure(e.configuration)}async configure(e){return await this.updatingHandles.addPromise(this.whenSetup.promise),this.updateFeatureFetcherConfiguration(e),{result:{}}}async fetchCandidates(e,t){await this.whenSetup.promise,c(t);return{result:await this.queryEngine.executeQueryForSnapping({point:e.point,distance:e.distance,types:e.types,query:r(e.filter)?e.filter:{where:"1=1"}},r(t)?t.signal:null)}}async updateTiles(e,t){return await this.updatingHandles.addPromise(this.whenSetup.promise),c(t),this.featureFetcher.tileSize=e.tileSize,this.featureFetcher.tilesOfInterest=e.tiles,this.featureFetcher.tileInfo=r(e.tileInfo)?v.fromJSON(e.tileInfo):null,{result:{}}}async refresh(e,t){return await this.updatingHandles.addPromise(this.whenSetup.promise),c(t),this.featureFetcher.refresh(),{result:{}}}async whenNotUpdating(e,t){return await this.updatingHandles.addPromise(this.whenSetup.promise),c(t),await h(p(this,"updating"),t),{result:{}}}async getDebugInfo(e,t){return c(t),{result:this.featureFetcher.debugInfo}}async beginApplyEdits(e,t){this.updatingHandles.addPromise(this.whenSetup.promise),c(t);const s=u();return this.pendingApplyEdits.set(e.id,s),this.featureFetcher.applyEdits(s.promise),this.updatingHandles.addPromise(s.promise),{result:{}}}async endApplyEdits(e,t){const s=this.pendingApplyEdits.get(e.id);return s&&s.resolve(e.edits),c(t),{result:{}}}updateFeatureFetcherConfiguration(e){this.featureFetcher.filter=r(e.filter)?b.fromJSON(e.filter):null,this.featureFetcher.customParameters=e.customParameters}notifyUpdating(){this.emit("notify-updating",{updating:this.updating})}};function ue(){return new le}e([d({readOnly:!0})],le.prototype,"updating",null),e([d()],le.prototype,"isInitializing",void 0),le=e([m("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorker")],le);export default ue;export{le as FeatureServiceSnappingSourceWorker};
