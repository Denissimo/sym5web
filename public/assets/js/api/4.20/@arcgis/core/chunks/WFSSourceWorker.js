/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../core/Error.js";import{L as e}from"./Logger.js";import{u as r}from"../core/lang.js";import{throwIfAborted as s,createTask as o,isAbortError as i}from"../core/promiseUtils.js";import{e as a,W as p}from"../geometry/SpatialReference.js";import{b as m,c as n}from"./featureConversionUtils.js";import{F as l}from"./FeatureStore.js";import{p as u,c as j}from"./projectionSupport.js";import{Q as c}from"./QueryEngine.js";import{v as y,c as h}from"./geojson.js";import{m as g}from"./sourceUtils.js";import{getFeature as d}from"../layers/ogc/wfsUtils.js";import f from"../layers/support/FieldsIndex.js";import"./Message.js";import"./object.js";import"../config.js";import"./string.js";import"./tslib.es6.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/subclass.js";import"./arrayUtils.js";import"../core/scheduling.js";import"./write.js";import"./writer.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./Evented.js";import"./aaBoundingBox.js";import"./aaBoundingRect.js";import"./PooledRBush.js";import"./quickselect.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./centroid.js";import"../geometry/projection.js";import"./mathUtils.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./json.js";import"./MemCache.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"../geometry.js";import"./typeUtils.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"./utils6.js";import"../layers/support/fieldUtils.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"./enumeration.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./arcadeOnDemand.js";import"./spatialQuerySupport.js";import"./PromiseQueue.js";import"./utils7.js";import"./basemapUtils.js";import"../Basemap.js";import"../core/Collection.js";import"./collectionUtils.js";import"./Loadable.js";import"./Promise.js";import"./loadAll.js";import"./asyncUtils.js";import"../portal/Portal.js";import"../intl.js";import"./number.js";import"./locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./writeUtils.js";import"./_rollupPluginBabelHelpers.js";import"../layers/support/Field.js";import"./fieldType.js";export default class{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async t=>{const{objectIdField:e}=this._queryEngine,r=await d(this._getFeatureUrl,this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((t=>t.name)),signal:t});await y(r),s(t);const o=h(r,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:e});if(!a(this._queryEngine.spatialReference,p))for(const t of o)t.geometry&&(t.geometry=m(u(n(t.geometry,this._queryEngine.geometryType,!1,!1),p,this._queryEngine.spatialReference)));let i=1;for(const t of o){const r={};g(this._fieldsIndex,r,t.attributes,null,!0),t.attributes=r,null==t.attributes[e]&&(t.objectId=t.attributes[e]=i++)}return o}}destroy(){var t;null==(t=this._queryEngine)||t.destroy(),this._queryEngine=null}async load(t,e){const{getFeatureUrl:o,getFeatureOutputFormat:i,spatialReference:a,fields:p,geometryType:m,featureType:n,objectIdField:u,customParameters:j}=t;this._featureType=n,this._customParameters=j,this._getFeatureUrl=o,this._getFeatureOutputFormat=i,this._fieldsIndex=new f(p),await this._checkProjection(a),s(e),this._queryEngine=new c({fields:p,geometryType:m,hasM:!1,hasZ:!1,objectIdField:u,spatialReference:a,timeInfo:null,featureStore:new l({geometryType:m,hasM:!1,hasZ:!1})});const y=await this._snapshotFeatures(r(e.signal));return this._queryEngine.featureStore.addMany(y),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new t("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}setCustomParameters(t){this._customParameters=t}async refresh(){var r;return null==(r=this._snapshotTask)||r.abort(),this._snapshotTask=o(this._snapshotFeatures),this._snapshotTask.promise.then((t=>{this._queryEngine.featureStore.clear(),t&&this._queryEngine.featureStore.addMany(t)}),(r=>{this._queryEngine.featureStore.clear(),i(r)||e.getLogger("esri.layers.WFSLayer").error(new t("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:r}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(e){try{await j(p,e)}catch{throw new t("unsupported-projection","Projection not supported",{spatialReference:e})}}}
