/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../geometry.js";import{rasterRendererTypes as t}from"../rasterRenderers.js";import i from"../request.js";import{L as r}from"./Logger.js";import{i as n,u as s}from"../core/lang.js";import{aliasOf as o}from"../core/accessorSupport/decorators/aliasOf.js";import"./ensureType.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import u,{g as c}from"../geometry/SpatialReference.js";import{s as f}from"./arcgisLayerUrl.js";import{u as h}from"./commonProperties2.js";import m from"../layers/support/DimensionalDefinition.js";import{R as d}from"./RasterJobHandler.js";import p from"../layers/support/TileInfo.js";import{n as y,b as g,a as x,c as I}from"./rasterRendererHelper.js";import{R as b,d as v}from"./RasterSymbolizer.js";import w from"../geometry/Extent.js";import R from"../core/Error.js";import{a as _}from"./JSONSupport.js";import{a as C}from"./Promise.js";import{createAbortController as S,onAbort as k}from"../core/promiseUtils.js";import{R as T}from"../layers/support/RasterInfo.js";import{g as J,a as D,p as H,d as P,b as M}from"./RawBlockCache.js";import{m as B,j as O}from"./pixelUtils.js";import{l as j,p as N,s as z,a as F,g as L,b as E,c as A,d as U,e as W}from"./rasterProjectionHelper.js";import q from"../geometry/Point.js";const $=r.getLogger("esri.layers.mixins.ImageryTileMixin"),Y=r=>{let s=class extends r{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",f(e,$))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=y(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let r;this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:s}=this;return r=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),r}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;const r=c(e);return p.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,n={}){if(n.requestAsImageElement){const s=this.getTileUrl(e,t,r);return i(s,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}await this._initJobHandler();const s="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:s,...n}}return this.raster.fetchTile(e,t,r,n)}async fetchPixels(e,t,i,r){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;r={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...r}}return this.raster.fetchPixels(e,t,i,r)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!n(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const i=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===i&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new d;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=g(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(n(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach((e=>{i.push(new m({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))})),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;(this.bandIds||(this.bandIds=x(e)),this.renderer)||(this.renderer=I(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName}));this.symbolizer?(this.symbolizer.rendererJSON=y(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new b({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||$.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return e([a()],s.prototype,"_cachedRendererJson",void 0),e([a()],s.prototype,"_sliceId",void 0),e([a()],s.prototype,"_compatibleFullExtent",void 0),e([a()],s.prototype,"_rasterJobHandler",void 0),e([a()],s.prototype,"bandIds",void 0),e([a()],s.prototype,"copyright",void 0),e([a({type:w}),o("rasterInfo.extent")],s.prototype,"fullExtent",void 0),e([a()],s.prototype,"interpolation",void 0),e([a()],s.prototype,"ioConfig",void 0),e([a({type:[m]})],s.prototype,"multidimensionalDefinition",null),e([a()],s.prototype,"raster",void 0),e([a({readOnly:!0}),o("raster.rasterInfo")],s.prototype,"rasterInfo",void 0),e([a()],s.prototype,"sourceJSON",void 0),e([a({type:u}),o("rasterInfo.spatialReference")],s.prototype,"spatialReference",void 0),e([a({type:p}),o("rasterInfo.storageInfo.tileInfo")],s.prototype,"tileInfo",void 0),e([a(h)],s.prototype,"url",null),e([a({types:t})],s.prototype,"renderer",null),e([a()],s.prototype,"symbolizer",void 0),s=e([l("esri.layers.ImageryTileMixin")],s),s};let V=class extends(C(_)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=j();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:p.create(),...e.ioConfig}}),e}set url(e){this._set("url",f(e,r.getLogger(this.declaredClass)))}async open(e){throw new R("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){var s;const{tileInfo:o}=r,a=o.lodAt(e),l=this.getTileExtent({x:a.resolution,y:a.resolution},t,i,o.origin,o.spatialReference,o.size);return null!=(s=r.multidimensionalDefinition)&&s.length&&n(this.rasterInfo.multidimensionalInfo)&&null==r.sliceId&&(r={...r,sliceId:this.getSliceIndex(r.multidimensionalDefinition)||0}),this.fetchPixels(l,o.size[0],o.size[1],r)}async identify(e,t={}){const{spatialReference:i,extent:r}=this.rasterInfo,{datumTransformation:s}=t;let o=N(e,i,s);if(!r.intersects(o))return{location:o,value:null};if(n(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(o);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};o=e}let a=0;if(t.srcResolution){a=z(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel}else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:o,value:null};const l=this.identifyPixelLocation(o,a,null);if(null===l)return{location:o,value:null};const{row:u,col:c,rowOffset:f,colOffset:h}=l,m=J(this.url,t.sliceId),d=`${a}/${u}/${c}`;let p=D(m,null,d);n(p)||(p=this.fetchRawTile(a,u,c,t),H(m,null,d,p));const y=await p;if(!(y&&y.pixels&&y.pixels.length>0))return{location:o,value:null};const g=f*this.rasterInfo.storageInfo.blockHeight+h;return{location:o,value:!y.mask||y.mask[g]?y.pixels.map((e=>e[g])):null,pyramidLevel:a}}async fetchPixels(e,t,i,r={}){e=F(e);const n=L(e),o=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(o),{datumTransformation:l}=r,u=new q({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),c=r.srcResolution||(a?E(u,o,e,l):u);if(!c)return null;const{pyramidLevel:f,pyramidResolution:h,excessiveReading:m}=z(c,this.rasterInfo,this.ioConfig.sampling);if(m)return null;const d=this.rasterInfo.storageInfo;let p=a?A(e,o,l):e;const y=s(this.rasterInfo.transform);if(y&&(p=y.inverseTransform(p)),null==p)return null;const g={x:Math.floor((p.xmin-d.origin.x)/h.x+.1),y:Math.floor((d.origin.y-p.ymax)/h.y+.1)},x=Math.ceil((p.xmax-p.xmin)/h.x-.1),I=Math.ceil((p.ymax-p.ymin)/h.y-.1);if(x/t>8||I/i>8||n>=2)return null;const b=await this.fetchRawPixels(f,g,{width:x,height:I,wrapCount:n},r);if(!b)return null;const v=f>0?d.pyramidBlockWidth:d.blockWidth,w=f>0?d.pyramidBlockHeight:d.blockHeight;if(!a&&1===b.pixelBlocks.length&&v===t&&w===i&&c.x===u.x&&c.y===u.y)return{extent:e,srcExtent:p,pixelBlock:b.pixelBlocks[0]};const R=U(e,b.extent,u,l,y,n>0);let _;const C=!r.requestRawData,S={rows:R.spacing[0],cols:R.spacing[1]},k=s(this._getRasterTileAlignmentInfo(f,b.extent.xmin)),{pixelBlocks:T,mosaicSize:J,isPartiallyFilled:D}=b;if(this.rasterJobHandler)_=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:T,srcMosaicSize:J,destDimension:C?{width:t,height:i}:null,coefs:C?R.coefficients:null,sampleSpacing:C?S:null,interpolation:r.interpolation,alignmentInfo:k},r);else{const e=B(T,J,null,null,k);_=C?O(e,{width:t,height:i},R.coefficients,S,r.interpolation):e}return r.requestRawData?{srcExtent:p,pixelBlock:_,transformGrid:R,extent:e,isPartiallyFilled:D}:{srcExtent:p,extent:e,pixelBlock:_}}async fetchRawPixels(e,t,i,r){const{origin:n,blockBoundary:o}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:u,y:c}=t,{width:f,height:h,wrapCount:m}=i;const d=s(this._getRasterTileAlignmentInfo(e,0));r.buffer&&(u-=r.buffer.cols,c-=r.buffer.rows,f+=2*r.buffer.cols,h+=2*r.buffer.rows);const p=Math.floor(u/a),y=Math.floor(c/l),g=Math.floor((u+f-1)/a),x=Math.floor((c+h-1)/l),I=o[e];if(!I)return null;const{minRow:b,minCol:v,maxCol:R,maxRow:_}=I;if(x<b||g<v||y>_||p>R)return null;const C=[];let S,k=!1;for(let t=y;t<=x;t++)for(let i=p;i<=g;i++){const n=0===m||null==d||i<d.worldColumnCountFromOrigin?i:i%d.worldColumnCountFromOrigin-d.originColumnOffset;t>=b&&n>=v&&_>=t&&R>=n?(S=this._fetchRawTile(e,t,n,r),this.ioConfig.allowPartialFill&&(S=new Promise((e=>{S.then((t=>e(t))).catch((()=>{k=!0,e(null)}))}))),C.push(S)):C.push(null)}if(0===C.length)return null;const T=await Promise.all(C),J={height:(x-y+1)*l,width:(g-p+1)*a},{spatialReference:D}=this.rasterInfo,H=this.getPyramidPixelSize(e),{x:P,y:M}=H;return{extent:new w({xmin:n.x+p*a*P,xmax:n.x+(g+1)*a*P,ymin:n.y-(x+1)*l*M,ymax:n.y-y*l*M,spatialReference:D}),pixelBlocks:T,mosaicSize:J,isPartiallyFilled:k}}async fetchRawTile(e,t,i,r){throw new R("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return A(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?v(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var n,s;const{customFetchParameters:o}=this.ioConfig,{range:a,query:l,headers:u}=t;r=null!=(n=null!=(s=r)?s:t.retryCount)?n:this.ioConfig.retryCount;const c=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await i(e,{...t,query:{...l,...o},headers:{...u,...c}})}catch(i){if(r>0)return r--,this.request(e,t,r);throw i}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!n(t)||null==e||!e.length)return null;let i=0;const r=e[0].variableName;for(let n=0;n<t.variables.length;n++){const s=t.variables[n],o=s.dimensions;if(s.name!==r){i+=o.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const a=o.map((e=>this._getDimensionValuesCount(e))),l=o.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===o[t].name))[0];if(null==r)return null;const n=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],s=this._getIndexFromDimensions(n,o[t]);if(-1===s)return null;a.shift(),i+=t===l-1?s:s*a.reduce(((e,t)=>e+t))}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let o=Math.max(r.x,r.y),a=1/.0254*96*o;for(let e=0;e<=s;e++)n.push({level:s-e,resolution:o,scale:a}),o*=2,a*=2;const l=new q({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new p({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){const{width:n,height:s,nativeExtent:o,pixelSize:a,spatialReference:l}=e,u=new q({x:o.xmin,y:o.ymax,spatialReference:l});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(n,s))/Math.LN2-8)));const c=this.computeBlockBoundary(o,512,512,{x:o.xmin,y:o.ymax},[a],r);e.storageInfo=new T({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,r,n,s=0,o=2){if(1===n.length&&s>0){n=[...n];let{x:e,y:t}=n[0];for(let i=0;i<s;i++)e*=o,t*=o,n.push({x:e,y:t})}const a=[],{x:l,y:u}=r;for(let r=0;r<n.length;r++){const{x:s,y:o}=n[r];a.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((u-e.ymax+.1*o)/i/o),maxRow:Math.floor((u-e.ymin-.1*o)/i/o)})}return a}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if(n(i)&&i.length)return i[e-1];const s=r**e;return{x:t.x*s,y:t.y*s}}identifyPixelLocation(e,t,i){const{spatialReference:r,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:a,origin:l}=this.rasterInfo.storageInfo,u=N(e,r,i);if(!n.intersects(u))return null;if(t<0||t>a)return null;const c=this.getPyramidPixelSize(t),{x:f,y:h}=c,m=(l.y-u.y)/h/o,d=(u.x-l.x)/f/s,p=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),y=Math.min(s-1,Math.floor((d-Math.floor(d))*s));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(d),rowOffset:p,colOffset:y,srcLocation:u}}getTileExtent(e,t,i,r,n,s){const[o,a]=s,l=r.x+i*o*e.x,u=l+o*e.x,c=r.y-t*a*e.y,f=c-a*e.y;return new w({xmin:l,xmax:u,ymin:f,ymax:c,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}_fetchRawTile(e,t,i,r){const s=this.rasterInfo.storageInfo.blockBoundary[e];if(!s)return Promise.resolve(null);const{minRow:o,minCol:a,maxCol:l,maxRow:u}=s;if(t<o||i<a||t>u||i>l)return Promise.resolve(null);const c=J(this.url,r.sliceId),f=`${e}/${t}/${i}`;let h=D(c,r.registryId,f);if(!n(h)){const n=S();h=this.fetchRawTile(e,t,i,{...r,signal:n.signal}),H(c,r.registryId,f,h,n),h.catch((()=>{P(c,r.registryId,f)}))}return r.signal&&k(r,(()=>{M(c,r.registryId,f)})),h}_getIndexFromDimensions(e,t){const{extent:i,interval:r,unit:n,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>i[1])return-1;const o=i[0];let a=-1;if("ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":a=Math.round((e-o)/1e3/r);break;case"minutes":a=Math.round((e-o)/6e4/r);break;case"hours":a=Math.round((e-o)/36e5/r);break;case"days":a=Math.round((e-o)/864e5/r);break;case"years":a=Math.round((new Date(e).getUTCFullYear()-new Date(o).getUTCFullYear())/r);break;case"decades":a=Math.round((new Date(e).getUTCFullYear()-new Date(o).getUTCFullYear())/10/r)}return a}return Math.round((e-o)/r)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:r,values:n}=e;let s=(null==n?void 0:n.length)||0;if(s)return s;const o=t[0];if(0===s&&"ISO8601"===r){var a;switch((null==(a=e.intervalUnit)?void 0:a.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/i);break;case"hours":s=Math.round((t[1]-t[0])/36e5/i);break;case"days":s=Math.round((t[1]-t[0])/864e5/i);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(o).getUTCFullYear())/i);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(o).getUTCFullYear())/10/i)}return s}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=W(this.rasterInfo)),n(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}};e([a()],V.prototype,"_rasterTileAlighmentInfo",void 0),e([a(h)],V.prototype,"url",null),e([a({type:String,json:{write:!0}})],V.prototype,"datasetName",void 0),e([a({type:String,json:{write:!0}})],V.prototype,"datasetFormat",void 0),e([a()],V.prototype,"rasterInfo",void 0),e([a()],V.prototype,"ioConfig",void 0),e([a()],V.prototype,"sourceJSON",void 0),V=e([l("esri.layers.support.rasterDatasets.BaseRaster")],V);var G=V;function X(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const n=X(e,i);for(let e=0;e<n.length;e++){X(n[e],t).forEach((e=>r.push(e)))}return r}const n=e.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let e=0;e<n.length;e++)r.push(n[e]||n.item[e]);return r}function K(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=X(e,i);return r.length>0?t?K(r[0],t):r[0]:null}function Q(e,t=null){const i=t?K(e,t):e;let r;return i?(r=i.textContent||i.nodeValue,r?r.trim():null):null}function Z(e,t){const i=X(e,t),r=[];let n;for(let e=0;e<i.length;e++)n=i[e].textContent||i[e].nodeValue,n&&(n=n.trim(),""!==n&&r.push(n));return r}function ee(e,t=null){const i=Q(e,t);return null==i?void 0:i.split(" ").map((e=>Number(e)))}function te(e,t){return Z(e,t).map((e=>Number(e)))}function ie(e,t){const i=Q(e,t);return Number(i)}function re(e,t){var i;const r=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),n=t.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===n}function ne(e){return e.nodeName.slice(e.nodeName.lastIndexOf(":")+1)}export{G as B,Y as I,X as a,K as b,ie as c,te as d,ee as e,Z as f,Q as g,ne as h,re as i};
