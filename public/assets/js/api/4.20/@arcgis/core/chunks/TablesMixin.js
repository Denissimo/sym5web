/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Collection.js";import{r}from"./collectionUtils.js";import{L as s}from"./Logger.js";import{isPromiseLike as o}from"../core/promiseUtils.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./ensureType.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import n from"../layers/Layer.js";function l(e){return e&&"group"===e.type}function d(e,t,r){let s,o;if(e)for(let i=0,a=e.length;i<a;i++){if(s=e.getItemAt(i),s[t]===r)return s;if(l(s)&&(o=d(s.layers,t,r),o))return o}}const p=s.getLogger("esri.support.LayersMixin"),y=s=>{let l=class extends s{constructor(...e){super(...e),this.layers=new t;const r=e=>{e.parent=this,this.layerAdded(e),"elevation"!==e.type&&"base-elevation"!==e.type||p.error(`Layer 'title:${e.title}, id:${e.id}' of type '${e.type}' is not supported as an operational layer and will therefore be ignored.`)},s=e=>{e.parent=null,this.layerRemoved(e)};this.layers.on("before-add",(e=>{var t;(t=e.item).parent&&"remove"in t.parent&&t.parent.remove(t)})),this.layers.on("after-add",(e=>r(e.item))),this.layers.on("after-remove",(e=>s(e.item)))}destroy(){const e=this.layers.removeAll();for(const t of e)this.layerRemoved(t),t.destroy();this.layers.destroy()}set layers(e){this._set("layers",r(e,this._get("layers")))}add(e,t){const r=this.layers;if(t=r.getNextIndex(t),e instanceof n){const s=e;s.parent===this?this.reorder(s,t):r.add(s,t)}else o(e)?e.then((e=>{this.destroyed||this.add(e,t)})):p.error("#add()","The item being added is not a Layer or a Promise that resolves to a Layer.")}addMany(e,t){const r=this.layers;t=r.getNextIndex(t),e.slice().forEach((e=>{e.parent!==this?(r.add(e,t),t+=1):this.reorder(e,t)}))}findLayerById(e){return d(this.layers,"id",e)}findLayerByUid(e){return d(this.layers,"uid",e)}remove(e){return this.layers.remove(e)}removeMany(e){return this.layers.removeMany(e)}removeAll(){return this.layers.removeAll()}reorder(e,t){return this.layers.reorder(e,t)}layerAdded(e){}layerRemoved(e){}};return e([i()],l.prototype,"layers",null),l=e([a("esri.support.LayersMixin")],l),l},h=s.getLogger("esri.support.TablesMixin");function m(e){return e&&"group"===e.type}function u(e,t,r){if(e)for(let s=0,o=e.length;s<o;s++){const o=e.getItemAt(s);if(o[t]===r)return o;if(m(o)){const e=u(o.tables,t,r);if(e)return e}}}const f=s=>{let o=class extends s{constructor(...e){super(...e),this.tables=new t,this.tables.on("after-add",(e=>{const t=e.item;t.parent&&t.parent!==this&&"tables"in t.parent&&t.parent.tables.remove(t),t.parent=this,"feature"!==t.type&&h.error(`Layer 'title:${t.title}, id:${t.id}' of type '${t.type}' is not supported as a table and will therefore be ignored.`)})),this.tables.on("after-remove",(e=>{e.item.parent=null}))}destroy(){const e=this.tables.removeAll();for(const t of e)t.destroy();this.tables.destroy()}set tables(e){this._set("tables",r(e,this._get("tables")))}findTableById(e){return u(this.tables,"id",e)}findTableByUid(e){return u(this.tables,"uid",e)}};return e([i()],o.prototype,"tables",null),o=e([a("esri.support.TablesMixin")],o),o};export{y as L,f as T};
