/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{L as r}from"./Logger.js";import{debounce as s,isAbortError as o}from"../core/promiseUtils.js";import{aliasOf as t}from"../core/accessorSupport/decorators/aliasOf.js";import"../core/lang.js";import"./ensureType.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";const p=p=>{let c=class extends p{constructor(){super(...arguments),this.refreshTimestamp=null,this.refreshDebounced=s((async(e,s)=>{let t;"number"==typeof e?t=e:(t=Date.now(),s=e),this._set("refreshTimestamp",t),this.doRefresh&&await this.doRefresh(s).catch((e=>{o(e)||r.getLogger(this.declaredClass).error(e)}))}),2e3)}refresh(e=Date.now()){this._set("refreshTimestamp",e),this.doRefresh&&this.doRefresh().catch((e=>{o(e)||r.getLogger(this.declaredClass).error(e)}))}};return e([a()],c.prototype,"layer",void 0),e([t("layer.refreshInterval")],c.prototype,"refreshInterval",void 0),e([a({readOnly:!0})],c.prototype,"refreshTimestamp",void 0),c=e([i("esri.layers.mixins.RefreshableLayerView")],c),c};function c(e){return"refresh"in e}export{p as R,c as i};
