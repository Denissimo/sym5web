/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{E as t}from"./Evented.js";import{b as i,o as s,i as r,u as n,d as o,clone as a}from"../core/lang.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./Logger.js";import{subclass as h}from"../core/accessorSupport/decorators/subclass.js";import"../geometry.js";import{HandleOwner as c}from"../core/HandleOwner.js";import d from"../core/Handles.js";import{createTask as p}from"../core/promiseUtils.js";import{b as u,c as m}from"./screenUtils.js";import{p as g}from"./dehydratedFeatureComparison.js";import{E as _,c as y,I as f}from"./InteractiveToolBase.js";import{S as v,a as x,b as w,c as S,E as b}from"../views/draw/DrawAction.js";import{T,I as E}from"./Scheduler.js";import V from"../Color.js";import{d as O}from"./handleUtils.js";import{b as M,p as P,j as R,s as I,z as C,q as j,n as G,g as D,c as H,G as z,e as k,h as A}from"./mathUtils.js";import{e as F,c as U}from"./vec4.js";import{f as Z,a as W}from"./vec4f32.js";import{k as L,l as B,m as N,n as q,o as Q}from"./frustum.js";import{c as X,f as J,b as K}from"./lineSegment.js";import{c as Y,b as $}from"./ray.js";import{L as ee}from"./LaserlineVisualElement.js";import{O as te}from"./Object3DVisualElement.js";import{G as ie,W as se}from"./ColorMaterial.js";import{R as re,e as ne}from"./RibbonLineMaterial.js";import{I as oe}from"./mat4f64.js";import{h as ae,a as le,e as he,s as ce,g as de}from"./vec2.js";import{f as pe}from"./vec4f64.js";import{projectVectorToVector as ue}from"../geometry/projection.js";import{q as me}from"./aaBoundingBox.js";import{b as ge}from"./vectorStacks.js";import{init as _e}from"../core/watchUtils.js";import{O as ye}from"./Object3D.js";import{H as fe,k as ve,E as xe}from"./sdfPrimitives.js";import{T as we}from"./Texture2.js";import{R as Se}from"./RightAngleQuadVisualElement.js";import{d as be}from"./Settings.js";import{c as Te,E as Ee,C as Ve}from"./AppendVertex.js";import Oe from"../geometry/Point.js";import{m as Me}from"./dehydratedFeatures.js";import{a as Pe,b as Re}from"./elevationInfoUtils.js";class Ie{constructor(){this.next=new _}createSnapDragEventPipelineStep({predicate:e=(()=>!0),cancel:t,snappingManager:n,snappingContext:o,updatingHandles:a}){if(i(n))return e=>e;let l=null,h=null;const c=()=>{l=s(l),n.doneSnapping(),r(h)&&h.frameTask.remove(),h=null};return t.next((e=>(c(),e))),this.next=new _,t=>{if(!e(t))return t;if(l=s(l),"start"===t.action){const e="3d"===n.view.type?n.view.resourceController.scheduler.registerTask(T.SNAPPING):E;h={context:new v({geometry:o.geometry,elevationInfo:o.elevationInfo,pointer:o.pointer,vertexHandle:r(t.info)?t.info.handle:null,excludeFeature:o.excludeFeature,visualizer:o.visualizer}),originalPos:r(t.snapOrigin)?o.coordinateHelper.createDehydratedPoint(t.snapOrigin):t.mapStart,frameTask:e}}if(r(h)){const e=h.context.coordinateHelper.createDehydratedPoint(h.context.coordinateHelper.fromArray([h.originalPos.x,h.originalPos.y,h.originalPos.z]));e.x+=t.mapEnd.x-t.mapStart.x,e.y+=t.mapEnd.y-t.mapStart.y;const i=t.mapStart.x-h.originalPos.x,s=t.mapStart.y-h.originalPos.y,r={...t,action:"udpate"},o=h.context,c=n.update(e,h.context);if(t.mapEnd.x=c.x+i,t.mapEnd.y=c.y+s,"end"!==t.action){const t=h.frameTask;l=p((async a=>{const l=await t.schedule((()=>n.snap(e,o,a)),a);if(l.valid){const e=await t.schedule((()=>l.apply()),a);g(e,c)||(r.mapEnd.x=e.x+i,r.mapEnd.y=e.y+s,this.next.execute(r))}})),a.addPromise(l.promise)}}return"end"===t.action&&c(),t}}}class Ce extends te{constructor(e){super(e),this._ray=Y(),this._externalResources=null,this._handles=new d,this._isWorldDown=!1,this._start=M(),this._end=P(1,0,0),this._width=1,this._color=Z(1,0,1,1),this._polygonOffset=!1,this._writeDepthEnabled=!0,this._innerWidth=0,this._innerColor=Z(1,1,1,1),this._stippleIntegerRepeats=!0,this._stipplePattern=null,this._stippleOffColor=null,this._falloff=0,this._extensionType=0,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=4,this._fadedExtensions=ze,this.applyProps(e)}createExternalResources(){const e=new re(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()})));const t=new ee({view:this.view,attached:this._laserlineEnabled});this._externalResources={material:e,laserline:t}}destroyExternalResources(){r(this._externalResources)&&this._externalResources.laserline.destroy(),this._externalResources=null,this._handles.removeAll()}forEachExternalMaterial(e){r(this._externalResources)&&e(this._externalResources.material)}createGeometries(e){const t=[M(),M()],i=3===this.extensionType;i&&t.push(M(),M());const s=i?new Float32Array([1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]):null,r=ie.createPolylineGeometry(t,null,s);e.addGeometry(r,n(this._externalResources).material),this.updateVertices(r)}updateVisibility(e){super.updateVisibility(e),r(this._externalResources)&&(this._externalResources.laserline.visible=e)}setStartEndFromWorldDownAtLocation(e){this._isWorldDown=!0,R(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),I(this._end,e,this._end),$(this._start,this._end,this._ray),this.updateGeometry()}get start(){return this._start}set start(e){this._isWorldDown=!1,C(this._start,e)||(R(this._start,e),$(this._start,this._end,this._ray),this.updateGeometry())}get end(){return this._end}set end(e){this._isWorldDown=!1,C(this._end,e)||(R(this._end,e),$(this._start,this._end,this._ray),this.updateGeometry())}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get color(){return this._color}set color(e){F(e,this._color)||(U(this._color,e),this.updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this.updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this.updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this.updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){F(e,this._innerColor)||(U(this._innerColor,e),this.updateMaterial())}get stippleIntegerRepeats(){return this._stippleIntegerRepeats}set stippleIntegerRepeats(e){e!==this._stippleIntegerRepeats&&(this._stippleIntegerRepeats=e,this.updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const t=r(e)!==r(this._stipplePattern);this._stipplePattern=e,t?this.recreate():this.updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){(i(e)||i(this._stippleOffColor)||!F(e,this._stippleOffColor))&&(this._stippleOffColor=r(e)?W(e):null,this.updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this.updateMaterial())}get extensionType(){return this._extensionType}set extensionType(e){e!==this._extensionType&&(this._extensionType=e,this.updateGeometry())}get _laserlineAttached(){return this._laserlineEnabled&&r(this._laserlineStyle)}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,r(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached,r(e)&&(this._externalResources.laserline.style=e))}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,r(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached))}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get fadedExtensions(){return this._fadedExtensions}set fadedExtensions(e){this._fadedExtensions=o(e,ze),this.recreateGeometry()}updateMaterial(){if(i(this._externalResources))return;this._externalResources.material.setParameterValues(this.materialParameters)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stippleIntegerRepeats:this._stippleIntegerRepeats,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,polygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}updateGeometry(){r(this.object)&&this.updateVertices(this.object.geometries[0])}updateVertices(e){const t=3===this._extensionType?this.updateLineSegmentFinite(He):this.updateLineSegmentInfinite(this._extensionType,He);this.updateVertexAttributes(e,t),r(this._externalResources)&&(this._externalResources.laserline.intersectsLine=t)}updateLineSegmentFinite(e){return J(this._start,this._end,e)}updateLineSegmentInfinite(e,t){const i=this.view.state.camera;switch(B(this._ray,je),e){case 0:je.c0=-Number.MAX_VALUE;break;case 1:case 2:{const e=this._ray.origin,t=o(this.view.elevationProvider.getElevation(e[0],e[1],e[2],this.view.renderCoordsHelper.spatialReference,"ground"),0),i=this.view.renderCoordsHelper.getAltitude(e);this._isWorldDown&&i<t&&j(je.ray.direction,je.ray.direction),2===this._extensionType&&null!=t&&(je.c1=Math.abs(i-t));break}}if(!N(i.frustum,je))return J(this._start,this._end,t);const s=q(je,Ge),r=Q(je,De);return J(s,r,t)}updateVertexAttributes(e,t){const i=e.getMutableAttribute("position").data;if(3===this.extensionType){const e=K(t,-this.fadedExtensions.start,Ge);i[0]=e[0],i[1]=e[1],i[2]=e[2];const s=K(t,0,Ge);i[3]=s[0],i[4]=s[1],i[5]=s[2];const r=K(t,1,Ge);i[6]=r[0],i[7]=r[1],i[8]=r[2];const n=K(t,1+this.fadedExtensions.end,Ge);i[9]=n[0],i[10]=n[1],i[11]=n[2]}else{const e=K(t,0,Ge);i[0]=e[0],i[1]=e[1],i[2]=e[2];const s=K(t,1,Ge);i[3]=s[0],i[4]=s[1],i[5]=s[2]}r(this.object)&&this.object.geometryVertexAttrsUpdated(0)}}const je=L(),Ge=M(),De=M(),He=X(),ze={start:.3333333333333333,end:.3333333333333333};class ke extends te{constructor(e){super(e),this._handles=new d,this._location=M(),this._direction=P(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=Z(1,0,1,1),this._renderOccluded=4,this.applyProps(e)}get location(){return this._location}set location(e){C(this._location,e)||(R(this._location,e),this.updateGeometry())}get direction(){return this._direction}set direction(e){C(this._direction,e)||(R(this._direction,e),this.updateGeometry())}setDirectionFromPoints(e,t){G(this._direction,I(this._direction,t,e)),this.updateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this.updateMaterial())}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this.updateGeometry())}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this.updateGeometry())}get color(){return this._color}set color(e){F(e,this._color)||(U(this._color,e),this.updateMaterial())}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}createExternalResources(){const e=new re(this.materialParameters);this._handles.add(this.view.state.watch("camera",(()=>{this.updateGeometry()}))),this._externalResources={material:e}}destroyExternalResources(){this._handles.removeAll(),this._externalResources=null}createGeometries(e){const t=ie.createPolylineGeometry([M(),M()]),i=ie.createPolylineGeometry([M(),M()]),s=n(this._externalResources).material;e.addGeometry(t,s,oe),e.addGeometry(i,s,oe),this.updateVertices(e)}forEachExternalMaterial(e){r(this._externalResources)&&e(this._externalResources.material)}updateMaterial(){if(i(this._externalResources))return;this._externalResources.material.setParameterValues(this.materialParameters)}get materialParameters(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded}}updateGeometry(){const e=this.object;i(e)||this.updateVertices(e)}updateVertices(e){const t=this.view.state.camera;t.projectToScreen(this.location,Fe),D(Ae,this.location,this.direction),t.projectToScreen(Ae,Ue),ae(Ue,le(Ue,Ue,Fe)),this.updateVertexAttributes(t,e,0,Fe,Ue,1),this.updateVertexAttributes(t,e,1,Fe,Ue,-1)}updateVertexAttributes(e,t,i,s,r,n){const o=t.geometryRecords[i].geometry.getMutableAttribute("position").data,a=he(Ze,ce(Ze,r[1]*n,r[0]*-n),this.offset+this.width/2),l=de(We,de(We,de(We,s,he(We,r,this.length/2)),a),a),h=de(Le,l,he(Le,r,-this.length));e.unprojectFromScreen(l,Ae),o[0]=Ae[0],o[1]=Ae[1],o[2]=Ae[2],e.unprojectFromScreen(h,Ae),o[3]=Ae[0],o[4]=Ae[1],o[5]=Ae[2],t.geometryVertexAttrsUpdated(i)}}const Ae=M(),Fe=u(),Ue=u(),Ze=u(),We=u(),Le=u();class Be{constructor(e){this.resourceFactory=e,this._resources=null,this._visible=!0,this._attached=!1}destroy(){this._destroyResources()}get object(){return r(this._resources)?this._resources.object:null}get resources(){return r(this._resources)?this._resources.external:null}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this._syncVisible())}get attached(){return this._attached}set attached(e){e!==this._attached&&(this._attached=e,this._createOrDestroyResources())}recreate(){this.attached&&this._createResources()}recreateGeometry(){if(!this.resourceFactory.recreateGeometry)return void this.recreate();const e=this.resourceFactory.view._stage;if(i(this._resources)||!e)return;const t=this._resources.object;this._resources.external.forEach((t=>{2===t.type&&e.remove(t)})),t.removeAllGeometries();const s=this.resourceFactory.recreateGeometry(this._resources.external,t,this._resources.layer);e.addMany(s)}_createOrDestroyResources(){this._attached?this._resources||this._createResources():this._destroyResources()}_createResources(){this._destroyResources();const e=this.resourceFactory.view._stage;if(!e)return;const t=new se({isPickable:!1,updatePolicy:1});e.add(t);const i=new ye({castShadow:!1}),s=this.resourceFactory.createResources(i,t);s.forEach((t=>e.add(t))),e.add(i),t.add(i),this._syncVisible();const r=this.resourceFactory.cameraChanged?_e(this.resourceFactory.view.state,"camera",(e=>this.resourceFactory.cameraChanged(e))):null;this._resources={layer:t,object:i,external:s,cameraHandle:r}}_destroyResources(){if(i(this._resources))return;const e=this.resourceFactory.view._stage;null==e||e.remove(this._resources.object),null==e||e.remove(this._resources.layer),this._resources.external.forEach((t=>{null==e||e.remove(t),"dispose"in t&&t.dispose()})),this._resources.object.dispose(),this._resources.cameraHandle&&this._resources.cameraHandle.remove(),this._resources=null}_syncVisible(){i(this._resources)||this._resources.object.setVisible(this._visible)}}class Ne{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=pe(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=pe(1,1,1,1),this._elevationInfo=null,this.resources=new Be({view:e.view,createResources:e=>this.createResources(e),recreateGeometry:(e,t)=>(e.geometry=this.recreateGeometry(t,e.material),r(e.geometry)?[e.geometry]:[])});let t=!0;for(const i in e)i in this?"attached"===i?t=e[i]:this[i]=e[i]:console.error("Cannot set unknown property",i);this.attached=t}destroy(){this.resources.destroy()}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e}get attached(){return this.resources.attached}set attached(e){this.resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this.preferredTextureSize;this._size=e,t<this.preferredTextureSize?r(this.resources)&&this.resources.recreate():this.updateSizeAttribute()}}get color(){return this._color}set color(e){F(e,this._color)||(U(this._color,e),this.updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this.updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,r(this.resources)&&this.resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this.updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){F(e,this._outlineColor)||(U(this._outlineColor,e),this.updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources&&this.resources.recreateGeometry()}updateMaterial(){const e=this.resources.resources;i(e)||e.material.setParameterValues(this.materialParameters(e.texture.id))}updateSizeAttribute(){const e=this.resources.resources,t=this.resources.object;if(i(e)||i(t))return;const s=e.geometry;if(i(s))return;const r=s.getMutableAttribute("size").data,n=this.geometrySize;r[0]=n,r[1]=n,t.geometryVertexAttrsUpdated(0)}materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:Qe,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get geometrySize(){return this._size/qe}recreateGeometry(e,t){const i=this.createRenderGeometry();return r(i)&&e.addGeometry(i,t),i}createResources(e){const t=this.createTexture(),i=new fe(this.materialParameters(t.id)),s=this.recreateGeometry(e,i);return{material:i,texture:t,geometry:s,forEach(e){e(t),e(i),r(this.geometry)&&e(this.geometry)}}}get preferredTextureSize(){return H(z(2*this.geometrySize),16,128)}createTexture(){const e=this.preferredTextureSize;return new we(ve(this._primitive,e,e*qe),{mipmap:!1,wrap:{s:33071,t:33071},width:e,height:e,components:4,noUnpackFlip:!0})}calculateMapBounds(e){if(i(this.resources.resources)||i(this.resources.resources.geometry))return!1;const t=this.resources.resources.geometry.vertexAttributes.get("position");return ue(t.data,this.view.renderCoordsHelper.spatialReference,Xe,this.view.spatialReference),me(e,Xe),!0}createRenderGeometry(){const e=this.geometry;if(i(e))return null;const{renderCoordsHelper:t,elevationProvider:s}=this.view,r=ne(e,s,xe.fromElevationInfo(this.elevationInfo),t),n=k(ge.get(),e.x,e.y,r),o=ge.get();ue(n,e.spatialReference,o,t.spatialReference);const a=this.geometrySize;return ie.createPointGeometry(null,o,null,[a,a],[0,0,0,1])}}const qe=.5,Qe=[qe/2,qe/2,1-qe/2,1-qe/2],Xe=M();class Je extends x{visualizeIntersectionPoint(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return O(new Ne({view:r,primitive:"circle",geometry:i.createPoint(e.intersectionPoint),elevationInfo:s,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:V.toUnitRGBA(be.orange),pixelSnappingEnabled:!1}))}visualizePoint(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return O(new Ne({view:r,primitive:"circle",geometry:i.createPoint(e.point),elevationInfo:s,size:20,outlineSize:2,color:[0,0,0,0],outlineColor:V.toUnitRGBA(be.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return O(this.createLineSegmentHintFromMap(e.type,e.lineStart,e.lineEnd,i,s,r,e.fadeLeft,e.fadeRight))}visualizeParallelSign(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t,n=w(e.lineStart,i,s,t.view),o=w(e.lineEnd,i,s,t.view),a=A(o,n,o,.5),l=new ke({view:r,attached:!1,offset:be.parallelLineHintOffset,length:be.parallelLineHintLength,width:be.parallelLineHintWidth,color:V.toUnitRGBA(be.orange),location:a,renderOccluded:16});return l.setDirectionFromPoints(n,a),l.attached=!0,O(l)}visualizeRightAngleQuad(e,t){const{coordinateHelper:i,elevationInfo:s,view:r}=t;return O(new Se({view:r,attached:!0,color:V.toUnitRGBA(be.orange),renderOccluded:2,outlineRenderOccluded:16,outlineColor:V.toUnitRGBA(be.orange),outlineSize:be.rightAngleHintOutlineSize,size:be.rightAngleHintSize,geometry:{previous:w(e.previousVertex,i,s,r),center:w(e.centerVertex,i,s,r),next:w(e.nextVertex,i,s,r)}}))}createLineSegmentHintFromMap(e,t,i,s,r,n,o=!0,a=!0){const l=M(),h=M();return S(t,i,s,r,n,l,h),this.createLineSegmentHint(e,n,l,h,o,a)}createLineSegmentHint(e,t,i,s,r=!0,n=!0){const o=new Ce({view:t,extensionType:3,start:i,end:s,color:V.toUnitRGBA(be.orange),renderOccluded:16});switch(e){case 0:o.width=be.lineHintWidthTarget,o.fadedExtensions={start:0,end:be.lineHintFadedExtensions};break;case 2:o.width=be.lineHintWidthReference,o.fadedExtensions={start:0,end:0};break;case 1:o.width=be.lineHintWidthReference,o.fadedExtensions={start:r?be.lineHintFadedExtensions:0,end:n?be.lineHintFadedExtensions:0}}return o.attached=!0,o}}class Ke{constructor({grabbableForEvent:e}){this.events=new t,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.grabbableForEvent=e}intersectionDistance(e,t){return 0}attach(){}detach(){}}const Ye=["freehand","hybrid","click"],$e="click";let et=class extends(t.EventedMixin(c)){constructor(e){super(e),this._manipulator=null,this._stagedVertex=null,this.elevationInfo=null,this.snapToSceneEnabled=null,this._handles=new d,this._snappingPipeline=new Ie,this._createOperationCompleted=!1,this._pointerDownStates=new Set,this._snappingTask=null}set drawingMode(e){this._set("drawingMode",null!=e?e:"click")}get updating(){return this.updatingHandles.updating}get isCompleted(){return this._createOperationCompleted}get _snappingEnabled(){return r(this.snappingManager)&&this.snappingManager.options.effectiveEnabled}initialize(){var e,t;this.coordinateHelper=Te(this.hasZ,this.hasM,this.view.spatialReference,this.view.viewingMode);const i=null==(e=this.view)||null==(t=e.resourceController)?void 0:t.scheduler;this._frameTask=i?i.registerTask(T.SNAPPING):E,this._editGeometry=new b(new Ee(this.coordinateHelper),"segment"===this.geometryType?"polyline":this.geometryType),this._activeComponent=new Ve(this._editGeometry.editGeometry),this._editGeometry.editGeometry.components.push(this._activeComponent),this._editGeometry.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.toArray(e.pos)}))),i=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:i,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:i,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:i,vertices:t})}})),this._manipulator=new Ke({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size}),this.manipulators.add(this._manipulator),this._manipulator.grabbable="point"!==this.geometryType;const n=this.createManipulatorDragPipeline(this._manipulator),o=this._manipulator.events.on("immediate-double-click",(e=>{this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())})),a=this._manipulator.events.on("immediate-click",(e=>{if(this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(r(i))this.discardStagedVertex(),this.complete();else{const i=this._screenToMap(e.screenPoint);if(r(i))switch(this.drawingMode){case"freehand":"point"===this.geometryType&&(this.hasStagedVertex?this.commitStagedVertex():this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(i)),this.complete());break;case"click":case"hybrid":this._snappingTask=s(this._snappingTask),this.hasStagedVertex?this.commitStagedVertex():this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(i)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}}e.stopPropagation()}));this._handles.add([n,a,o])}createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this.createManipulatorDragPipelineClick(e);case"freehand":return this.createManipulatorDragPipelineFreehand(e);case"hybrid":return this.createManipulatorDragPipelineHybrid(e)}}createManipulatorDragPipelineClick(e){return y(e,((e,t,i,s)=>{const n="touch"===s&&this._snappingEnabled;!this.isCompleted&&n&&(t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||n&&0===this.numVertices)&&this.commitStagedVertex()),e))).next(this._snappingPipeline.createSnapDragEventPipelineStep({predicate:()=>n,cancel:i,snappingManager:this.snappingManager,snappingContext:new v({geometry:this._editGeometry,elevationInfo:this.elevationInfo,pointer:s,visualizer:new Je}),updatingHandles:this.updatingHandles}),this._snappingPipeline.next).next((e=>(n&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e))),i.next((()=>{n&&r(this.snappingManager)&&this.snappingManager.doneSnapping()})))}))}createManipulatorDragPipelineFreehand(e){return y(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))}createManipulatorDragPipelineHybrid(e){return y(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))}destroy(){this._handles.destroy(),this._handles=null,this._editGeometry.destroy(),this._frameTask.remove()}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}get canRedo(){return this._editGeometry.canRedo}redo(){this._editGeometry.redo()}get canUndo(){return this._editGeometry.canUndo}undo(){r(this.snappingManager)&&this.snappingManager.doneSnapping(),this._editGeometry.undo()}complete(e=!1){s(this._snappingTask),r(this.snappingManager)&&this.snappingManager.doneSnapping(),"polyline"===this.geometryType||"polygon"===this.geometryType?this.discardStagedVertex():this.commitStagedVertex();const t="polyline"===this.geometryType&&this.numVertices<2||"polygon"===this.geometryType&&this.numVertices<3;this._createOperationCompleted=!t,(this.isCompleted||e)&&this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:e,type:"complete"})}cancel(){this.complete(!0)}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get numVertices(){return r(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get numCommittedVertices(){return this._activeComponent.vertices.length}get vertices(){const e=this.committedVertices;return r(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}get committedVertices(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.toArray(e.pos)))}get spatialReference(){return this.view.spatialReference}get hasStagedVertex(){return r(this._stagedVertex)}get stagedVertex(){return this._stagedVertex}set stagedVertex(e){if(i(e))this.discardStagedVertex();else{if(i(this._stagedVertex))this._stagedVertex=a(e);else{if(g(this._stagedVertex,e))return;this._stagedVertex.x=e.x,this._stagedVertex.y=e.y,this._stagedVertex.z=e.z,this._stagedVertex.m=e.m,this._stagedVertex.hasZ=e.hasZ,this._stagedVertex.hasM=e.hasM,this._stagedVertex.spatialReference=e.spatialReference}this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)}],operation:"apply",type:"vertex-update"})}}commitStagedVertex(){if(this._snappingTask=s(this._snappingTask),r(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometry.appendVertex(this.coordinateHelper.fromPoint(e))}}discardStagedVertex(){this._stagedVertex=null}_onPointerMove(e){if(s(this._snappingTask),this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const t=m(e.x,e.y),i=this._closeOnClickVertexIndex(t);if(r(i)){this.discardStagedVertex();const e={componentIndex:0,vertexIndex:i,coordinates:this.coordinateHelper.toArray(this._activeComponent.vertices[i].pos)};this.emit("cursor-update",{updated:null,vertices:[e],operation:"apply",type:"vertex-update"})}else{const i=this._screenToMap(t);if(this._manipulator.cursor=r(i)?"crosshair":null,r(i))if(r(this.snappingManager)){const t=this.snappingManager,s=new v({geometry:this._editGeometry,elevationInfo:this.elevationInfo,pointer:e.pointerType,visualizer:new Je});this.stagedVertex=t.update(i,s),this._snappingTask=p((async e=>{const r=await this._frameTask.schedule((()=>t.snap(i,s,e)),e);r.valid&&await this._frameTask.schedule((()=>{this.stagedVertex=r.apply()}),e)})),this.updatingHandles.addPromise(this._snappingTask.promise)}else this.stagedVertex=i}e.stopPropagation()}_onHold(e){s(this._snappingTask),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()}_screenToMapDragEventStep(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),i(e))return null;const s=this._screenToMap(t.screenEnd);return r(s)?{...t,mapStart:e,mapEnd:s}:null}}_screenToMap(e){return this._getDrawSurface().screenToMap(e)}_mapToScreen(e){return this._getDrawSurface().mapToScreen(e)}_getDrawSurface(){if(!this.coordinateHelper.hasZ)return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let e=this.defaultZ,t=!1;r(this.elevationInfo)&&"absolute-height"===this.elevationInfo.mode&&(t=!0),r(this.snapToSceneEnabled)&&(t=this.snapToSceneEnabled),r(this.elevationInfo)&&"on-the-ground"===this.elevationInfo.mode&&(t=!1);const i=this._activeComponent.vertices.length;return("segment"===this.geometryType||"polygon"===this.geometryType)&&i>0&&(e=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),t=!1),t?this.sceneDrawSurface:(this.elevationDrawSurface.defaultZ=e,this.elevationDrawSurface)}_vertexWithinPointerDistance(e,t){const i=this._mapToScreen(e);return!!r(i)&&function(e,t,i){const s=e.x-t.x,r=e.y-t.y;return s*s+r*r<=i}(i,t,25)}_closeOnClickVertexIndex(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[0].pos,tt),e))return 0;if(this._vertexWithinPointerDistance(this.coordinateHelper.toPoint(t.vertices[t.vertices.length-1].pos,tt),e))return t.vertices.length-1}return null}};e([l({constructOnly:!0})],et.prototype,"view",void 0),e([l({value:"click"})],et.prototype,"drawingMode",null),e([l({constructOnly:!0})],et.prototype,"geometryType",void 0),e([l({constructOnly:!0})],et.prototype,"elevationInfo",void 0),e([l()],et.prototype,"snapToSceneEnabled",void 0),e([l({constructOnly:!0})],et.prototype,"manipulators",void 0),e([l({constructOnly:!0})],et.prototype,"hasZ",void 0),e([l({constructOnly:!0})],et.prototype,"hasM",void 0),e([l()],et.prototype,"defaultZ",void 0),e([l({constructOnly:!0})],et.prototype,"sceneDrawSurface",void 0),e([l({constructOnly:!0})],et.prototype,"elevationDrawSurface",void 0),e([l({constructOnly:!0})],et.prototype,"snappingManager",void 0),e([l({readOnly:!0})],et.prototype,"updating",null),et=e([h("esri.views.3d.interactive.editingTools.draw3D.DrawOperation")],et);const tt=new Oe({x:0,y:0,z:0});class it{constructor(e,t,i,s=null){this.elevationInfo=e,this.defaultZ=t,this.view=i,this.excludeGraphics=s}screenToMap(e){if(r(this.defaultZ))return this.view.sceneIntersectionHelper.intersectElevationFromScreen(u(e.x,e.y),this.elevationInfo,this.defaultZ,this.excludeGraphics);const t=this.view.sceneIntersectionHelper.intersectElevationFromScreen(u(e.x,e.y),this.elevationInfo,0,this.excludeGraphics);return r(t)&&(t.z=void 0),t}mapToScreen(e){const t=Me(e.x,e.y,Pe(this.view,e,this.elevationInfo),e.spatialReference);return this.view.toScreen(t)}}class st{constructor(e,t,i=[]){this.view=e,this.elevationInfo=t,this.exclude=i}screenToMap(e){const t=this.view.toMap(e,{exclude:this.exclude});return r(t)&&(t.z=Re(t,this.view,this.elevationInfo)),t}mapToScreen(e){let t=e;return r(this.elevationInfo)&&(t=Me(e.x,e.y,Pe(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(t)}}let rt=class extends(t.EventedMixin(f)){constructor(e){super(e),this.drawOperation=null,this.hasZ=!0,this.defaultZ=0,this.elevationInfo=null,this.snapToScene=null,this.mode=null,this.geometryType=null,this.type="draw-3d"}get updating(){var e,t;return null!=(e=null==(t=this.drawOperation)?void 0:t.updating)&&e}initialize(){const e=o(this.elevationInfo,{mode:this.hasZ?"absolute-height":"on-the-ground",offset:0});this.drawOperation=new et({view:this.view,manipulators:this.manipulators,geometryType:this.geometryType,drawingMode:this.mode,hasZ:this.hasZ,defaultZ:this.defaultZ,snapToSceneEnabled:this.snapToScene,sceneDrawSurface:new st(this.view,e),elevationDrawSurface:new it(e,this.defaultZ,this.view),hasM:!1,elevationInfo:e}),this.drawOperation.on("vertex-add",(e=>this.onVertexAdd(e))),this.drawOperation.on("vertex-remove",(e=>this.onVertexRemove(e))),this.drawOperation.on("vertex-update",(e=>this.onVertexUpdate(e))),this.drawOperation.on("cursor-update",(e=>this.onCursorUpdate(e))),this.drawOperation.on("complete",(e=>this.onComplete(e))),this.complete()}destroy(){this.drawOperation.destroy(),this.drawOperation=null,this._set("view",null)}onInputEvent(e){this.drawOperation.onInputEvent(e)}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}reset(){}get canRedo(){return this.drawOperation.canRedo}redo(){this.drawOperation.redo()}get canUndo(){return this.drawOperation.canUndo}undo(){this.drawOperation.undo()}completeCreateOperation(){this.drawOperation.complete()}activate(){}deactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}getVertexCoords(){return this.drawOperation.vertices}onVertexAdd(e){this.emit("vertex-add",e)}onVertexRemove(e){this.emit("vertex-remove",e)}onVertexUpdate(e){this.emit("vertex-update",e)}onCursorUpdate(e){this.emit("cursor-update",e)}onComplete(e){this.emit("complete",e)}};e([l()],rt.prototype,"drawOperation",void 0),e([l({readOnly:!0})],rt.prototype,"updating",null),e([l({constructOnly:!0,nonNullable:!0})],rt.prototype,"view",void 0),e([l({value:!0})],rt.prototype,"enabled",null),e([l({constructOnly:!0})],rt.prototype,"hasZ",void 0),e([l({constructOnly:!0,nonNullable:!0})],rt.prototype,"defaultZ",void 0),e([l({constructOnly:!0})],rt.prototype,"elevationInfo",void 0),e([l()],rt.prototype,"snapToScene",void 0),e([l({constructOnly:!0})],rt.prototype,"mode",void 0),e([l({constructOnly:!0})],rt.prototype,"geometryType",void 0),e([l({readOnly:!0})],rt.prototype,"type",void 0),rt=e([h("esri.views.3d.interactive.editingTools.draw.DrawTool")],rt);export{rt as D,it as E,Ne as P,st as S,Be as V,Ye as a,et as b,Ce as c,$e as d,Ie as e,Je as f};
