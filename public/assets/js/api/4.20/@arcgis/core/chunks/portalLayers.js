/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{l as r}from"./lazyLayerLoader.js";import t from"../portal/PortalItem.js";import{r as a,g as o,p as s,a as i}from"./layersLoader.js";import{h as n}from"./portalItemUtils.js";import"../core/lang.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./Message.js";import"./tslib.es6.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/promiseUtils.js";import"./JSONSupport.js";import"../core/Accessor.js";import"./deprecate.js";import"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/subclass.js";import"./arrayUtils.js";import"../core/scheduling.js";import"./write.js";import"./Loadable.js";import"./Promise.js";import"./reader.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../portal/Portal.js";import"../intl.js";import"./number.js";import"./jsonMap.js";import"./locale.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./jsonContext.js";import"./styleUtils2.js";import"./asyncUtils.js";function l(e){return!e.portalItem||e.portalItem instanceof t||(e={...e,portalItem:new t(e.portalItem)}),(r=e.portalItem,r.load().then(c).then(p)).then((r=>{const t={portalItem:e.portalItem,...r.properties},a=r.constructor;return Promise.resolve(new a(t))}));var r}function c(r){switch(r.type){case"Map Service":return function(e){return function(e){return a(e.url).then((e=>e.tileInfo))}(e).then((e=>e?{className:"TileLayer"}:{className:"MapImageLayer"}))}(r);case"Feature Service":return function(e){return m(e).then((e=>{if("object"==typeof e){const r={};return null!=e.id&&(r.layerId=e.id),{className:"FeatureLayer",properties:r}}return{className:"GroupLayer"}}))}(r);case"Feature Collection":return async function(e){await e.load();if(n(e,"Map Notes"))return{className:"MapNotesLayer"};if(n(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();if(1===o(r))return{className:"FeatureLayer"};return{className:"GroupLayer"}}(r);case"Scene Service":return function(e){return m(e).then((r=>{if("object"==typeof r){const t={};let o;if(null!=r.id?(t.layerId=r.id,o=`${e.url}/layers/${r.id}`):o=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const r={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const t of Object.keys(r))if(-1!==e.typeKeywords.indexOf(t))return{className:r[t]}}return a(o).then((e=>{let r="SceneLayer";const a={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&a[e.layerType]&&(r=a[e.layerType]),{className:r,properties:t}}))}return{className:"GroupLayer"}}))}(r);case"Image Service":return async function(e){var r,t,o;await e.load();const s=null!=(r=null==(t=e.typeKeywords)?void 0:t.map((e=>e.toLowerCase())))?r:[];if(s.indexOf("elevation 3d layer")>-1)return{className:"ElevationLayer"};if(s.indexOf("tiled imagery")>-1)return{className:"ImageryTileLayer"};const i=await e.fetchData(),n=null==i?void 0:i.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const l=await a(e.url);if("map"===(null==(o=l.cacheType)?void 0:o.toLowerCase()))return{className:"ImageryTileLayer"};return{className:"ImageryLayer"}}(r);case"Stream Service":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};case"Feed":return{className:"StreamLayer"};default:return Promise.reject(new e("portal:unknown-item-type","Unknown item type '${type}'",{type:r.type}))}}function p(e){return(0,r[e.className])().then((r=>({constructor:r,properties:e.properties})))}function m(e){return!e.url||e.url.match(/\/\d+$/)?Promise.resolve({}):e.load().then((()=>e.fetchData())).then((async r=>{if("Feature Service"===e.type)return u(r=await s(r,e.url));return o(r)>0?u(r):a(e.url).then(u)}))}function u(e){return 1===o(e)&&{id:i(e)}}export{l as fromItem,c as selectLayerClassPath};
