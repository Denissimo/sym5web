/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
import t from"../../Color.js";import{i as r}from"../../core/lang.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";async function n(r){await r.whenReady();const n=r.basemapView.baseLayerViews.map((t=>t.layer));if(!n.length){const n=getComputedStyle(r.container).backgroundColor,o=n&&new t(n);return r.get("background.color")||(o&&0!==o.a?o:null)||null}const o=(await r.takeScreenshot({format:"png",layers:n.toArray()})).data.data,a=o.length;let e=0,s=0,u=0,i=0,c=0,l=0;for(let t=0;t<a;t+=4){const r=o[t],n=o[t+1],a=o[t+2],h=o[t+3],g=h/255;e+=r*r*g,s+=n*n*g,u+=a*a*g,c+=g,h&&(i+=h,l++)}e=Math.round(Math.sqrt(e/c)),s=Math.round(Math.sqrt(s/c)),u=Math.round(Math.sqrt(u/c));return new t([e,s,u,i/l/255])}async function o(o){if(!o)return null;const a=await n(o);return r(a)?function(r){return function(r){let{r:n,g:o,b:a,a:e}=r;e<1&&(n=Math.round(e*n+255*(1-e)),o=Math.round(e*o+255*(1-e)),a=Math.round(e*a+255*(1-e)));return new t({r:n,g:o,b:a})}(r).isBright?"light":"dark"}(a):null}export{n as getBackgroundColor,o as getBackgroundColorTheme};
