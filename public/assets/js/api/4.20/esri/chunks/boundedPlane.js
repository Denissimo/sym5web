// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../core/has ../core/Logger ../core/mathUtils ../core/ObjectStack ./mat4 ./mat4f64 ./vec3 ./vec3f64 ../geometry/support/lineSegment ../geometry/support/plane ../geometry/support/ray ../geometry/support/vector ../geometry/support/vectorStacks".split(" "),function(f,H,ka,la,t,x,T,e,n,y,h,ma,z,k){function u(a=I){return{plane:h.create(a.plane),origin:n.clone(a.origin),basis1:n.clone(a.basis1),basis2:n.clone(a.basis2)}}function U(a,b,c){const d=na.get();d.origin=a;d.basis1=b;d.basis2=c;
d.plane=h.wrap(0,0,0,0);v(d);return d}function w(a,b=u()){return J(a.origin,a.basis1,a.basis2,b)}function V(a,b){e.copy(b.origin,a.origin);e.copy(b.basis1,a.basis1);e.copy(b.basis2,a.basis2);h.copy(a.plane,b.plane)}function J(a,b,c,d=u()){e.copy(d.origin,a);e.copy(d.basis1,b);e.copy(d.basis2,c);v(d);1E-6<Math.abs(e.dot(d.basis1,d.basis2)/(e.length(d.basis1)*e.length(d.basis2)))&&K.warn("fromValues()","Provided basis vectors are not perpendicular");1E-6<Math.abs(e.dot(d.basis1,p(d)))&&K.warn("fromValues()",
"Basis vectors and plane normal are not perpendicular");1E-6<Math.abs(-e.dot(p(d),d.origin)-d.plane[3])&&K.warn("fromValues()","Plane offset is not consistent with plane origin");return d}function v(a){h.fromVectorsAndPoint(a.basis2,a.basis1,a.origin,a.plane)}function L(a,b,c){a!==c&&w(a,c);a=e.scale(k.sv3d.get(),p(a),b);e.add(c.origin,c.origin,a);c.plane[3]-=b;return c}function W(a,b,c){M(b,c);L(c,A(a,a.origin),c);return c}function M(a,b=u()){const c=(a[2]-a[0])/2,d=(a[3]-a[1])/2;e.set(b.origin,
a[0]+c,a[1]+d,0);e.set(b.basis1,c,0,0);e.set(b.basis2,0,d,0);h.fromValues(0,0,1,0,b.plane);return b}function B(a,b,c){return h.intersectRay(a.plane,b,c)?X(a,c):!1}function Y(a,b,c){if(B(a,b,c))return c;a=N(a,b,k.sv3d.get());e.add(c,b.origin,e.scale(k.sv3d.get(),b.direction,e.distance(b.origin,a)/e.length(b.direction)));return c}function N(a,b,c){const d=C.get();var g=C.get();Z(a,b,d,g);g=Number.POSITIVE_INFINITY;for(const m of O){var l=P(a,m,D.get());const q=k.sv3d.get();h.intersectLineSegment(d,
l,q)&&(l=e.direction(k.sv3d.get(),b.origin,q),l=Math.abs(la.acosClamped(e.dot(b.direction,l))),l<g&&(g=l,e.copy(c,q)))}return g===Number.POSITIVE_INFINITY?Q(a,b,c):c}function Q(a,b,c){if(B(a,b,c))return c;const d=C.get(),g=C.get();Z(a,b,d,g);let l=Number.POSITIVE_INFINITY;for(const q of O){var m=P(a,q,D.get());const E=k.sv3d.get();h.intersectLineSegmentClamp(d,m,E)&&(m=ma.distance2(b,E),h.isPointInside(g,E)&&m<l&&(l=m,e.copy(c,E)))}F(a,b.origin)<l&&R(a,b.origin,c);return c}function R(a,b,c){var d=
h.projectPoint(a.plane,b,k.sv3d.get());b=y.projectPointClamp(aa(a,a.basis1),d,-1,1,k.sv3d.get());d=y.projectPointClamp(aa(a,a.basis2),d,-1,1,k.sv3d.get());e.subtract(c,e.add(k.sv3d.get(),b,d),a.origin);return c}function S(a,b,c){const {origin:d,basis1:g,basis2:l}=a,m=e.subtract(k.sv3d.get(),b,d);b=z.projectPointSignedLength(g,m);const q=z.projectPointSignedLength(l,m);a=z.projectPointSignedLength(p(a),m);return e.set(c,b,q,a)}function F(a,b){b=S(a,b,k.sv3d.get());const {basis1:c,basis2:d}=a;a=e.length(c);
var g=e.length(d);a=Math.max(Math.abs(b[0])-a,0);g=Math.max(Math.abs(b[1])-g,0);b=b[2];return a*a+g*g+b*b}function ba(a,b){return Math.sqrt(F(a,b))}function ca(a,b){let c=Number.NEGATIVE_INFINITY;for(const g of O){var d=P(a,g,D.get());d=y.distance2(d,b);d>c&&(c=d)}return Math.sqrt(c)}function da(a,b){return h.isPointInside(a.plane,b)&&X(a,b)}function ea(a,b,c,d){switch(c){case 0:e.copy(d,a.basis1);e.normalize(d,d);break;case 1:e.copy(d,a.basis2);e.normalize(d,d);break;case 2:e.copy(d,p(a))}return d}
function A(a,b){const c=-a.plane[3];return z.projectPointSignedLength(p(a),b)-c}function fa(a,b,c,d){const g=A(a,b);a=e.scale(oa,p(a),c-g);e.add(d,b,a);return d}function ha(a,b){return e.exactEquals(a.basis1,b.basis1)&&e.exactEquals(a.basis2,b.basis2)&&e.exactEquals(a.origin,b.origin)}function ia(a,b,c){a!==c&&w(a,c);x.invert(r,b);x.transpose(r,r);e.transformMat4(c.basis1,a.basis1,r);e.transformMat4(c.basis2,a.basis2,r);e.transformMat4(h.normal(c.plane),h.normal(a.plane),r);e.transformMat4(c.origin,
a.origin,b);h.setOffsetFromPoint(c.plane,c.origin,c.plane);return c}function ja(a,b,c,d){a!==d&&w(a,d);x.rotate(G,x.identity(G),b,c);e.transformMat4(d.basis1,a.basis1,G);e.transformMat4(d.basis2,a.basis2,G);v(d);return d}function p(a){return h.normal(a.plane)}function X(a,b){const c=e.subtract(k.sv3d.get(),b,a.origin);b=e.squaredLength(a.basis1);const d=e.squaredLength(a.basis2),g=e.dot(a.basis1,c);a=e.dot(a.basis2,c);return 0>-g-b&&0>g-b&&0>-a-d&&0>a-d}function aa(a,b){const c=D.get();e.copy(c.origin,
a.origin);e.copy(c.vector,b);return c}function P(a,b,c){const {basis1:d,basis2:g,origin:l}=a;a=e.scale(k.sv3d.get(),d,b.origin[0]);const m=e.scale(k.sv3d.get(),g,b.origin[1]);e.add(c.origin,a,m);e.add(c.origin,c.origin,l);a=e.scale(k.sv3d.get(),d,b.direction[0]);b=e.scale(k.sv3d.get(),g,b.direction[1]);e.scale(c.vector,e.add(a,a,b),2);return c}function Z(a,b,c,d){a=p(a);h.fromVectorsAndPoint(a,b.direction,b.origin,c);h.fromVectorsAndPoint(h.normal(c),a,b.origin,d)}const K=ka.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");
H=function(){this.plane=h.create();this.origin=n.create();this.basis1=n.create();this.basis2=n.create()};const I={plane:h.create(),origin:n.fromValues(0,0,0),basis1:n.fromValues(1,0,0),basis2:n.fromValues(0,1,0)},C=new t.ObjectStack(h.create),D=new t.ObjectStack(y.create),oa=n.create(),na=new t.ObjectStack(()=>({origin:null,basis1:null,basis2:null,plane:null})),O=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],r=T.create(),
G=T.create();t=Object.freeze({__proto__:null,BoundedPlaneClass:H,create:u,wrap:U,copy:w,copyWithoutVerify:V,fromValues:J,updateUnboundedPlane:v,elevate:L,setExtent:W,fromAABoundingRect:M,intersectRay:B,intersectRayClosestSilhouette:Y,closestPointOnSilhouette:N,closestPoint:Q,projectPoint:R,projectPointLocal:S,distance2:F,distance:ba,distanceToSilhouette:ca,extrusionContainsPoint:da,axisAt:ea,altitudeAt:A,setAltitudeAt:fa,equals:ha,transform:ia,rotate:ja,normal:p,UP:I});f.BoundedPlaneClass=H;f.UP=
I;f.altitudeAt=A;f.axisAt=ea;f.boundedPlane=t;f.closestPoint=Q;f.closestPointOnSilhouette=N;f.copy=w;f.copyWithoutVerify=V;f.create=u;f.distance=ba;f.distance2=F;f.distanceToSilhouette=ca;f.elevate=L;f.equals=ha;f.extrusionContainsPoint=da;f.fromAABoundingRect=M;f.fromValues=J;f.intersectRay=B;f.intersectRayClosestSilhouette=Y;f.normal=p;f.projectPoint=R;f.projectPointLocal=S;f.rotate=ja;f.setAltitudeAt=fa;f.setExtent=W;f.transform=ia;f.updateUnboundedPlane=v;f.wrap=U});