// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../core/has ../../core/Error ../../core/maybe ../HeightModelInfo ../../layers/support/arcgisLayerUrl".split(" "),function(g,x,e,t,h,u){function v(a,b,f){if(!k(a)||!k(b))return 4;if(null==a||null==b)return 0;if(!f&&a.heightUnit!==b.heightUnit)return 1;if(a.heightModel!==b.heightModel)return 2;switch(a.heightModel){case "gravity-related-height":return 0;case "ellipsoidal":return a.vertCRS===b.vertCRS?0:3;default:return 4}}function k(a){return null==a||null!=a.heightModel&&null!=a.heightUnit}
function n(a){const b=a.url&&u.parse(a.url);return(null!=(a.spatialReference&&a.spatialReference.vcsWkid)||!t.isSome(b)||"ImageServer"!==b.serverType)&&"heightModelInfo"in a&&a.heightModelInfo?a.heightModelInfo:p(a)?h.deriveUnitFromSR(w,a.spatialReference):null}function q(a){if("unknown"===a.type||!("capabilities"in a))return!1;switch(a.type){case "csv":case "feature":case "geojson":case "subtype-group":case "ogc-feature":case "wfs":return!0;case "imagery":case "map-image":case "map-notes":case "tile":case "vector-tile":case "scene":case null:return!1;
default:return!1}}function p(a){return q(a)?!!(a.capabilities&&a.capabilities.data&&a.capabilities.data.supportsZ):r(a)}function r(a){switch(a.type){case "building-scene":case "elevation":case "integrated-mesh":case "point-cloud":case "scene":case "voxel":case "slice":return!0}return!1}const w=new h({heightModel:"gravity-related-height"});g.deriveHeightModelInfoFromLayer=n;g.mayHaveHeightModelInfo=function(a){return null!=a.layers||r(a)||q(a)||"heightModelInfo"in a};g.rejectLayerError=function(a,
b,f){const d=n(a);var c=v(d,b,f);{let l=null;if(d){const m=h.deriveUnitFromSR(d,a.spatialReference).heightUnit;f||m===d.heightUnit||(l=new e("layerview:unmatched-height-unit",`The vertical units of the layer must match the horizontal units (${m})`,{horizontalUnit:m}))}if(!("heightModelInfo"in a&&null!=a.heightModelInfo||null!=a.spatialReference)&&p(a)||4===c||l)return new e("layerview:unsupported-height-model-info","The vertical coordinate system of the layer is not supported",{heightModelInfo:d,
error:l})}a=null;switch(c){case 1:c=d.heightUnit||"unknown";a=b.heightUnit||"unknown";a=new e("layerview:incompatible-height-unit",`The vertical units of the layer (${c}) must match the vertical units of the scene (${a})`,{layerUnit:c,sceneUnit:a});break;case 2:c=d.heightModel||"unknown";a=b.heightModel||"unknown";a=new e("layerview:incompatible-height-model",`The height model of the layer (${c}) must match the height model of the scene (${a})`,{layerHeightModel:c,sceneHeightModel:a});break;case 3:c=
d.vertCRS||"unknown",a=b.vertCRS||"unknown",a=new e("layerview:incompatible-vertical-datum",`The vertical datum of the layer (${c}) must match the vertical datum of the scene (${a})`,{layerDatum:c,sceneDatum:a})}return a?new e("layerview:incompatible-height-model-info","The vertical coordinate system of the layer is incompatible with the scene",{layerHeightModelInfo:d,sceneHeightModelInfo:b,error:a}):null};g.validateWebSceneError=function(a,b){if(!a)return null;if(!k(a))return new e("webscene:unsupported-height-model-info",
"The vertical coordinate system of the scene is not supported",{heightModelInfo:a});const f=a.heightUnit;a=h.deriveUnitFromSR(a,b).heightUnit;return f!==a?new e("webscene:incompatible-height-unit",`The vertical units of the scene (${f}) must match the horizontal units of the scene (${a})`,{verticalUnit:f,horizontalUnit:a}):null};Object.defineProperty(g,"__esModule",{value:!0})});