// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../PopupTemplate ../../core/Error ../../intl/messages ./support/utils".split(" "),function(m,g,p,q,r,e){function t(a){return h.apply(this,arguments)}function h(){h=g._asyncToGenerator(function*(a){const {layer:b,renderer:c}=a;yield b.load();a=c||b.renderer;if("simple"!==a.type)throw new q("simple-popup:invalid-parameters","renderer.type must be 'simple'");return{layer:b,renderer:a}});return h.apply(this,arguments)}function n(a,b){return k.apply(this,
arguments)}function k(){k=g._asyncToGenerator(function*(a,b,c="divide"){const {fieldInfos:d,expressionInfos:f}=yield e.getFieldAndExpressionInfos({renderer:a,layer:b,normFieldExpressionTemplate:c});return new p({content:yield e.getContentFromFieldInfos(b,{fieldInfos:d,expressionInfos:f}),expressionInfos:f,fieldInfos:d})});return k.apply(this,arguments)}function l(){l=g._asyncToGenerator(function*(a){const [{renderer:b,layer:c},d]=yield Promise.all([t(a),r.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]);
a=[];if(!e.getPrimaryVisualVariables(b).length)return null;const f={name:"simple",title:d.simple,value:yield n(b,c)};e.hasNormalizedField(b)&&a.push({name:"simple-percent",title:d.simpleNormFieldAsPercent,value:yield n(b,c,"percentage")});return{primaryTemplate:f,secondaryTemplates:a}});return l.apply(this,arguments)}m.getTemplates=function(a){return l.apply(this,arguments)};Object.defineProperty(m,"__esModule",{value:!0})});