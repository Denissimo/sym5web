// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../Color ../request ../core/Error ../core/lang ../core/Logger ../core/LRUCache ../core/maybe ../core/promiseUtils ../core/string ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/has ../core/jsonMap ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../layers/support/fieldUtils ./Renderer ./mixins/VisualVariablesMixin ../support/arcadeOnDemand ../symbols/CIMSymbol".split(" "),
function(q,p,D,z,E,w,n,F,t,G,H,u,O,P,Q,I,A,J,K,L,B,M){var y;const C=n.getLogger("esri.renderers.DictionaryRenderer"),N={type:"CIMSimpleLineCallout",lineSymbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",width:.5,color:[0,0,0,255]}]}};n=y=function(v){function x(c){c=v.call(this,c)||this;c._ongoingRequests=new Map;c._symbolCache=new F(100);c.config=null;c.fieldMap=null;c.scaleExpression=null;c.scaleExpressionTitle=null;c.url=null;c.type="dictionary";return c}q._inheritsLoose(x,v);var l=
x.prototype;l.writeData=function(c,a){c&&(a.scalingExpressionInfo={expression:c,returnType:"number"})};l.writeVisualVariables=function(c,a,d,b){null!=b&&b.origin||v.prototype.writeVisualVariables.call(this,c,a,d,b)};l.clone=function(){return new y({config:w.clone(this.config),scaleExpression:this.scaleExpression,scaleExpressionTitle:this.scaleExpressionTitle,fieldMap:w.clone(this.fieldMap),url:w.clone(this.url),visualVariables:w.clone(this.visualVariables)})};l.getSymbolAsync=function(){var c=q._asyncToGenerator(function*(a,
d){this._dictionaryPromise||(this._dictionaryPromise=this.fetchResources(d));try{var b=yield this._dictionaryPromise}catch(h){if(G.isAbortError(h))return this._dictionaryPromise=null}var e={};if(this.fieldMap)for(var k of this._symbolFields){var g=this.fieldMap[k];e[k]=g&&null!==a.attributes[g]&&void 0!==a.attributes[g]?""+a.attributes[g]:""}b=b(e,d);if(!b||"string"!==typeof b)return null;const m=H.numericHash(b).toString();if(e=this._symbolCache.get(m))return e.catch(()=>{this._symbolCache.pop(m)}),
e;k=b.split(";");b=[];e=[];for(const h of k)if(h&&0!==h.length)if(-1!==h.indexOf("po:")){var f=h.substr(3).split("|");3===f.length&&(k=f[0],g=f[1],f=f[2],"DashTemplate"===g?f=f.split(" ").map(r=>Number(r)):"Color"===g?(f=(new D(f)).toRgba(),f=[f[0],f[1],f[2],255*f[3]]):f=Number(f),e.push({primitiveName:k,propertyName:g,value:f}))}else if(-1!==h.indexOf("|"))for(const r of h.split("|"))this._itemNames.has(r)&&b.push(r);else this._itemNames.has(h)&&b.push(h);a=t.isSome(a.geometry)&&(a.geometry.hasZ||
"point"!==a.geometry.type)?!1:!0;d=this._cimPartsToCIMSymbol(b,e,a,d);this._symbolCache.put(m,d,1);return d});return function(a,d){return c.apply(this,arguments)}}();l.collectRequiredFields=function(){var c=q._asyncToGenerator(function*(a,d){yield this.collectVVRequiredFields(a,d);this.scaleExpression&&(yield J.collectArcadeFieldNames(a,d,this.scaleExpression));for(const b in this.fieldMap){const e=this.fieldMap[b];d.has(e)&&a.add(e)}});return function(a,d){return c.apply(this,arguments)}}();l.fetchResources=
function(){var c=q._asyncToGenerator(function*(a){if(this._dictionaryPromise)return this._dictionaryPromise;if(this.url){var d=t.isSome(a)?a.abortOptions:null;d=z(this.url+"/resources/styles/dictionary-info.json",{responseType:"json",query:{f:"json"},...d});var [{data:b}]=yield Promise.all([d,B.loadArcade()]);if(!b)throw this._dictionaryPromise=null,new E("esri.renderers.DictionaryRenderer","Bad dictionary data!");d=b.expression;var e=b.authoringInfo;this._refSymbolUrlTemplate=this.url+"/"+b.cimRefTemplateUrl;
this._itemNames=new Set(b.itemsNames);this._symbolFields=e.symbol;b={};if(this.config){const m=this.config;for(var k in m)b[k]=m[k]}if(e.configuration)for(var g of e.configuration)b.hasOwnProperty(g.name)||(b[g.name]=g.value);k=[];if(t.isSome(a)&&a.fields&&this.fieldMap)for(const m of this._symbolFields){const f=this.fieldMap[m];g=a.fields.filter(h=>h.name===f);0<g.length&&k.push({...g[0],name:m})}return this._dictionaryPromise=B.createDictionaryExpression(d,t.isSome(a)?a.spatialReference:null,k,
b).then(m=>{const f={scale:0};return(h,r)=>{h=m.repurposeFeature({geometry:null,attributes:h});f.scale=t.isSome(r)?r.scale:void 0;return m.evaluate({$feature:h,$view:f})}}).catch(m=>{C.error("Creating dictinoary expression failed:",m);return null})}C.error("no valid URL!")});return function(a){return c.apply(this,arguments)}}();l.getSymbol=function(){return null};l.getSymbols=function(){return[]};l.getAttributeHash=function(){return this.visualVariables&&this.visualVariables.reduce((c,a)=>c+a.getAttributeHash(),
"")};l.getMeshHash=function(){return`${this.url}-${JSON.stringify(this.fieldMap)}`};l.getSymbolFields=function(){return this._symbolFields};l._getSymbolPart=function(){var c=q._asyncToGenerator(function*(a,d){if(this._ongoingRequests.has(a))return this._ongoingRequests.get(a).then(e=>e.data);const b=this._refSymbolUrlTemplate.replace(/\{itemName\}/gi,a);d=z(b,{responseType:"json",query:{f:"json"},...d});this._ongoingRequests.set(a,d);try{return(yield d).data}catch(e){return this._ongoingRequests.delete(a),
Promise.reject(e)}});return function(a,d){return c.apply(this,arguments)}}();l._combineSymbolParts=function(c,a,d){if(!c||0===c.length)return null;const b={...c[0]};if(1<c.length){b.symbolLayers=[];for(const e of c)b.symbolLayers.unshift(...e.symbolLayers)}d&&(b.callout=N);return{type:"CIMSymbolReference",symbol:b,primitiveOverrides:a}};l._cimPartsToCIMSymbol=function(){var c=q._asyncToGenerator(function*(a,d,b,e){const k=Array(a.length);for(let g=0;g<a.length;g++)k[g]=this._getSymbolPart(a[g],e);
a=yield Promise.all(k);return new M({data:this._combineSymbolParts(a,d,b)})});return function(a,d,b,e){return c.apply(this,arguments)}}();q._createClass(x,[{key:"arcadeRequired",get:function(){return!0}}]);return x}(L.VisualVariablesMixin(K));p.__decorate([u.property({type:Object,json:{read:{source:"configuration"},write:{target:"configuration"}}})],n.prototype,"config",void 0);p.__decorate([u.property({type:Object,json:{write:!0}})],n.prototype,"fieldMap",void 0);p.__decorate([u.property({type:String,
json:{read:{source:"scalingExpressionInfo.expression"},write:!0}})],n.prototype,"scaleExpression",void 0);p.__decorate([A.writer("scaleExpression")],n.prototype,"writeData",null);p.__decorate([u.property({type:String,json:{read:{source:"scalingExpressionInfo.title"},write:{target:"scalingExpressionInfo.title",overridePolicy(v){return{enabled:!!v&&!!this.scaleExpression}}}}})],n.prototype,"scaleExpressionTitle",void 0);p.__decorate([u.property({type:String,json:{write:!0}})],n.prototype,"url",void 0);
p.__decorate([A.writer("visualVariables")],n.prototype,"writeVisualVariables",null);return n=y=p.__decorate([I.subclass("esri.renderers.DictionaryRenderer")],n)});