// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/maybe","../../../core/unitUtils","./constants"],function(t,J,e,r,K){function v(a,b){return e.isNone(b)?a:e.isSome(a)?Math.min(a,b):b}function n(a,b){return e.isNone(b)?a:e.isSome(a)?Math.max(a,b):b}function w(a,b){return e.isSome(a)&&e.isSome(b)?a*b:null}let D=function(){function a(){this._sampleCount=this._totalElevation=this._start=0}var b=a.prototype;b.copy=function(c){this._start=c._start;this._sampleCount=c._sampleCount;
this._totalElevation=c._totalElevation};b.reset=function(){this._totalElevation=this._sampleCount=this._start=0};b.restart=function(c,d){this._start=c;this._sampleCount=1;this._totalElevation=d};b.insert=function(c){++this._sampleCount;this._totalElevation+=c};J._createClass(a,[{key:"avgElevation",get:function(){return this._totalElevation/this._sampleCount}},{key:"isHole",get:function(){return 0===this._sampleCount}},{key:"start",get:function(){return this._start}}]);return a}();t.getBoundsInMeters=
function(a){let b=null,c=null,d=null;for(const f of a){if(e.isNone(f))continue;const {statistics:k,spatialReference:m}=f;e.isNone(k)||(a=r.getMetersPerUnitForSR(m),b=n(b,w(k.maxDistance,a)),a=r.getMetersPerVerticalUnitForSR(m),d=v(d,w(k.minElevation,a)),c=n(c,w(k.maxElevation,a)))}return{minDistance:0,maxDistance:e.unwrapOr(b,0),minElevation:e.unwrapOr(d,0),maxElevation:e.unwrapOr(c,0)}};t.getStatistics=function(a,b){const c=a.length;if(0===c)return null;var d=a[0],f=d.sampledZ;let k=f,m=f,q=0,E=
0,x=null,y=null,F=e.isSome(f)?f:0,G=0,H=0;f=e.isSome(f)?1:0;let z=0,A=0;const I=r.getMetersPerUnitForSR(b),L=r.getMetersPerVerticalUnitForSR(b),B=K.SLOPE_MIN_SAMPLE_DISTANCE/I,M=2*B,p=new D,g=new D;b=(h,N)=>{C();p.copy(g);g.reset();g.restart(p||h-p.start>M?h:p.start+B,N)};const C=()=>{if(!p.isHole&&!g.isHole){var h=r.convertUnit(Math.atan2((g.avgElevation-p.avgElevation)*L,(g.start-p.start)*I),"radians","degrees");0<h?(G+=h,x=n(x,h),z++):0>h&&(H-=h,y=n(y,-h),A++)}};e.isSome(d.sampledZ)&&b(d.distance,
d.sampledZ);for(d=1;d<c;++d){var u=a[d-1];const h=a[d];var l=h.sampledZ;e.isNone(l)?g.isHole||(C(),p.copy(g),g.reset()):(f++,F+=l,k=v(k,l),m=n(m,l),g.isHole||h.distance-g.start>=B?b(h.distance,l):g.insert(l),u=u.sampledZ,e.isSome(u)&&(l-=u,0<l?q+=l:0>l&&(E-=l)))}C();p.copy(g);g.reset();return 0===f?null:{maxDistance:a[c-1].distance,minElevation:k,maxElevation:m,avgElevation:0===f?null:F/f,elevationGain:q,elevationLoss:E,maxPositiveSlope:x,maxNegativeSlope:y,avgPositiveSlope:0===z?null:G/z,avgNegativeSlope:0===
A?null:H/A}};t.mergeStatistics=function(a){a=a.filter(e.isSome);var b=a.length;if(0===b)return null;var c=a[0];if(1===b)return c;b=c.maxDistance;let d=c.minElevation,f=c.maxElevation,k=c.maxPositiveSlope;c=c.maxNegativeSlope;for(let m=1;m<a.length;++m){const q=a[m];b=n(b,q.maxDistance);d=v(d,q.minElevation);f=n(f,q.maxElevation);k=n(k,q.maxPositiveSlope);c=n(c,q.maxNegativeSlope)}return{maxDistance:b,minElevation:d,maxElevation:f,avgElevation:null,elevationGain:null,elevationLoss:null,maxPositiveSlope:k,
maxNegativeSlope:c,avgPositiveSlope:null,avgNegativeSlope:null}};Object.defineProperty(t,"__esModule",{value:!0})});