// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Accessor ../../../core/Error ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../geometry/coordinateFormatter ../../../geometry/projection ../../../geometry/support/spatialReferenceUtils ../../../geometry/support/webMercatorUtils ./coordinateConversionUtils ../../../geometry/SpatialReference".split(" "),
function(t,g,e,x,p,k,A,B,C,D,y,l,u,z,v,h,q){e=function(w){function n(a){a=w.call(this,a)||this;a.conversionInfo=null;a.coordinateSegments=null;a.defaultPattern=null;a.name=null;a.viewModel=null;return a}t._inheritsLoose(n,w);var m=n.prototype;m.convert=function(a,b){if(!h.isValidPoint(a))return Promise.reject(new p("format:invalid-point","Could not convert invalid point.",{point:a}));const c=this.get("conversionInfo.convert");return c?Promise.resolve().then(()=>c(a)):this._project(a,this.spatialReference,
b).then(f=>this._getCoordinate(f).then(d=>({location:f,coordinate:d})))};m.getConversionStrategy=function(){const a=this._viewSpatialReference;return this.get("conversionInfo.convert")||this.get("viewModel.formatterAvailable")||"xy"===this.name&&(a.isWebMercator||a.isWGS84)||"basemap"===this.name?"client":"server"};m.getDisplayCoordinate=function(a){if(!a)return null;if(!this.coordinateSegments||!this.currentPattern)return a;let b=this.currentPattern;a=this._getSegmentMatches(a,!1);for(let c=this.coordinateSegments.length-
1;0<=c;c--)b=b.replace(this.coordinateSegments[c].alias,a[c]);return b};m.parseUserInput=function(a){let b=this.defaultPattern.replace(this._additionalCharactersPattern,"");a=a.replace(this._additionalCharactersPattern,"");a=this._getSegmentMatches(a,!0);for(let c=this.coordinateSegments.length-1;0<=c;c--)b=b.replace(this.coordinateSegments[c].alias,a[c]);return b};m._getSegmentMatches=function(a,b){const c=[];for(let r=0;r<this.coordinateSegments.length;r++){var f=this.coordinateSegments[r],d=a.match(f.searchPattern);
d?(d=d[0],a=a.replace(d,"").trim(),f.substitution&&(f=b?f.substitution.input(d):f.substitution.output(d))&&(d=f),c.push(d)):c.push("")}return c};m.reverseConvert=function(a){const b=this.parseUserInput(a),c=this.get("conversionInfo.reverseConvert"),f=h.isSupportedNotation(this.name);let d;if(c)d=c(b);else if("xy"===this.name||"basemap"===this.name)d=h.fromXY(b,this.spatialReference);else if(this.viewModel.formatterAvailable)switch(this.name){case "dd":case "ddm":case "dms":d=l.fromLatitudeLongitude(b,
this.spatialReference);break;case "mgrs":d=l.fromMgrs(b,this.spatialReference,"automatic");break;case "utm":d=l.fromUtm(b,this.spatialReference,"latitude-band-indicators");break;case "usng":d=l.fromUsng(b,this.spatialReference);break;default:d=null}else if(f)return h.fromGeoCoordinateString({coordinate:b,spatialReference:this.spatialReference,formatName:this.name,geometryServicePromise:this.get("viewModel.geometryServicePromise")});return d?this._project(d,this._viewSpatialReference):Promise.reject(new p("format:invalid-input",
"Could not parse input into point.",{userInput:a}))};m._getCoordinate=function(a){var b=this.get("viewModel.view.scale");if(!h.isValidPoint(a))return Promise.reject(new p("format:invalid-point","Could not transform invalid point into coordinate.",{point:a}));if(this.get("viewModel.formatterAvailable")||"basemap"===this.name||"xy"===this.name)switch(this.name){case "dd":case "ddm":case "dms":return b=h.getDegreePrecision(b),Promise.resolve(l.toLatitudeLongitude(a,this.name,b));case "mgrs":return Promise.resolve(l.toMgrs(a,
"automatic",5,!1));case "usng":return Promise.resolve(l.toUsng(a,5,!1));case "utm":return Promise.resolve(l.toUtm(a,"latitude-band-indicators",!0));default:return Promise.resolve(h.pointToCoordinate(a,b))}return h.isSupportedNotation(this.name)?h.toGeoCoordinateString({formatName:this.name,location:a,geometryServicePromise:this.get("viewModel.geometryServicePromise")}):Promise.resolve(h.pointToCoordinate(a,b))};m._project=function(a,b,c){return z.equals(a.spatialReference,b)||!b?Promise.resolve(a):
this.get("viewModel.formatterAvailable")&&u.isLoaded()?Promise.resolve(u.project(a,b)):this.get("viewModel.formatterAvailable")?null:v.canProject(a,b)?Promise.resolve(v.project(a,b)):h.project({location:a,spatialReference:b,geometryServicePromise:this.get("viewModel.geometryServicePromise"),scale:this.get("viewModel.view.scale")},c).then(f=>f.location)};t._createClass(n,[{key:"currentPattern",get:function(){return this._get("currentPattern")||this._get("defaultPattern")},set:function(a){this._set("currentPattern",
a)}},{key:"hasDisplayProperties",get:function(){return!(!this.defaultPattern||!this.coordinateSegments)}},{key:"spatialReference",get:function(){const a=this.get("conversionInfo.spatialReference")||q.WGS84;return"basemap"===this.name?this._viewSpatialReference:a},set:function(a){void 0===a&&this._clearOverride("spatialReference");this._override("spatialReference",a)}},{key:"_viewSpatialReference",get:function(){return this.get("viewModel.view.spatialReference")||q.WGS84}},{key:"_additionalCharactersPattern",
get:function(){var a=this.get("coordinateSegments");if(!a)return null;a=a.map(b=>b.alias);a=this.currentPattern.replace(new RegExp(`["nsew${a.join()}]`,"gi"),"").replace(/ /g,"");return new RegExp(`[${a}]`,"g")}}]);return n}(x);g.__decorate([k.property()],e.prototype,"conversionInfo",void 0);g.__decorate([k.property()],e.prototype,"coordinateSegments",void 0);g.__decorate([k.property()],e.prototype,"currentPattern",null);g.__decorate([k.property()],e.prototype,"defaultPattern",void 0);g.__decorate([k.property({readOnly:!0})],
e.prototype,"hasDisplayProperties",null);g.__decorate([k.property()],e.prototype,"name",void 0);g.__decorate([k.property({type:q})],e.prototype,"spatialReference",null);g.__decorate([k.property()],e.prototype,"viewModel",void 0);g.__decorate([k.property({readOnly:!0})],e.prototype,"_viewSpatialReference",null);g.__decorate([k.property({readOnly:!0})],e.prototype,"_additionalCharactersPattern",null);return e=g.__decorate([y.subclass("esri.widgets.CoordinateConversion.support.Format")],e)});