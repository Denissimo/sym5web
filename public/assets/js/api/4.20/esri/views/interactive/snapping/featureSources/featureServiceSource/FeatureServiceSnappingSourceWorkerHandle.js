// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/HandleOwner ../../../../../core/maybe ../../../../../core/promiseUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/Logger ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/workers/WorkerHandle ../../../../../geometry/Point ../../../../../geometry/support/typeUtils".split(" "),
function(f,e,h,x,n,y,p,F,G,H,I,z,A,B,C){f.FeatureServiceSnappingSourceWorkerHandle=function(k){function g(b){b=k.call(this,b)||this;b.availability=0;b.workerHandleUpdating=!0;b.editId=0;return b}e._inheritsLoose(g,k);var d=g.prototype;d.destroy=function(){this.workerHandle.destroy()};d.initialize=function(){this.workerHandle=new D(this.schedule);this.handles.add([this.workerHandle.on("notify-updating",({updating:b})=>this.workerHandleUpdating=b),this.workerHandle.on("notify-availability",({availability:b})=>
this._set("availability",b))])};d.setup=function(){var b=e._asyncToGenerator(function*(a,c){const l=this.serviceInfoFromLayer(a.layer);n.isNone(l)||(a={configuration:this.convertConfiguration(a.configuration),serviceInfo:l,spatialReference:a.spatialReference.toJSON()},yield this.updatingHandles.addPromise(this.workerHandle.invokeMethod("setup",a,c)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},c)))});return function(a,c){return b.apply(this,arguments)}}();d.configure=
function(){var b=e._asyncToGenerator(function*(a,c){a=this.convertConfiguration(a);yield this.updatingHandles.addPromise(this.workerHandle.invokeMethod("configure",a,c));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},c))});return function(a,c){return b.apply(this,arguments)}}();d.refresh=function(){var b=e._asyncToGenerator(function*(a){yield this.updatingHandles.addPromise(this.workerHandle.invokeMethod("refresh",{},a));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",
{},a))});return function(a){return b.apply(this,arguments)}}();d.fetchCandidates=function(){var b=e._asyncToGenerator(function*(a,c){a={distance:a.distance,point:a.coordinateHelper.toPoint(a.point,new B).toJSON(),types:a.types,filter:n.isSome(a.filter)?a.filter.createQuery().toJSON():null};return this.workerHandle.invoke(a,c)});return function(a,c){return b.apply(this,arguments)}}();d.updateTiles=function(){var b=e._asyncToGenerator(function*(a,c){a={tiles:a.tiles,tileInfo:n.isSome(a.tileInfo)?a.tileInfo.toJSON():
null,tileSize:a.tileSize};yield this.updatingHandles.addPromise(this.workerHandle.invokeMethod("updateTiles",a,c));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},c))});return function(a,c){return b.apply(this,arguments)}}();d.applyEdits=function(){var b=e._asyncToGenerator(function*(a,c){var l,r,t,u,v,w,q=this.editId++;yield this.updatingHandles.addPromise(this.workerHandle.invokeMethod("beginApplyEdits",{id:q},c));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",
{},c));a=yield this.updatingHandles.addPromise(y.whenOrAbort(a.result,c));q={id:q,edits:{addedFeatures:null!=(l=null==(r=a.addedFeatures)?void 0:r.map(({objectId:m})=>m))?l:[],deletedFeatures:null!=(t=null==(u=a.deletedFeatures)?void 0:u.map(({objectId:m,globalId:E})=>({objectId:m,globalId:E})))?t:[],updatedFeatures:null!=(v=null==(w=a.updatedFeatures)?void 0:w.map(({objectId:m})=>m))?v:[]}};yield this.updatingHandles.addPromise(this.workerHandle.invokeMethod("endApplyEdits",q,c));this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",
{},c))});return function(a,c){return b.apply(this,arguments)}}();d.getDebugInfo=function(b){return this.workerHandle.invokeMethod("getDebugInfo",{},b)};d.convertConfiguration=function(b){return{filter:n.isSome(b.filter)?b.filter.toJSON():null,customParameters:b.customParameters}};d.serviceInfoFromLayer=function(b){var a;return"multipatch"===b.geometryType||"mesh"===b.geometryType?null:{url:b.parsedUrl.path,fields:b.fields.map(c=>c.toJSON()),geometryType:C.featureGeometryTypeKebabDictionary.toJSON(b.geometryType),
capabilities:b.capabilities,objectIdField:b.objectIdField,globalIdField:b.globalIdField,spatialReference:b.spatialReference.toJSON(),timeInfo:null==(a=b.timeInfo)?void 0:a.toJSON()}};e._createClass(g,[{key:"updating",get:function(){return this.updatingHandles.updating||this.workerHandleUpdating}}]);return g}(x.HandleOwner);h.__decorate([p.property({constructOnly:!0})],f.FeatureServiceSnappingSourceWorkerHandle.prototype,"schedule",void 0);h.__decorate([p.property({readOnly:!0})],f.FeatureServiceSnappingSourceWorkerHandle.prototype,
"updating",null);h.__decorate([p.property({readOnly:!0})],f.FeatureServiceSnappingSourceWorkerHandle.prototype,"availability",void 0);h.__decorate([p.property()],f.FeatureServiceSnappingSourceWorkerHandle.prototype,"workerHandleUpdating",void 0);f.FeatureServiceSnappingSourceWorkerHandle=h.__decorate([z.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],f.FeatureServiceSnappingSourceWorkerHandle);let D=function(k){function g(d){return k.call(this,
"FeatureServiceSnappingSourceWorker","fetchCandidates",d,{strategy:"dedicated"})||this}e._inheritsLoose(g,k);g.prototype.getTransferList=function(){return[]};return g}(A.WorkerHandle);Object.defineProperty(f,"__esModule",{value:!0})});