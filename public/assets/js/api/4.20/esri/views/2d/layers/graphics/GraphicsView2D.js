// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/HandleOwner ../../../../core/has ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/Logger ../../../../core/jsonMap ../../../../core/accessorSupport/decorators/subclass ../../../../geometry/Polygon ../../../../geometry/SpatialReference ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/coordsUtils ../../../../geometry/support/jsonUtils ../../../../geometry/support/normalizeUtilsSync ../../../../geometry/support/spatialReferenceUtils ../../../../layers/graphics/data/projectionSupport ../../../../symbols/cim/cimSymbolUtils ../../../../symbols/support/defaults ../../engine/webgl/definitions ../../engine/webgl/GraphicTile ../../engine/webgl/TileData ../../engine/webgl/WGLDisplayObject ../../engine/webgl/mesh/MeshData ../../engine/webgl/mesh/factories/WGLMeshFactory ../../engine/webgl/mesh/templates/WGLTemplateStore ../../engine/webgl/util/BidiText ../../engine/webgl/util/Matcher ../features/schemaUtils ../features/support/AttributeStore ../features/support/ComputedAttributeStorage ../features/support/GraphicsReader ../features/support/TileStore ./GraphicStore ./graphicsUtils ../../../layers/GraphicsView ../../../webgl/capabilities".split(" "),
function(n,x,r,L,ja,B,k,M,z,ka,la,ma,N,O,P,D,Q,q,R,G,H,S,E,T,U,I,V,W,X,Y,Z,aa,J,ba,ca,da,ea,fa,l,ha,ia){function F(A,t,e){if(e.has(A))return e.get(A);t={tile:t,addedOrModified:[],removed:[]};e.set(A,t);return t}r=function(A){function t(a){a=A.call(this,a)||this;a._storage=new ca.ComputedAttributeStorage;a._displayIds=new Map;a._controller=new AbortController;a._tiles=new Map;a._graphicStoreUpdate=!1;a._graphicsSet=new Set;a._matcher=Promise.resolve(null);a._tileUpdateSet=new Set;a._tilesToUpdate=
new Map;a._graphicIdToAbortController=new Map;a._attached=!1;a._highlightIds=new Map;a._updatingGraphicsTimer=null;a._hashToExpandedSymbol=new Map;a._hashTpExpandedSymbolPromise=new Map;a._processing=!1;a._needsProcessing=!1;a._pendingUpdate={added:new Set,updated:new Set,removed:new Set};a.lastUpdateId=-1;a.updateRequested=!1;a.graphicUpdateHandler=a.graphicUpdateHandler.bind(n._assertThisInitialized(a));return a}n._inheritsLoose(t,A);var e=t.prototype;e._createMatcher=function(a,b){a&&(a=J.createMatcherSchema({indexCount:0,
fields:{}},"feature",a),this._matcher=aa.createMatcher(a,b,null))};e._createDisplayId=function(a){this._displayIds.has(a)||this._displayIds.set(a,this._storage.createDisplayId());return this._displayIds.get(a)};e.initialize=function(){this._tileStore=new ea(this.view.featuresTilingScheme);this._attributeStore=new ba["default"]({type:"local",initialize:b=>Promise.resolve(this.container.attributeView.initialize(b)),update:b=>this.container.attributeView.requestUpdate(b),render:()=>this.container.requestRender()},
ia());this._graphicStore=new fa(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,b=>{this._createDisplayId(b.uid);this._setFilterState(b.uid,b.visible)},b=>{const c=this._displayIds.get(b.uid);this._displayIds.delete(b.uid);this._storage.releaseDisplayId(c)});const a=new Y.WGLTemplateStore(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._createMatcher(this.renderer,a);this._meshFactory=new X.WGLMeshFactory(null,this.uid,
a);this._templateStore=a;this.watch("renderer",b=>{this._createMatcher(b,a);for(const c of this.graphics)this._pendingUpdate.updated.add(c);this.requestUpdate()});this._tileStore.on("update",this._onTileUpdate.bind(this));this.container.on("attach",()=>{0<this.graphics.items.length&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]});this.handles.add(this.graphics.on("change",b=>this._graphicsChangeHandler(b)),"graphics");this._attached=!0;this.notifyChange("updating")})};
e.destroy=function(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating"));this._controller.abort();this.container.destroy();this._set("graphics",null);this._graphicStore.clear();this._tileStore.destroy();this._attributeStore=null;this._hashToExpandedSymbol.clear();this.renderer=this.view=null};e.hitTest=function(a,b){if(!this.view||!this.view.position)return Promise.resolve(null);a=this.view.toMap(M.createScreenPoint(a,
b));return this.searchFeatures(a).then(c=>c&&c.length?c[0]:null)};e.searchFeatures=function(){var a=n._asyncToGenerator(function*(b,c=2){return this._graphicStore.hitTest(b.x,b.y,c,this.view.state.resolution,this.view.state.rotation)});return function(b){return a.apply(this,arguments)}}();e.update=function(a){k.throwIfAborted(this._controller.signal);a=a.state;const b=this.view.featuresTilingScheme.getClosestInfoForScale(a.scale).level;this._graphicStore.updateLevel(b);this._tileStore.setViewState(a);
this._graphicStoreUpdate=!0;this.updateRequested=!1;0<this._pendingUpdate.updated.size&&(this._processing?this._needsProcessing=!0:this._updateGraphics())};e.viewChange=function(){this.requestUpdate()};e.requestUpdate=function(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())};e.processUpdate=function(a){this.updateRequested&&(this.updateRequested=!1,this.update(a))};e.graphicUpdateHandler=function(a){const {graphic:b,property:c,newValue:d}=a;switch(c){case "geometry":case "symbol":this._pendingUpdate.updated.add(b);
this.requestUpdate();break;case "visible":this._setFilterState(b.uid,d),this._attributeStore.sendUpdates()}};e.addHighlight=function(a){for(const b of a)this._highlightIds.has(b)?(a=this._highlightIds.get(b),this._highlightIds.set(b,a+1)):this._highlightIds.set(b,1);this._updateHighlight()};e.removeHighlight=function(a){for(const b of a)this._highlightIds.has(b)&&(a=this._highlightIds.get(b)-1,0===a?this._highlightIds.delete(b):this._highlightIds.set(b,a));this._updateHighlight()};e._updateHighlight=
function(){const a=Array.from(this._highlightIds.keys()),b=a.map(c=>this._displayIds.get(c));this._attributeStore.setHighlight(a,b)};e._getIntersectingTiles=function(a){a=this._graphicStore.getBounds(a);if(!a||0===D.width(a)||0===D.height(a))return[];const b=l.intersectingInternationalDateline(a,this.view.spatialReference);return B.isSome(b)?[...this._tileStore.boundsIntersections(b[0]),...this._tileStore.boundsIntersections(b[1])]:this._tileStore.boundsIntersections(a)};e._updateTile=function(){var a=
n._asyncToGenerator(function*(b){k.throwIfAborted(this._controller.signal);const c=b.tile;var d=this._getGraphicsData(this._templateStore,c,b.addedOrModified);d=yield this._processGraphics(c,d);k.throwIfAborted(this._controller.signal);this._patchTile(c.key,{type:"update",addOrUpdate:d,remove:b.removed,end:!0,clear:!1});return d});return function(b){return a.apply(this,arguments)}}();e._patchTile=function(a,b){this._tiles.has(a)&&(a=this._tiles.get(a),this.container.onTileData(a,b),this.container.requestRender())};
e._graphicsChangeHandler=function(a){const b=this._pendingUpdate;for(const c of a.added)b.added.add(c);for(const c of a.moved)b.updated.add(c);for(const c of a.removed)this._pendingUpdate.added.has(c)?b.added.delete(c):b.removed.add(c);this._processing?this._needsProcessing=!0:this._updateGraphics()};e._getGraphicsToUpdate=function(){const a={added:[],removed:[],updated:[]};if(!this.graphics)return a;const b=this._pendingUpdate;for(const c of this.graphics.items)b.added.has(c)?a.added.push(c):b.updated.has(c)&&
a.updated.push(c);for(const c of b.removed)this._graphicStore.has(c)&&a.removed.push(c);b.added.clear();b.removed.clear();b.updated.clear();return a};e._updateGraphics=function(){var a=n._asyncToGenerator(function*(){this._processing=!0;const {added:b,removed:c,updated:d}=this._getGraphicsToUpdate(),g=this._tilesToUpdate;try{if(!this._graphicStoreUpdate){var f=this.view.state,h=this.view.featuresTilingScheme.getClosestInfoForScale(f.scale).level;this._graphicStore.updateLevel(h);this._tileStore.setViewState(f)}f=
[];const u=Array(b.length+c.length);for(h=0;h<d.length;h++){var p=d[h];const m=this._getIntersectingTiles(p);for(const y of m){var v=y.id;F(v,y,g).removed.push(this._displayIds.get(p.uid))}f.push(this._updateGraphic(p,null));u[h]=p}var C=d.length;for(p=0;p<b.length;p++){const m=b[p];u[C+p]=m;this._graphicsSet.add(m);f.push(this._addGraphic(m))}for(const m of c){this._abortProcessingGraphic(m.uid);const y=this._getIntersectingTiles(m);for(const K of y)v=K.id,F(v,K,g).removed.push(this._displayIds.get(m.uid));
this._graphicsSet.delete(m);this._graphicStore.remove(m)}this._flipUpdatingGraphics();yield Promise.all(f);let w;for(C=0;C<u.length;C++){w=u[C];const m=this._getIntersectingTiles(w);for(const y of m)v=y.id,F(v,y,g).addedOrModified.push(w)}this._graphicStore.updateZ();v=[];for(const [,m]of g)v.push(this._updateTile(m));yield Promise.all(v)}catch(u){k.isAbortError(u)}for(const u of c)try{const w=yield this._getSymbolForGraphic(u,{});w&&this._hashToExpandedSymbol.delete(w.hash())}catch(w){k.isAbortError(w)}g.clear();
this.notifyChange("updating");this._processing=!1;this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())});return function(){return a.apply(this,arguments)}}();e._getArcadeInfo=function(a){const b=(a.attributes?Object.keys(a.attributes):[]).map(c=>({name:c,alias:c,type:"string"===typeof a.attributes[c]?"esriFieldTypeString":"esriFieldTypeDouble"}));return B.isNone(a.geometry)?null:{geometryType:q.getJsonType(a.geometry),spatialReference:P.fromJSON(a.geometry.spatialReference),fields:b}};
e._getSymbolForGraphic=function(){var a=n._asyncToGenerator(function*(b,c){k.throwIfAborted(this._controller.signal);return B.isSome(b.symbol)?b.symbol:B.isSome(this.renderer)?this.renderer.getSymbolAsync(b,{scale:this.view.scale,abortOptions:c}):this._getNullSymbol(b)});return function(b,c){return a.apply(this,arguments)}}();e._getSymbolResources=function(){var a=n._asyncToGenerator(function*(b,c){k.throwIfAborted(this._controller.signal);if(!this.container.stage)return null;var d=yield this._getSymbolForGraphic(b,
c),g=d.hash();let f=this._hashToExpandedSymbol.get(g);if(!f){let h=this._hashTpExpandedSymbolPromise.get(g);if(h)f=yield h,k.throwIfAborted(this._controller.signal);else{b=this._getArcadeInfo(b);d=J.createSymbolSchema(d);h=S.expandSymbol(d,b,c);this._hashTpExpandedSymbolPromise.set(g,h);try{f=yield h,this._hashTpExpandedSymbolPromise.delete(g),this._hashToExpandedSymbol.set(g,f)}catch(p){this._hashTpExpandedSymbolPromise.delete(g),k.throwIfAborted(p)}}}if("esriTS"===f.type){c=[];[g]=Z.bidiText(f.text);
for(d=0;d<g.length;d++)c.push(g.charCodeAt(d));[{mosaicItem:c}]=yield this.container.getMaterialItems([{symbol:f,id:0,glyphIds:c}]);return{symbol:f,mosaicItem:c}}return{symbol:f,mosaicItem:null}});return function(b,c){return a.apply(this,arguments)}}();e._projectAndNormalizeGeometry=function(){var a=n._asyncToGenerator(function*(b,c){k.throwIfAborted(this._controller.signal);if(B.isNone(b.geometry)||"mesh"===b.geometry.type)return null;var d=b.geometry;q.isPolygon(d)?d.rings=d.rings:q.isPolyline(d)?
d.paths=d.paths:q.isExtent(d)&&(b=yield this._getSymbolForGraphic(b,c),k.throwIfAborted(this._controller.signal),d=l.isMarkerSymbol(b.type)||l.isTextSymbol(b.type)?d.center:O.fromExtent(d));yield H.checkProjectionSupport(d.spatialReference,this.view.spatialReference);b=R.normalizeCentralMeridianSync(d);d=H.project(b,d.spatialReference,this.view.spatialReference);Q.closeRingsAndFixWinding(d);return d});return function(b,c){return a.apply(this,arguments)}}();e._onTileUpdate=function(a){const b=G.getInfo(this.view.spatialReference);
if(a.added&&0<a.added.length)for(const c of a.added)this._addNewTile(c,b);if(a.removed&&0<a.removed.length)for(const c of a.removed)this._removeTile(c.key)};e._addGraphic=function(){var a=n._asyncToGenerator(function*(b){this._abortProcessingGraphic(b.uid);k.throwIfAborted(this._controller.signal);var c=k.createAbortController();this._graphicIdToAbortController.set(b.uid,c);c={signal:c.signal};try{yield this._addOrUpdateGraphic(b,c),k.throwIfAborted(this._controller.signal),this._graphicIdToAbortController.delete(b.uid)}catch(d){if(this._graphicIdToAbortController.delete(b.uid),
!k.isAbortError(d))throw d;}});return function(b){return a.apply(this,arguments)}}();e._updateGraphic=function(){var a=n._asyncToGenerator(function*(b,c){k.throwIfAborted(this._controller.signal);const d=this._projectAndNormalizeGeometry(b,c);c=this._getSymbolResources(b,c);const [g,f]=yield Promise.all([d,c]);k.throwIfAborted(this._controller.signal);this._graphicStore.addOrModify(b,f,g)});return function(b,c){return a.apply(this,arguments)}}();e._addOrUpdateGraphic=function(){var a=n._asyncToGenerator(function*(b,
c){k.throwIfAborted(this._controller.signal);const d=this._projectAndNormalizeGeometry(b,c);c=this._getSymbolResources(b,c);try{const [g,f]=yield Promise.all([d,c]);k.throwIfAborted(this._controller.signal);this._addProjectedGraphic(b,f,g)}catch(g){if(!k.isAbortError(g))throw g;}});return function(b,c){return a.apply(this,arguments)}}();e._addProjectedGraphic=function(a,b,c){this._graphicsSet.has(a)&&this._graphicStore.addOrModify(a,b,c)};e._addTile=function(a){var b=this.view.featuresTilingScheme.getTileBounds(D.create(),
a);b=new U.GraphicTile(a,b);this._tiles.set(a,b);this.container.addChild(b);return b};e._addNewTile=function(a,b){const c=this._addTile(a.key),d=this._graphicStore.queryTileData(this._templateStore,a);if(b){b=Math.round((b.valid[1]-b.valid[0])/a.resolution);for(const f of d)f.geometry&&(q.isPoint(f.geometry)||q.isMultipoint(f.geometry))&&this._wrapPoints(f,b)}const g=a.key;this._tileUpdateSet.add(a.key);this.notifyChange("updating");this._processGraphics(a,d).then(f=>{c.patch({type:"update",clear:!1,
addOrUpdate:f,remove:[],end:!0});this._tileUpdateSet.delete(g);this.notifyChange("updating")}).catch(f=>{this._tileUpdateSet.delete(g);this.notifyChange("updating");if(!k.isAbortError(f))throw f;})};e._removeTile=function(a){if(this._tiles.has(a)){var b=this._tiles.get(a);this.container.removeChild(b);b.destroy();this._tiles.delete(a)}};e._setFilterState=function(a,b){const c=this._displayIds.get(a);a=this._attributeStore.getHighlightFlag(a);this._attributeStore.setData(c,0,0,a|(b?T.FILTER_FLAG_0:
0))};e._getGraphicsData=function(a,b,c){const d=G.getInfo(this.view.spatialReference);a=this._graphicStore.getGraphicsData(a,b,c);if(d){b=Math.round((d.valid[1]-d.valid[0])/b.resolution);for(const g of a)g.geometry&&(q.isPoint(g.geometry)||q.isMultipoint(g.geometry))&&this._wrapPoints(g,b)}return a};e._wrapPoints=function(a,b){const c=a.geometry;q.isMultipoint(c)?this._wrapMultipoint(c,b):this._wrapPoint(a,b)};e._wrapMultipoint=function(a,b){var c=a.points;const d=[];let g=0,f=0;for(const [h,p]of c)d.push([h+
g,p]),g=0,b===l.TILE_SIZE?(c=5*l.PIXEL_BUFFER,h+f<c?(d.push([b,0]),g=-b):h+f>l.TILE_SIZE-c&&(d.push([-b,0]),g=b)):h+f<-l.PIXEL_BUFFER?(d.push([b,0]),g=-b):h+f>l.TILE_SIZE+l.PIXEL_BUFFER&&(d.push([-b,0]),g=b),f+=h;a.points=d};e._wrapPoint=function(a,b){const c=a.geometry;if(b===l.TILE_SIZE){const d=5*l.PIXEL_BUFFER;c.x<d?a.geometry={points:[[c.x,c.y],[b,0]]}:c.x>l.TILE_SIZE-d&&(a.geometry={points:[[c.x,c.y],[-b,0]]})}else c.x<-l.PIXEL_BUFFER?a.geometry={points:[[c.x,c.y],[b,0]]}:c.x>l.TILE_SIZE+l.PIXEL_BUFFER&&
(a.geometry={points:[[c.x,c.y],[-b,0]]})};e._processGraphics=function(){var a=n._asyncToGenerator(function*(b,c,d){if(!c||!c.length||!this._meshFactory)return null;c=da.GraphicsReader.from(c);const g=this._meshFactory,f=yield this._matcher;yield g.analyzeGraphics(c,f,null,null,d);this._attributeStore.sendUpdates();return this._processAnalyzedGraphics(b,c)});return function(b,c,d){return a.apply(this,arguments)}}();e._processAnalyzedGraphics=function(a,b){const c=this._meshFactory;var d=b.getSize();
b=b.getCursor();const g=new W.MeshData(a.key.id,{features:d,records:d,metrics:0},!1,!1,!1);for(d=[];b.next();){const f=b.readGraphic();f.insertAfter=-1===f.insertAfter?-1:this._displayIds.get(f.insertAfter);f.displayId=this._displayIds.get(f.attributes[this.uid]);const h=new V(f.displayId);h.insertAfter=f.insertAfter;d.push(h);c.writeGraphic(g,b,a.level)}a=g.serialize(a.tileInfoView.tileInfo.isWrappable);return 1!==a.length?new I.TileData:I.TileData.fromVertexData(a[0].message,d)};e._abortProcessingGraphic=
function(a){this._graphicIdToAbortController.has(a)&&this._graphicIdToAbortController.get(a).abort()};e._getNullSymbol=function(a){a=a.geometry;return q.isPolyline(a)?E.errorPolylineSymbol2D:q.isPolygon(a)||q.isExtent(a)?E.errorPolygonSymbol2D:E.errorPointSymbol2D};e._flipUpdatingGraphics=function(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer);this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null;this.notifyChange("updating")},160);this.notifyChange("updating")};
n._createClass(t,[{key:"updating",get:function(){return!this._attached||null!==this._updatingGraphicsTimer||0<this._tileUpdateSet.size||0<this._tilesToUpdate.size}}]);return t}(ha.GraphicsView(L.HandleOwnerMixin(r)));x.__decorate([z.property({constructOnly:!0})],r.prototype,"requestUpdateCallback",void 0);x.__decorate([z.property()],r.prototype,"container",void 0);x.__decorate([z.property({constructOnly:!0})],r.prototype,"graphics",void 0);x.__decorate([z.property()],r.prototype,"updating",null);
x.__decorate([z.property()],r.prototype,"view",void 0);x.__decorate([z.property()],r.prototype,"updateRequested",void 0);return r=x.__decorate([N.subclass("esri.views.2d.layers.support.GraphicsView2D")],r)});