// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../renderers/ClassBreaksRenderer ../../../../renderers/DictionaryRenderer ../../../../renderers/DotDensityRenderer ../../../../renderers/HeatmapRenderer ../../../../renderers/Renderer ../../../../renderers/SimpleRenderer ../../../../renderers/UniqueValueRenderer ../../../../renderers/support/jsonUtils ../../../../core/Error ../../../../core/has ../../../../core/lang ../../../../core/Logger ../../../../core/maybe ../../../../core/screenUtils ../../../../symbols/support/jsonUtils ../../engine/webgl/enums ../../engine/webgl/Utils ../../engine/webgl/materialKey/MaterialKey ../../engine/webgl/util/vvFlagUtils ./support/pixelBuffering ./support/rendererUtils ../support/clusterUtils ../support/util".split(" "),
function(z,ma,na,oa,pa,qa,M,ra,sa,q,N,O,P,A,E,Q,v,R,l,S,T,U,V,W){function w(a){switch(a.type){case "line-marker":var c;return{type:"line-marker",color:null==(c=a.color)?void 0:c.toJSON(),placement:a.placement,style:a.style};default:return Q.fromJSON(a.toJSON()).toJSON()}}function u(a,c,b){if(!a)return null;var d=0;let e=!1,f=0;A.isSome(c)&&(f=T.getPtMaxVVSize(c),"visualVariables"in c&&(d=S.getVVFlags(c.visualVariables||[]),e="dot-density"===c.type));switch(a.type){case "simple-fill":case "picture-fill":return X(a,
d,e,b);case "simple-marker":case "picture-marker":return c=f,d=l.createMaterialKey(v.WGLGeometryType.MARKER,d,!1,!1),b=b?l.hydrateMaterialKey(d):d,d=w(a),a={materialKey:b,hash:a.hash(),...d,angle:a.angle,maxVVSize:c};case "simple-line":return Y(a,d,b);case "text":return c=f,d=l.createMaterialKey(v.WGLGeometryType.TEXT,d,!1,!1),b=b?l.hydrateMaterialKey(d):d,d=w(a),a={materialKey:b,hash:a.hash(),...d,angle:a.angle,maxVVSize:c};case "label":return c=d,d=a.toJSON(),c=l.createMaterialKey(v.WGLGeometryType.LABEL,
c,!1,!1,d.labelPlacement),a={materialKey:b?l.hydrateMaterialKey(c):c,hash:a.hash(),...d,labelPlacement:d.labelPlacement};case "cim":return{type:"cim",rendererKey:d,data:a.data,maxVVSize:f};case "web-style":return{...w(a),type:"web-style",hash:a.hash(),rendererKey:d,maxVVSize:f};default:throw Error(`symbol not supported ${a.type}`);}}function X(a,c,b,d){b=l.createMaterialKey(v.WGLGeometryType.FILL,c,!1,b);var e=d?l.hydrateMaterialKey(b):b;const f=a.clone();b=f.outline;f.outline=null;a=[];e={materialKey:e,
hash:f.hash(),...w(f)};a.push(e);b&&(c=l.createMaterialKey(v.WGLGeometryType.LINE,c,!0,!1),d={materialKey:d?l.hydrateMaterialKey(c):c,hash:b.hash(),...w(b)},a.push(d));return{type:"composite-symbol",layers:a,hash:a.reduce((g,k)=>k.hash+g,"")}}function Y(a,c,b){var d=l.createMaterialKey(v.WGLGeometryType.LINE,c,!1,!1);const e=b?l.hydrateMaterialKey(d):d;a=a.clone();d=a.marker;a.marker=null;const f=[];f.push({materialKey:e,hash:a.hash(),...w(a)});if(d){var g;c=l.createMaterialKey(v.WGLGeometryType.MARKER,
c,!1,!1);b=b?l.hydrateMaterialKey(c):c;d.color=null!=(g=d.color)?g:a.color;f.push({materialKey:b,hash:d.hash(),lineWidth:a.width,...w(d)})}return{type:"composite-symbol",layers:f,hash:f.reduce((k,h)=>h.hash+k,"")}}function Z(a,c){const b=a.labelPlacement;var d=aa[c];if(!a.symbol)return B.warn("No ILabelClass symbol specified."),!0;if(!d)return B.error(new q("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${c} is not supported`)),!0;d.some(e=>e===b)||(d=d[0],
b&&B.warn(`Found invalid label placement type ${b} for ${c}. Defaulting to ${d}`),a.labelPlacement=d);return!1}function F(a,c){a=O.clone(a);return a.some(b=>Z(b,c))?[]:a}function G(a,c=!1){try{var b,d;const e=ba(a,c),f={};e.map(g=>{a:{switch(g.target){case "feature":H(f,I(a),g);g=void 0;break a;case "aggregate":if(!("featureReduction"in a)){g=void 0;break a}var k=a.featureReduction;if("selection"===k.type)throw new q("ValidationError","Mapview does not support `selection` reduction type",k);H(f,I(a),
g);f.aggregate||(f.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:E.pt2px(k.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(E.pt2px(k.clusterMaxSize)/64),fields:g.aggregateFields}});J(f.aggregate,g.attributes.fields);g=void 0;break a}g=void 0}return g});return{source:{definitionExpression:a.definitionExpression,fields:a.fields.map(g=>g.toJSON()),gdbVersion:a.gdbVersion,historicMoment:null==(b=a.historicMoment)?void 0:b.getTime(),outFields:a.availableFields,
pixelBuffer:a.pixelBuffer,spatialReference:a.spatialReference.toJSON(),timeExtent:null==(d=a.timeExtent)?void 0:d.toJSON()},attributes:{fields:{},indexCount:0},processors:e,targets:f}}catch(e){if("ValidationError"===e.fieldName)return B.error(e),null;throw e;}}function J(a,c){for(const b in c){const d=c[b];if(d.target!==a.name)continue;const e=a.attributes[b];e?(e.context.mesh=e.context.mesh||d.context.mesh,e.context.storage=e.context.storage||d.context.storage):a.attributes[b]=d}return a}function I(a){var c,
b,d,e,f;return[null!=(c=null==(b=a.filter)?void 0:b.toJSON())?c:null,null!=(d=null==(e=a.effect)?void 0:null==(f=e.filter)?void 0:f.toJSON())?d:null]}function H(a,c,b){a.feature||(a.feature={name:"feature",input:"source",filters:c,attributes:{}});J(a.feature,b.attributes.fields);return a}function r(a,c){return c.field?x(a,{...c,type:"field",field:c.field}):c.valueExpression?x(a,{...c,type:"expression",valueExpression:c.valueExpression}):{field:null,fieldIndex:null}}function x(a,c){switch(c.type){case "expression":var b=
c.valueExpression;if(!a.fields[b]){var d=a.indexCount++;a.fields[b]={...c,name:b,fieldIndex:d}}return{fieldIndex:a.fields[b].fieldIndex};case "label-expression":return b=JSON.stringify(c.label),a.fields[b]||(d=a.indexCount++,a.fields[b]={...c,name:b,fieldIndex:d}),{fieldIndex:a.fields[b].fieldIndex};case "field":b=c.field;if("aggregate"===c.target&&a.fields[b])return{field:b};a.fields[b]={...c,name:b};return{field:b};case "statistic":return a.fields[c.name]={...c},{field:c.name}}}function ba(a,c=
!1){const b=[];let d=0;b.push(ca(a,d++,c));return b}function D(a,c,b,d,e,f=!1){c=x(c,{type:"label-expression",target:d,context:{mesh:!0},resultType:"string",label:{labelExpression:b.labelExpression,labelExpressionInfo:b.labelExpressionInfo?{expression:b.labelExpressionInfo.expression}:null,symbol:!!b.symbol,where:b.where}});({fieldIndex:c}=c);return{...u(b,a,f),fieldIndex:c,target:d,index:e}}function ca(a,c,b=!1){const d={indexCount:0,fields:{}};var e="featureReduction"in a&&a.featureReduction;c=
e?"aggregate":"feature";if("sublayers"in a){var f={type:"subtype",subtypeField:a.subtypeField,renderers:{}},g={type:"subtype",mapping:{},target:"feature"},k={type:"subtype",classes:{}};e={type:"symbol",target:"feature",aggregateFields:[],attributes:d,storage:g,mesh:{matcher:f,aggregateMatcher:null,labels:k}};var h=new Set;let t=0;for(const {renderer:n,subtypeCode:p,labelingInfo:da,labelsVisible:ea}of a.sublayers){a=C(d,c,n,b);var m=K(d,c,n),y=ea&&da;if("visualVariables"in n&&n.visualVariables&&n.visualVariables.length)throw new q("ValidationError",
"Visual variables are currently not supported for subtype layers");if("dictionary"===a.type)throw new q("ValidationError","Dictionary renderer is not supported in subtype layers");if("subtype"===a.type)throw new q("ValidationError","Nested subtype renderers is not supported");if(A.isSome(m)&&"subtype"===m.type)throw new q("ValidationError","Nested subtype storage is not supported");if(A.isSome(m)&&"dot-density"===m.type)throw new q("ValidationError","Dot density attributes are not supported in subtype layers");
if(h.has(p))throw new q("ValidationError","Subtype codes for sublayers must be unique");h.add(p);f.renderers[p]=a;g.mapping[p]=m;y&&(k.classes[p]=y.map(fa=>D(n,d,fa,"feature",t++,b)))}return e}switch(a.renderer.type){case "heatmap":{const {blurRadius:t,fieldOffset:n,field:p}=a.renderer;return{type:"heatmap",aggregateFields:[],attributes:d,target:c,storage:null,mesh:{blurRadius:t,fieldOffset:n,field:r(d,{target:c,field:p,resultType:"numeric"}).field}}}default:{f=[];const t="aggregate"===c?V.createClusterRenderer(f,
a.renderer,e,null):a.renderer;L(d,f);g=C(d,c,t,b);h=null;k=K(d,c,t);m=W.toJSONGeometryType(a.geometryType);a=a.labelsVisible&&a.labelingInfo||[];y=[];if(e){if("selection"===e.type)throw new q("ValidationError","Mapview does not support `selection` reduction type",e);e.symbol&&(h=new M({symbol:e.symbol,visualVariables:"visualVariables"in t?t.visualVariables:null}),h=C(d,c,h,b));y=e&&e.labelsVisible&&e.labelingInfo||[]}a=F(a,m);y=F(y,m);let n=0;a=[...a.map(p=>D(t,d,p,"feature",n++,b)),...y.map(p=>D(t,
d,p,"aggregate",n++,b))];return{type:"symbol",target:c,attributes:d,aggregateFields:f,storage:k,mesh:{matcher:g,labels:{type:"simple",classes:a},aggregateMatcher:h}}}}}function L(a,c){const b={mesh:!0,storage:!0};for(const d of c){const {name:e,outStatistic:f}=d,{statisticType:g,onStatisticField:k}=f;let h=c=null,m=null;"onStatisticValueExpression"in f?h=x(a,{type:"expression",target:"feature",valueExpression:f.onStatisticValueExpression,resultType:"numeric"}).fieldIndex:"onStatisticNormalizationField"in
f?(c=x(a,{type:"field",target:"feature",field:k,resultType:"numeric"}).field,m=f.onStatisticNormalizationField):c=x(a,{type:"field",target:"feature",field:k,resultType:"numeric"}).field;x(a,{type:"statistic",target:"aggregate",name:e,context:b,inField:c,inNormalizationField:m,inFieldIndex:h,statisticType:g})}}function K(a,c,b){switch(b.type){case "dot-density":return ha(a,c,b.attributes);case "simple":case "class-breaks":case "unique-value":case "dictionary":return ia(a,c,b.visualVariables);case "heatmap":return null}}
function ha(a,c,b){return b&&b.length?{type:"dot-density",mapping:b.map((d,e)=>{const {field:f,fieldIndex:g}=r(a,{valueExpression:d.valueExpression,field:d.field,resultType:"numeric",target:c});return{binding:e,field:f,fieldIndex:g}}),target:c}:{type:"dot-density",mapping:[],target:c}}function ia(a,c,b){if(!b||!b.length)return{type:"visual-variable",mapping:[],target:c};const d={storage:!0};return{type:"visual-variable",mapping:U.simplifyVisualVariables(b).map(e=>{var f;const g=R.getVVType(e.type),
{field:k,fieldIndex:h}=r(a,{target:c,valueExpression:e.valueExpression,field:e.field,context:d,resultType:"numeric"});switch(e.type){case "size":return"$view.scale"===e.valueExpression?null:{type:"size",binding:g,field:k,fieldIndex:h,normalizationField:r(a,{target:c,field:e.normalizationField,context:d,resultType:"numeric"}).field,valueRepresentation:null!=(f=e.valueRepresentation)?f:null};case "color":return{type:"color",binding:g,field:k,fieldIndex:h,normalizationField:r(a,{target:c,field:e.normalizationField,
context:d,resultType:"numeric"}).field};case "opacity":return{type:"opacity",binding:g,field:k,fieldIndex:h,normalizationField:r(a,{target:c,field:e.normalizationField,context:d,resultType:"numeric"}).field};case "rotation":return{type:"rotation",binding:g,field:k,fieldIndex:h}}}).filter(e=>e),target:c}}function C(a,c,b,d=!1){a=A.unwrapOr(a,{indexCount:0,fields:{}});switch(b.type){case "simple":case "dot-density":return ja(a,b,"dot-density"===b.type,d);case "class-breaks":return ka(a,c,b,d);case "unique-value":return la(a,
c,b,d);case "dictionary":return{type:"dictionary",renderer:b.toJSON()}}}function ja(a,c,b,d=!1){a=c.getSymbols();return{type:"simple",symbol:u(a.length?a[0]:null,c,d),isDotDensity:b}}function ka(a,c,b,d=!1){const e=b.backgroundFillSymbol,{field:f,fieldIndex:g}=r(a,{target:c,field:b.field,valueExpression:b.valueExpression,resultType:"numeric",context:{mesh:!0,use:"renderer.field"}});c=b.normalizationType;c="log"===c?"esriNormalizeByLog":"percent-of-total"===c?"esriNormalizeByPercentOfTotal":"field"===
c?"esriNormalizeByField":null;const k=b.classBreakInfos.map(h=>({symbol:u(h.symbol,b,d),min:h.minValue,max:h.maxValue})).sort((h,m)=>h.min-m.min);return{type:"interval",attributes:a.fields,field:f,fieldIndex:g,backgroundFillSymbol:u(e,b,d),defaultSymbol:u(b.defaultSymbol,b,d),intervals:k,normalizationField:b.normalizationField,normalizationTotal:b.normalizationTotal,normalizationType:c,isMaxInclusive:b.isMaxInclusive}}function la(a,c,b,d=!1){const e=[],f=b.backgroundFillSymbol;c={target:c,context:{mesh:!0},
resultType:"string"};if(b.field&&"string"!==typeof b.field)throw new q("ValidationError","Expected renderer.field to be a string",b);const {field:g,fieldIndex:k}=r(a,{...c,field:b.field,valueExpression:b.valueExpression});for(const h of b.uniqueValueInfos)e.push({value:""+h.value,symbol:u(h.symbol,b,d)});return{type:"map",attributes:a.fields,field:g,fieldIndex:k,field2:r(a,{...c,field:b.field2}).field,field3:r(a,{...c,field:b.field3}).field,fieldDelimiter:b.fieldDelimiter,backgroundFillSymbol:u(f,
b),defaultSymbol:u(b.defaultSymbol,b),map:e}}const B=P.getLogger("esri.views.2d.layers.features.schemaUtils"),aa={esriGeometryPoint:"above-right above-center above-left center-center center-left center-right below-center below-left below-right".split(" "),esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};z.addAggregateFields=L;z.createMatcherSchema=C;z.createSchema=function(a){N("esri-2d-update-debug")&&console.debug("Created new schema",
G(a,!0));return G(a)};z.createSymbolSchema=u;Object.defineProperty(z,"__esModule",{value:!0})});