// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../geometry/support/aaBoundingRect ../viewpointUtils ./brushes ./RasterTile ./webgl/enums ./webgl/TileContainer".split(" "),function(k,n,p,q,r,t,l,g){g=function(e){function h(){var a=e.apply(this,arguments)||this;a.isCustomTilingScheme=!1;return a}n._inheritsLoose(h,e);var d=h.prototype;d.createTile=function(a){const b=this._getTileBounds(a);return new t.RasterTile(a,b,this._tileInfoView.tileInfo.size)};d.destroyTile=function(){};d.prepareRenderPasses=
function(a){const b=a.registerRenderPass({name:"bitmap (tile)",brushes:[r.brushes.raster],target:()=>this.children.map(c=>c.bitmap),drawPhase:l.WGLDrawPhase.MAP});return[...e.prototype.prepareRenderPasses.call(this,a),b]};d.doRender=function(a){this.visible&&a.drawPhase===l.WGLDrawPhase.MAP&&e.prototype.doRender.call(this,a)};d._getTileBounds=function(a){const b=this._tileInfoView.getTileBounds(p.create(),a);if(this.isCustomTilingScheme&&a.world){var {tileInfo:c}=this._tileInfoView,f=q.getWorldWidth(c.spatialReference);
if(f){const {resolution:m}=c.lodAt(a.level);c=(f=f/m%c.size[0])?(c.size[0]-f)*m:0;b[0]-=c*a.world;b[2]-=c*a.world}}return b};return h}(g["default"]);k.RasterTileContainer=g;Object.defineProperty(k,"__esModule",{value:!0})});