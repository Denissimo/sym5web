// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ../../../../core/MemCache ../../../../core/promiseUtils ../../../../chunks/mat3f32 ../../../../geometry/support/aaBoundingRect ./VectorTile ./TileHandler ./decluttering/jobsUtil ../../tiling/TileKey".split(" "),function(k,g,m,n,p,q,r,t,u,v){return function(l){function h(c,a,d,b,e){c=l.call(this,c,a,d)||this;c._memCache=b;c._loader=e;c._ongoingTileRequests=new Map;c._ongoingRequestToController=new Map;return c}k._inheritsLoose(h,
l);var f=h.prototype;f.destroy=function(){this._ongoingRequestToController.forEach(c=>c.abort());this._ongoingRequestToController.clear();this._ongoingTileRequests.clear()};f.getVectorTile=function(){var c=k._asyncToGenerator(function*(a,d,b,e){a=new v(a,d,b,0);b=this._memCache.get(a.id);if(g.isSome(b))return b.retain(),b;d=yield this._getVectorTileData(a);n.throwIfAborted(e);if(!this._vectorTileLayer)return null;b=this._memCache.get(a.id);if(g.isSome(b))return b.retain(),b;e=this._vectorTileLayer.tileInfo.getTileBounds(q.create(),
a);b=new r.VectorTile(a,this._styleRepository,e,[512,512],this._memCache);g.isSome(d)&&d.tileData?(b.setData(d.tileData),b.retain(),this._memCache.put(a.id,b,b.memoryUsage*b.referenced,m.MIN_PRIORITY)):b.setData(null);b.neededForCoverage=!0;b.transforms.tileUnitsToPixels=p.fromValues(.125,0,0,0,.125,0,0,0,1);u.declutterSingleTile(b,this._styleRepository);return b});return function(a,d,b,e){return c.apply(this,arguments)}}();f._getVectorTileData=function(c){const a=c.id;if(this._ongoingTileRequests.has(a))return this._ongoingTileRequests.get(a);
const d=new AbortController;c=this._getParsedVectorTileData(c,{signal:d.signal}).then(b=>{this._ongoingTileRequests.delete(a);this._ongoingRequestToController.delete(a);return b}).catch(()=>{this._ongoingTileRequests.delete(a);this._ongoingRequestToController.delete(a);return null});this._ongoingTileRequests.set(a,c);this._ongoingRequestToController.set(a,d);return c};f._getParsedVectorTileData=function(c,a){return this.fetchTileData(c,a).then(d=>this.parseTileData({key:c,data:d},a))};f.request=function(c,
a){return this._loader.request(c,"binary",a)};return h}(t.TileHandler)});