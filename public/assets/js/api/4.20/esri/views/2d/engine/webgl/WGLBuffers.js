// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../webgl/BufferObject ../../../webgl/FramebufferObject ../../../webgl/Program ../../../webgl/ProgramCache ../../../webgl/Renderbuffer ../../../webgl/RenderingContext ../../../webgl/ShaderCompiler ../../../webgl/Texture ../../../webgl/VertexArrayObject ./Utils".split(" "),function(h,r,t,u,v,w,x,y,p,k){return function(){function l(a){this.geometryMap=k.createGeometryData(()=>({indexBuffer:h.createIndex(a,35044),vao:null}),(b,c)=>({vertexBuffer:h.createVertex(a,k.C_VBO_INFO[c])}))}var f=
l.prototype;f.dispose=function(){for(let a=0;5>a;a++){const b=this.geometryMap[a];if(b){b.data.vao&&b.data.vao.dispose(!1);b.data.indexBuffer&&b.data.indexBuffer.dispose();for(const c in b.buffers)b.buffers[c]&&b.buffers[c].data.vertexBuffer.dispose()}}};f.get=function(a){const b=this.geometryMap[a];return{draw(c,d,e,g,q){if(!b.data.vao){const m={};for(const n in b.buffers)m[n]=b.buffers[n].data.vertexBuffer;b.data.vao=new p(c,e,d,m,b.data.indexBuffer)}c.bindVAO(b.data.vao);c.drawElements(4,q,5125,
Uint32Array.BYTES_PER_ELEMENT*g);c.bindVAO(null)}}};f.has=function(a){return null!=this.geometryMap[a]};f.upload=function(a,b){b.forEach((c,d)=>{this._upload(c,d,a)})};f._upload=function(a,b,c){a.indices&&(a.indices.allDirty?this._uploadIndices(c,b):null!=a.indices.from&&null!=a.indices.count&&this._uploadIndices(c,b,a.indices.from,a.indices.count));if(a.vertices){a=a.vertices;for(const d in a){const e=a[d];e.allDirty?this._uploadVertices(c,b,d):null!=e.from&&null!=e.count&&this._uploadVertices(c,
b,d,e.from,e.count)}}};f._uploadVertices=function(a,b,c,d,e){const g=this.geometryMap[b];g&&(b=a.geometries[b].vertexBuffer[c])&&(a=b.stride,b=b.data.buffer,g.buffers[c]&&0<b.byteLength&&(null!=d&&null!=e?g.buffers[c].data.vertexBuffer.setSubData(b,d*a,d*a,(d+e)*a):g.buffers[c].data.vertexBuffer.setData(b)))};f._uploadIndices=function(a,b,c,d){const e=this.geometryMap[b];e&&(a=a.geometries[b].indexBuffer.buffer,e.data.indexBuffer&&0<a.byteLength&&(null!=c&&null!=d?e.data.indexBuffer.setSubData(a,
4*c,4*c,4*(c+d)):e.data.indexBuffer.setData(a)))};return l}()});