// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../Viewpoint ../core/Error ../core/Logger ../core/maybe ../core/promiseUtils ../core/screenUtils ../core/watchUtils ../core/accessorSupport/decorators/property ../core/has ../core/accessorSupport/ensureType ../core/jsonMap ../core/accessorSupport/decorators/subclass ../geometry/support/webMercatorUtils ../layers/support/TileInfo ./PopupView ./View ./ViewAnimation ./2d/AnimationManager ./2d/FrameTask ./2d/layerViewModuleImportUtils ./2d/MapViewConstraints ./2d/PaddedViewState ./2d/tiling/PagedTileQueue ./2d/tiling/TileInfoView ./2d/tiling/TileKey ./2d/tiling/TileQueue ./2d/tiling/TileStrategy ./2d/viewpointUtils ./2d/support/Timeline ../geometry/Point ../geometry/Extent ../geometry/SpatialReference".split(" "),
function(w,f,d,x,z,H,A,B,I,J,g,U,V,W,K,y,L,M,N,O,P,Q,C,D,R,X,S,Y,Z,aa,m,E,r,F,T){const n=H.getLogger("esri.views.MapView");d=function(t){function u(a){var b=t.call(this,a)||this;b._stationaryTimer=null;b.frameTask=new Q(w._assertThisInitialized(b));b.featuresTilingScheme=null;b.fullOpacity=1;b.graphicsView=null;b.initialExtent=null;b.labelManager=null;b.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0};b.resizeAlign="center";b.supportsGround=
!1;b.timeline=new E.Timeline;b.type="2d";b.constraints=new D;b.padding={top:0,right:0,bottom:0,left:0};const c=b.handles,e=()=>b.notifyChange("updating");c.add([b.watch("viewpoint",()=>{b._lastStationaryEventTimestamp=performance.now();b._flipStationary(160)},!0),b.on("resize",k=>b._resizeHandler(k)),b.watch("animationManager.animation",k=>{b.animation=k}),b.allLayerViews.on("change",()=>{e();c.remove("map-view-base-layerViewsUpdating");c.add(b.allLayerViews.map(k=>k.watch("updating",e)),"map-view-base-layerViewsUpdating")})],
"map-view-base");return b}w._inheritsLoose(u,t);var h=u.prototype;h.destroy=function(){this.destroyed||(this._set("preconditionsReady",!1),this._gotoTask=this.frameTask=null)};h.goTo=function(a,b){if(a)return this.animation&&(this.animation=null),this._createAnimation(),J.whenTrueOnce(this,"ready",b&&b.signal).then(()=>{const c={animate:!0,...b},e=m.createAsync(a,this);this.animation.update(e);this._gotoTask={};return c.animate?this._gotoAnimated(e,c):this._gotoImmediate(e,c)});n.error("#goTo()",
"target cannot be null or undefined")};h.hitTest=function(a){return Promise.reject("Should be implemented by subclasses")};h.popupHitTest=function(a){return this.hitTest(a).then(b=>({...b,mapPoint:this.toMap(a)}))};h.toMap=function(a){if(!this.ready)return null;const [b,c]=this.state.toMap([0,0],[a.x,a.y]);return new r({x:b,y:c,spatialReference:this.spatialReference})};h.isTileInfoRequired=function(){return!0};h.toScreen=function(a){if(!this.ready)return null;a=this._normalizeInput(a);a=[a.x,a.y];
this.state.toScreen(a,a);return I.createScreenPoint(a[0],a[1])};h.pixelSizeAt=function(){return this.ready?this.state.resolution:(n.error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)};h.requestUpdate=function(){this.ready&&this.frameTask.requestUpdate()};h.getDefaultSpatialReference=function(){return this.get("map.initialViewProperties.spatialReference")||this.get("defaultsFromMap.spatialReference")||null};h.isSpatialReferenceSupported=function(a,b){return b||this._get("ready")?
!0:null!==this._getDefaultViewpoint()};h.importLayerView=function(a){return C.layerView2DImporter.importLayerView(a)};h.hasLayerViewModule=function(a){return C.layerView2DImporter.hasLayerViewModule(a)};h._createAnimation=function(){if(!this.animation||this.animation.done)this.animation=new O;return this.animation};h._cancellableGoTo=function(a,b,c){const e=()=>a===this._gotoTask,k=c.then(()=>{e()&&(this.animation=null)}).catch(l=>{e()&&(this.animation=null,b.done||(b.stop(),this.frameTask.animationInProgress=
!1));throw l;}),p=new Promise(l=>l(k));b.when().catch(()=>{e()&&p.cancel&&p.cancel()});return p};h._gotoImmediate=function(a,b){const c=this._gotoTask,e=this.animation;a=a.then(k=>{B.throwIfAborted(b);if(c!==this._gotoTask)throw new z("view:goto-interrupted","Goto was interrupted");this.viewpoint=e.target=k;e.finish()});return this._cancellableGoTo(c,e,a)};h._gotoAnimated=function(a,b){const c=this._gotoTask,e=this.animation;a=a.then(k=>{B.throwIfAborted(b);if(c!==this._gotoTask)throw new z("view:goto-interrupted",
"Goto was interrupted");e.update(k);this.animationManager.animate(e,this.viewpoint,b);return e.when().then(()=>{},()=>{})});return this._cancellableGoTo(c,e,a)};h._resizeHandler=function(a){const b=this.state;if(b){var c=this.state.paddedViewState.viewpoint,e=this.state.paddedViewState.size.concat();b.size=[a.width,a.height];m.resize(c,c,e,this.state.paddedViewState.size,this.resizeAlign);c=this.constraints.constrain(c,null);this.state.viewpoint=c}};h._startup=function(){const a=this._getDefaultViewpoint();
this.constraints.view=this;this.constraints.fit(a);this._set("animationManager",new P({view:this}));this._set("state",new R({padding:this._get("padding"),size:this.size,viewpoint:a}));this._set("featuresTilingScheme",new S(L.create({spatialReference:this.spatialReference,size:512,numLODs:36})));this._set("ready",!0);this.frameTask&&this.frameTask.start()};h._teardown=function(){this.frameTask&&this.frameTask.stop();this._set("ready",!1);this._stationaryTimer&&(clearTimeout(this._stationaryTimer),
this._stationaryTimer=null);const {center:[a,b],spatialReference:c,rotation:e,scale:k}=this.state.paddedViewState,p=new r({x:a,y:b,spatialReference:c});this._set("viewpoint",null);this._set("extent",null);this._set("center",p);this._set("zoom",-1);this._set("rotation",e);this._set("scale",k);this._set("spatialReference",c);this.constraints.view=null;this.animationManager.destroy();this._set("animationManager",null);this._set("state",null);this.animation=null};h._flipStationary=function(a){return null!==
this._stationaryTimer?this._stationaryTimer:this._stationaryTimer=setTimeout(()=>{this._stationaryTimer=null;const b=performance.now()-this._lastStationaryEventTimestamp;160>b&&(this._stationaryTimer=this._flipStationary(b))},a)};h._normalizeInput=function(a,b=this.spatialReference){const c=a&&a.targetGeometry||a;return b?c?b.equals(c.spatialReference)?a:y.canProject(c,b)?a&&"esri.Viewpoint"===a.declaredClass?(a.targetGeometry=y.project(c,b),a):y.project(c,b):null:null:a};h._getDefaultViewpoint=function(){var a=
this.constraints,b=this._get("zoom"),c=this._get("scale"),e=this._normalizeInput(this._get("center")),k=this._normalizeInput(this._get("extent")),p=this._get("rotation"),l=this._normalizeInput(this._get("viewpoint"));a.effectiveLODs?-1!==b&&(c=a.zoomToScale(b)):b=-1;let G=null;var v=null;b=0;a=l&&l.rotation;var q=l&&l.targetGeometry;A.isSome(q)&&("extent"===q.type?G=q:"point"===q.type&&(v=q,b=l.scale));l=this._normalizeInput(this.get("map.initialViewProperties.viewpoint.targetGeometry.extent"));q=
this._normalizeInput(this.initialExtent);k=k||G||l||q;e=e||v||k&&k.center;v=this.get("map.initialViewProperties.viewpoint.scale");c=c||b||v||k&&m.extentToScale(k,this.size);b=this.get("map.initialViewProperties.viewpoint.rotation");return e&&c?new x({targetGeometry:e,scale:c,rotation:p||a||b||0}):null};w._createClass(u,[{key:"animation",set:function(a){var b=this._get("animation");a!==b&&(b&&b.stop(),!a||a.isFulfilled()?this._set("animation",null):(this._set("animation",a),this.frameTask.animationInProgress=
!0,b=()=>{a===this._get("animation")&&(this._set("animation",null),this.frameTask.requestFrame());this.frameTask.animationInProgress=!1},a.when(b,b)))}},{key:"center",get:function(){if(!this.ready)return this._get("center");const {center:a,spatialReference:b}=this.state.paddedViewState;return new r({x:a[0],y:a[1],spatialReference:b})},set:function(a){if(null!=a)if(this._normalizeInput(a))if(this.ready){var b=this.viewpoint;m.centerAt(b,b,a);this.viewpoint=b}else this._set("center",a),this.notifyChange("initialExtentRequired");
else n.error("#center",`incompatible spatialReference ${JSON.stringify(a.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`)}},{key:"constraints",set:function(a){const b=this._get("constraints");b&&(this.handles.remove("map-view-base-constraints"),b.destroy());this._set("constraints",a);a&&(a.view=this,this.ready&&(this.state.viewpoint=a.fit(this.state.paddedViewState.viewpoint)),this.handles.add(a.on("update",()=>{this.ready&&this.state&&(this.state.viewpoint=
a.fit(this.state.paddedViewState.viewpoint))}),"map-view-base-constraints"))}},{key:"extent",get:function(){return this.ready?this.state.paddedViewState.extent.clone():this._get("extent")},set:function(a){if(null!=a){var b=this._normalizeInput(a);b?b.width&&b.height?this.ready?(a=this.viewpoint,m.setExtent(a,a,b,this.size,{constraints:this.constraints}),this.viewpoint=a):(this._set("extent",b),this._set("center",null),this._set("viewpoint",null),this._set("scale",0),this._set("zoom",-1),this.notifyChange("initialExtentRequired")):
n.error("#extent","invalid extent size"):n.error("#center",`incompatible spatialReference ${JSON.stringify(a.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`)}}},{key:"initialExtentRequired",get:function(){const {extent:a,center:b,scale:c,viewpoint:e,zoom:k}=this;return this.get("map.initialViewProperties.viewpoint")||a||b&&(0!==c||-1!==k)||e?!1:!0}},{key:"padding",get:function(){return this.ready?this.state.padding:this._get("padding")},set:function(a){this.ready?
(this.state.padding=a,this._set("padding",this.state.padding)):this._set("padding",a)}},{key:"resolution",get:function(){return this.state?this.state.resolution:0}},{key:"rotation",get:function(){return this.ready?this.state.rotation:this._get("rotation")},set:function(a){if(!isNaN(a))if(this.ready){var b=this.viewpoint;m.rotateTo(b,b,a);this.viewpoint=b}else this._set("rotation",a)}},{key:"scale",get:function(){return this.ready?this.state.scale:this._get("scale")},set:function(a){if(a&&!isNaN(a))if(this.ready){var b=
this.viewpoint;m.scaleTo(b,b,a);this.viewpoint=b}else{this._set("scale",a);this._set("zoom",-1);if(a=this._get("extent"))this._set("extent",null),this._set("center",a.center);this.notifyChange("initialExtentRequired")}}},{key:"stationary",get:function(){return!this.animation&&!this.navigating&&!this._get("resizing")&&!this._stationaryTimer}},{key:"updating",get:function(){return!this.destroyed&&(!0===this.get("layerViewManager.updating")||!0===this.get("labelManager.updating")||!0===this.get("graphicsView.updating")||
this.allLayerViews.some(a=>!a.destroyed&&!("layerViews"in a)&&!0===a.updating))}},{key:"viewpoint",get:function(){if(!this.ready)return this._get("viewpoint");const a=this.state.paddedViewState;return a&&a.viewpoint.clone()},set:function(a){if(null!=a){var b=this._normalizeInput(a);b?this.ready?(a=new x({targetGeometry:new r,scale:0,rotation:0}),m.copy(a,b),this.constraints.constrain(a,this.state.paddedViewState.viewpoint),this.state.viewpoint=a,this.frameTask.requestFrame(),this._set("viewpoint",
a)):(this._set("viewpoint",b),this._set("extent",null),this._set("center",null),this._set("zoom",-1),this._set("scale",0),this.notifyChange("initialExtentRequired")):!a.scale||isNaN(a.scale)?n.error("#viewpoint",`invalid scale value of ${a.scale}`):A.isNone(a.targetGeometry)?n.error("#viewpoint","geometry not defined"):n.error("#viewpoint",`incompatible spatialReference ${JSON.stringify(a.targetGeometry.spatialReference)} with view's spatialReference ${JSON.stringify(this.spatialReference)}`)}}},
{key:"zoom",get:function(){return this.ready?this.constraints.scaleToZoom(this.scale):this._get("zoom")},set:function(a){if(null!=a){if(!this.ready){this.notifyChange("initialExtentRequired");this._set("zoom",a);this._set("scale",0);var b=this._get("extent");b&&(this._set("extent",null),this._set("center",b.center))}this.constraints.effectiveLODs&&(b=this.viewpoint,m.scaleTo(b,b,this.constraints.zoomToScale(a)),this.viewpoint=b,this._set("zoom",this.constraints.scaleToZoom(this.scale)))}}}]);return u}(M.PopupView(N));
f.__decorate([g.property()],d.prototype,"_stationaryTimer",void 0);f.__decorate([g.property()],d.prototype,"animation",null);f.__decorate([g.property({readOnly:!0})],d.prototype,"animationManager",void 0);f.__decorate([g.property({value:null,type:r,dependsOn:["state.id","ready"]})],d.prototype,"center",null);f.__decorate([g.property({type:D})],d.prototype,"constraints",null);f.__decorate([g.property({value:null,type:F,dependsOn:["state.id","ready"]})],d.prototype,"extent",null);f.__decorate([g.property({readOnly:!0})],
d.prototype,"featuresTilingScheme",void 0);f.__decorate([g.property()],d.prototype,"fullOpacity",void 0);f.__decorate([g.property()],d.prototype,"graphicsView",void 0);f.__decorate([g.property({type:F})],d.prototype,"initialExtent",void 0);f.__decorate([g.property({dependsOn:["map.initialViewProperties?.viewpoint"]})],d.prototype,"initialExtentRequired",null);f.__decorate([g.property()],d.prototype,"labelManager",void 0);f.__decorate([g.property({value:{top:0,right:0,bottom:0,left:0},cast:t=>({top:0,
right:0,bottom:0,left:0,...t})})],d.prototype,"padding",null);f.__decorate([g.property({type:Object})],d.prototype,"renderingOptions",void 0);f.__decorate([g.property()],d.prototype,"resizeAlign",void 0);f.__decorate([g.property({readOnly:!0,dependsOn:["state.id"]})],d.prototype,"resolution",null);f.__decorate([g.property({value:0,type:Number,dependsOn:["state.id","ready"]})],d.prototype,"rotation",null);f.__decorate([g.property({value:0,type:Number,dependsOn:["state.id","ready"]})],d.prototype,"scale",
null);f.__decorate([g.property({type:T,dependsOn:["map.initialViewProperties?.spatialReference","defaultsFromMap.isSpatialReferenceDone"]})],d.prototype,"spatialReference",void 0);f.__decorate([g.property({readOnly:!0})],d.prototype,"state",void 0);f.__decorate([g.property({dependsOn:["animation","navigating","resizing","_stationaryTimer"]})],d.prototype,"stationary",null);f.__decorate([g.property({readOnly:!0})],d.prototype,"supportsGround",void 0);f.__decorate([g.property({type:E.Timeline,readOnly:!0})],
d.prototype,"timeline",void 0);f.__decorate([g.property({readOnly:!0})],d.prototype,"type",void 0);f.__decorate([g.property({readOnly:!0,dependsOn:["layerViewManager.updating","labelManager.updating","graphicsView?.updating"]})],d.prototype,"updating",null);f.__decorate([g.property({value:null,type:x,dependsOn:["state.id","ready"]})],d.prototype,"viewpoint",null);f.__decorate([g.property({value:-1,dependsOn:["state.id"]})],d.prototype,"zoom",null);return d=f.__decorate([K.subclass("esri.views.MapViewBase")],
d)});