// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Error ../../../core/Logger ../../../core/watchUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ./LayerView3D ./TiledLayerView3D ../../layers/LayerView ../../layers/RefreshableLayerView".split(" "),function(l,f,q,c,r,g,y,z,A,t,u,v,w,x){const p=c.getLogger("esri.views.3d.layers.WMTSLayerView3d");
c=function(m){function h(){var a=m.apply(this,arguments)||this;a.type="wmts-3d";return a}l._inheritsLoose(h,m);var e=h.prototype;e.initialize=function(){const a=r.whenTrueOnce(this.view,"basemapTerrain.tilingSchemeDone").then(()=>{var b=()=>new q("layerview:no-compatible-tiling-scheme","None of the tiling schemes supported by the service are compatible with the scene.");if(!this.view.basemapTerrain.tilingSchemeLocked)throw b();var n=this.view.basemapTerrain.tilingScheme;const k=this.layer.activeLayer;
let d;if(k&&k.tileMatrixSet){if(d=k.tileMatrixSet,b=d.tileInfo,n=this._getTileInfoSupportError(b,d.fullExtent)||this._getTileInfoCompatibilityError(b,n))throw n;}else{d=this._getCompatibleTileMatrixSet();if(!d)throw b();k.tileMatrixSetId=d.id}this._set("tileInfo",d.tileInfo);this._set("fullExtent",d.fullExtent);this.layer.fullExtent=d.fullExtent});this.addResolvingPromise(a);this.when(()=>this._initialized())};e.refresh=function(){this.emit("data-changed")};e.canResume=function(){if(!m.prototype.canResume.call(this))return!1;
const a=this.layer.activeLayer.tileMatrixSet;return a&&!this._getTileInfoError(a.tileInfo,a.fullExtent)};e.doRefresh=function(){var a=l._asyncToGenerator(function*(){this.suspended||this.emit("data-changed")});return function(){return a.apply(this,arguments)}}();e._initialized=function(){this.updatingHandles.add(this,"layer.activeLayer.styleId",()=>this.refresh());this.updatingHandles.add(this,"tileMatrixSet",()=>this.refresh());this.updatingHandles.add(this.layer,"activeLayer",a=>{let b=a.tileMatrixSet;
if(b){if(a=this._getTileInfoError(b.tileInfo,b.fullExtent))p.error("The selected tile matrix set is not compatible with the view",a),b=null}else(b=this._getCompatibleTileMatrixSet())?a.tileMatrixSetId=b.id:p.error("The layer does not provide a tiling scheme that is compatible with the view");this.notifyChange("suspended");this.canResume()&&this.refresh()})};e._getCompatibleTileMatrixSet=function(){return this.layer.activeLayer.tileMatrixSets.find(a=>!this._getTileInfoError(a.tileInfo,a.fullExtent))};
e._getTileInfoError=function(a,b){return this._getTileInfoSupportError(a,b)||this._getTileInfoCompatibilityError(a,this.view.basemapTerrain.tilingScheme)};l._createClass(h,[{key:"hasMixedImageFormats",get:function(){return!0}}]);return h}(x.RefreshableLayerView(v.TiledLayerView3D(u.LayerView3D(w))));f.__decorate([g.property({readOnly:!0})],c.prototype,"hasMixedImageFormats",null);f.__decorate([g.property()],c.prototype,"fullExtent",void 0);f.__decorate([g.property()],c.prototype,"layer",void 0);f.__decorate([g.property()],
c.prototype,"suspended",void 0);f.__decorate([g.property()],c.prototype,"tileInfo",void 0);return c=f.__decorate([t.subclass("esri.views.3d.layers.WMTSLayerView3D")],c)});