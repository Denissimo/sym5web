// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/Evented ../../../../core/Handles ../../../../core/maybe ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/accessorSupport/ensureType ../../../../core/Logger ../../../../core/jsonMap ../../../../core/accessorSupport/decorators/subclass ./ExtentSet ../../../support/Scheduler".split(" "),function(l,k,g,r,t,m,n,x,y,z,A,u,v,w){g=function(p){function h(){var a=
p.apply(this,arguments)||this;a.dirtyExtents=new v.ExtentSet;a.globalDirty=!1;a.averageExtentUpdateSize=0;a.dirtyGraphicsSet=new Set;a.handles=new t;a.updateElevation=!1;a.layerView=null;a.graphicsCore=null;a.events=new r;return a}l._inheritsLoose(h,p);var c=h.prototype;c.setup=function(a,b,d,e){this.layerView=a;this.queryGraphicUIDsInExtent=b;this.graphicsCore=d;this.elevationProvider=e;a=this.layerView.view.resourceController.scheduler;this.handles.add([e.on("elevation-change",f=>this._elevationChanged(f)),
this.layerView.watch("suspended",()=>this.suspendedChange()),a.registerTask(w.TaskPriority.ELEVATION_ALIGNMENT,this)])};c.destroy=function(){this.dirtyGraphicsSet.clear();this.handles.destroy();this.queryGraphicUIDsInExtent=this.graphicsCore=this.layerView=this.handles=null};c.clear=function(){this.dirtyGraphicsSet.clear();this.notifyChange("updating")};c.suspendedChange=function(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&(this.globalDirty=
!0,this.notifyChange("updating"))};c.elevationInfoChange=function(){this.globalDirty=!0;this.notifyChange("updating")};c.runTask=function(a){this.globalDirty&&(this.markAllGraphicsElevationDirty(),this.globalDirty=!1,a.madeProgress());for(a.run(()=>this.dirtyExtents.merge(a));this.running&&!a.done;)this._updateDirtyGraphics(a),this._updateDirtyExtents(a);this.layerView.view.deconflictor.setDirty();this.notifyChange("updating")};c._updateDirtyGraphics=function(a){const b=this.layerView.view.renderCoordsHelper,
d=0===this.graphicsCore.effectiveUpdatePolicy;for(const e of this.dirtyGraphicsSet.keys()){const f=this.graphicsCore.getGraphics3DGraphicById(e);this.dirtyGraphicsSet.delete(e);m.isSome(f)&&(f.alignWithElevation(this.elevationProvider,b,d),a.madeProgress());if(a.done)break}};c._updateDirtyExtents=function(a){for(;!this.dirtyExtents.empty&&!a.done;){const b=this.dirtyExtents.pop(),d=this.elevationProvider.spatialReference;this.events.emit("invalidate-elevation",{extent:b,spatialReference:d});const e=
this.dirtyGraphicsSet.size;this.queryGraphicUIDsInExtent(b,d,f=>{const q=this.graphicsCore.getGraphics3DGraphicById(f);m.isSome(q)&&q.needsElevationUpdates()&&this.dirtyGraphicsSet.add(f)});this.averageExtentUpdateSize=.1*(this.dirtyGraphicsSet.size-e)+.9*this.averageExtentUpdateSize;a.madeProgress()}};c.markAllGraphicsElevationDirty=function(){this.dirtyExtents.clear();this.dirtyGraphicsSet.clear();this.graphicsCore.graphics3DGraphics.forEach((a,b)=>this.dirtyGraphicsSet.add(b))};c._elevationChanged=
function(a){if("scene"!==a.context||this.graphicsCore.layer.elevationInfo&&"relative-to-scene"===this.graphicsCore.layer.elevationInfo.mode){var {extent:b,spatialReference:d}=a;this.layerView.suspended?(this.updateElevation||(a=this.graphicsCore.computedExtent)&&b[2]>a.xmin&&b[0]<a.xmax&&b[3]>a.ymin&&b[1]<a.ymax&&(this.updateElevation=!0),this.events.emit("invalidate-elevation",{extent:b,spatialReference:d})):(-Infinity===b[0]?this.globalDirty=!0:this.dirtyExtents.add(b),this.notifyChange("updating"))}};
l._createClass(h,[{key:"updating",get:function(){return this.running}},{key:"running",get:function(){return 0<this.dirtyGraphicsSet.size||this.dirtyExtents&&!this.dirtyExtents.empty||this.globalDirty}},{key:"updatingRemaining",get:function(){return this.dirtyGraphicsSet.size+this.dirtyExtents.size*this.averageExtentUpdateSize}}]);return h}(g);k.__decorate([n.property({readOnly:!0})],g.prototype,"updating",null);k.__decorate([n.property({readOnly:!0})],g.prototype,"updatingRemaining",null);return g=
k.__decorate([u.subclass("esri.views.3d.layers.graphics.Graphics3DElevationAlignment")],g)});