// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/Logger ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/support/ray ../../../../../geometry/support/vectorStacks ../../../../../layers/graphics/dehydratedFeatures ../../../support/geometryUtils/ray ../../../terrain/tileUtils ../../../webgl-engine/lib/Intersector ../../../webgl-engine/lib/intersectorUtilsConversions".split(" "),
function(h,w,t,x,l,y,z,J,K,L,M,A,g,m,n,B,C,D,E,F,G){h.LineOfSightRayIntersector=function(u){function p(b){return u.call(this,b)||this}w._inheritsLoose(p,u);var k=p.prototype;k.initialize=function(){this._intersector=new F.Intersector(this.view.state.viewingMode);this._intersector.options.hud=!1;this._intersector.options.store=0};k.getScreenPointIntersection=function(b){b=y.screenPointObjectToArray(b,B.sv2d.get());b=D.fromScreen(this.view.state.camera,b,q);return this._getRayIntersection(b)};k._getRayIntersection=
function(b){if(l.isNone(b))return null;this.view.sceneIntersectionHelper.intersectToolIntersectorRay(b,this._intersector);var a=this._intersector.results.min,d=v;if(!a||!a.getIntersectionPoint(d))return null;d=this.view.renderCoordsHelper.fromRenderCoords(d,this.view.spatialReference);const e=m.create();g.copy(e,a.normal);var f=0<g.dot(e,b.direction)?-1:1;g.scale(e,e,f);const c=G.toGraphic(a,this.view);if(l.isSome(c)){f=c.layer;const r=c.sourceLayer;if(r)switch(r.type){case "scene":a=C.getObjectId(c,
r.objectIdField);break;case "integrated-mesh":a=a.target;a=`${a.metadata.nodeIndex}/${a.metadata.componentIndex}`;break;default:a=c.uid}else a=c.uid;return{type:"Graphic",id:`${f.uid}/${a}`,ray:n.copy(b),normal:e,point:d}}return"TerrainRenderer"===a.intersector?{type:"Terrain",id:a.target.metadata.tile.lij.slice(),ray:n.copy(b),normal:e,point:d}:null};k._canUpdateFromIntersectionResult=function(b,a){if(l.isNone(b)||!a||b.type!==a.type)return!1;switch(b.type){case "Terrain":return b=b.id,a=a.id,b[0]===
a[0]&&b[1]===a[1]&&b[2]===a[2]||E.tilesAreRelated(b,a);case "Graphic":case "I3S":return b.id===a.id}};k.updateFromIntersectionResult=function(b){if("Terrain"===b.type&&l.isSome(b.point)){var a=v;const f=H,c=I;this.view.renderCoordsHelper.toRenderCoords(b.point,f);this.view.renderCoordsHelper.worldUpAtPosition(f,c);var d=this.view.basemapTerrain.elevationBounds,e=this.view.renderCoordsHelper.getAltitude(f);d=d?Math.abs(d.max-d.min)/Math.abs(e):100;e=0<e?1:-1;g.normalize(c,c);g.scale(c,c,e*d);g.add(a,
f,c);n.fromPoints(a,f,q);a=this._getRayIntersection(q)}else a=this._getRayIntersection(b.ray);return this._canUpdateFromIntersectionResult(a,b)?a.point:null};return p}(x);t.__decorate([z.property()],h.LineOfSightRayIntersector.prototype,"view",void 0);h.LineOfSightRayIntersector=t.__decorate([A.subclass("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightRayIntersector")],h.LineOfSightRayIntersector);const v=m.create(),H=m.create(),I=m.create(),q=n.create();Object.defineProperty(h,"__esModule",
{value:!0})});