// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../core/Logger ../../../core/mathUtils ../../../core/promiseUtils ../../../core/watchUtils ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/vec2 ../../../chunks/vec2f64 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../geometry/projectionEllipsoid ../../../geometry/support/spatialReferenceUtils ../../../support/requestImageUtils ./atmosphereUtils ./SimpleAtmosphereTechnique ./resources/MarsAtmosphereTexture ./resources/SimpleAtmosphereTexture ../support/mathUtils ../support/buffer/glUtil ../support/buffer/InterleavedLayout ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/glUtil3D ../webgl-engine/lib/Util ../../webgl/BufferObject ../../webgl/Texture ../../webgl/Util ../../webgl/VertexArrayObject".split(" "),
function(C,p,v,q,D,E,F,G,H,h,m,I,J,K,w,r,L,M,N,O,P,Q,R,x,S,T,y,U){function z(l,k,b,c,a){const f=h.length(l),d=c*Math.sqrt(f*f-c*c)/f,g=a.silCircleV1,e=a.silCircleV2;h.scale(a.silCircleCenter,l,Math.sqrt(c*c-d*d)/f);h.cross(g,l,k);1>h.squaredLength(g)&&h.cross(g,l,b);h.scale(g,g,d/h.length(g));h.cross(e,g,l);h.scale(e,e,d/h.length(e));return d}const V=p.getLogger("esri.views.3d.environment.SimpleAtmosphere"),A=-w.INNER_ATMOSPHERE_DEPTH,W=N.makePiecewiseLinearFunction([[50,.1015625],[500,.21875],[5E3,
.51171875],[5E4,.4140625]]);p=function(){function l(b){this.view=b;this.slot=14;this._renderData={texV:H.create(),silCircleCenter:m.create(),silCircleV1:m.create(),silCircleV2:m.create(),altitudeFade:0,innerScale:0,undergroundFadeAlpha:0};this._fadeVaoCount=0;this._readyResolver=q.createResolver();this._readyController=q.createAbortController();this.texV1=1;this.isOnMars=J.isMars(b.spatialReference);b=I.getReferenceEllipsoid(b.spatialReference);this.planetRadius=b.radius;this.outerRimWidth=b.outerAtmosphereRimWidth;
this.innerRimFactor=(this.planetRadius+A)/this.planetRadius;this.middleRimFactor=(this.planetRadius+0)/this.planetRadius;this.outerRimFactor=(this.planetRadius+this.outerRimWidth)/this.planetRadius;this.texV0=0/this.outerRimWidth;this.texVScale=this.texV1-this.texV0}var k=l.prototype;k.when=function(){return this._readyResolver.promise};k.initializeRenderContext=function(b){const c=b.renderContext.rctx;this._cameraChangeHandle=D.init(this.view,"state.camera",()=>b.requestRender(),!0);const a=new r.SimpleAtmosphereTechniqueConfiguration;
a.geometry=0;this._atmosphereConeTechnique=b.shaderTechniqueRep.acquire(r.SimpleAtmosphereTechnique,a);a.geometry=2;this._atmosphereUndergroundTechnique=b.shaderTechniqueRep.acquire(r.SimpleAtmosphereTechnique,a);this._vao=this._createRibbon(c);this._vaoCount=y.vertexCount(this._vao,"geometry");this._fadeVao=R.createQuadVAO(c);this._fadeVaoCount=y.vertexCount(this._fadeVao,"geometry");K.requestImage(this.isOnMars?L:M,{signal:this._readyController.signal}).then(f=>{this._texture=new T(c,{pixelFormat:6408,
dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!0},f);b.requestRender();this._readyController=null;this._readyResolver.resolve()}).catch(f=>{q.isAbortError(f)||V.error("Unable to initialize simple atmosphere: image request failed",f);this._readyResolver.reject()})};k.uninitializeRenderContext=function(){this.destroy()};k.destroy=function(){this._readyResolver.reject();this._cameraChangeHandle&&(this._cameraChangeHandle.remove(),this._cameraChangeHandle=null);this._texture&&(this._texture.dispose(),
this._texture=null);this._fadeVao&&(this._fadeVao.dispose(),this._fadeVao=null);this._vao&&(this._vao.dispose(),this._vao=null);this._readyController&&(this._readyController.abort(),this._readyController=null)};k.render=function(b){if(b.slot!==this.slot||0!==b.pass)return!1;this._update(b.camera);const c=b.rctx;this._atmosphereConeTechnique.bindPipelineState(c);if(1>this._renderData.undergroundFadeAlpha){var a=this._atmosphereConeTechnique.program;c.useProgram(a);a.setUniformMatrix4fv("proj",b.camera.projectionMatrix);
a.setUniformMatrix4fv("view",b.camera.viewMatrix);a.setUniform3fv("silCircleCenter",this._renderData.silCircleCenter);a.setUniform3fv("silCircleV1",this._renderData.silCircleV1);a.setUniform3fv("silCircleV2",this._renderData.silCircleV2);a.setUniform2fv("texV",this._renderData.texV);a.bindTexture(this._texture,"tex");b.scenelightingData.setLightDirectionUniform(a);a.setUniform1f("altitudeFade",this._renderData.altitudeFade);a.setUniform1f("innerScale",this._renderData.innerScale);c.bindVAO(this._vao);
c.drawArrays(4,0,this._vaoCount)}0<this._renderData.undergroundFadeAlpha&&(a=this._atmosphereUndergroundTechnique.program,c.useProgram(a),a.setUniform1f("undergroundFadeAlpha",this._renderData.undergroundFadeAlpha),b.scenelightingData.setLightDirectionUniform(a),a.setUniform3fv("cameraPosition",b.camera.eye),c.bindVAO(this._fadeVao),c.drawArrays(5,0,this._fadeVaoCount));return!0};k._update=function(b){var c=m.create();const a=this.planetRadius;var f=h.length(b.eye);const d=f-a;this._renderData.undergroundFadeAlpha=
0>d?Math.min(-d/5E3,1):0;var g=a+A,e=a+Math.max(50,d);this._renderData.innerScale=e*e/(Math.sqrt(e*e-a*a)*Math.sqrt(e*e-g*g)+a*g)-1;this._renderData.altitudeFade=w.computeInnerAltitudeFade(d);h.scale(c,b.eye,(a+50)/f);z(c,b.center,b.up,a,this._renderData);c=this._computeScreenRimWidth(b,c,b.up,this._renderData);f=W(d);g=this.texV0+.001953125*this.texVScale;e=this.texV0+c*f*this.texVScale;50<d&&(z(b.eye,b.center,b.up,a,this._renderData),b=this._computeScreenRimWidth(b,b.eye,b.up,this._renderData),
b=v.clamp((b-1.5)/(c-1.5),0,1),g=this.texV0+.001953125*b*this.texVScale,e=this.texV0+v.lerp(this.texV1,c*f,b)*this.texVScale);G.set(this._renderData.texV,g,e)};k._createRibbon=function(b){const c=new Float32Array(1155),a=new Uint32Array(1920);c[0]=0;c[1]=0;c[2]=-1;for(var f=0;128>f;f++){var d=9*f+3;c[d+0]=f;c[d+1]=this.innerRimFactor;c[d+2]=-1;c[d+3]=f;c[d+4]=this.middleRimFactor;c[d+5]=0;c[d+6]=f;c[d+7]=this.outerRimFactor;c[d+8]=1;d=3*f+1;var g=127===f?1:d+3,e=15*f;a[e+0]=d;a[e+1]=d+1;a[e+2]=g+
1;a[e+3]=g+1;a[e+4]=g;a[e+5]=d;a[e+6]=d+1;a[e+7]=d+2;a[e+8]=g+2;a[e+9]=g+2;a[e+10]=g+1;a[e+11]=d+1;a[e+12]=d;a[e+13]=g;a[e+14]=0}f=B.createBuffer(a.length);d=f.position;for(g=0;g<a.length;++g)e=3*a[g],d.set(g,0,c[e]),d.set(g,1,c[e+1]),d.set(g,2,c[e+2]);return new U(b,Q.Default3D,{geometry:O.glLayout(B)},{geometry:S.createVertex(b,35044,f.buffer)})};k._computeScreenRimWidth=function(b,c,a,f){h.add(n,f.silCircleCenter,f.silCircleV2);h.scale(t,n,this.outerRimFactor);E.lookAt(u,c,n,a);x.project(n,u,b.projectionMatrix,
b.viewport);x.project(t,u,b.projectionMatrix,b.viewport);return h.distance(n,t)/b.height};C._createClass(l,[{key:"canRender",get:function(){return null!=this._texture}}]);return l}();const u=F.create(),n=m.create(),t=m.create(),B=P.newLayout().vec3f("position");return p});