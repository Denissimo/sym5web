// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../intl ../../../../../core/Accessor ../../../../../core/has ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/Quantity ../../../../../core/quantityFormatUtils ../../../../../core/unitUtils ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/Logger ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/accessorSupport/trackingUtils ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../interactive/measurementTools/support/measurementUtils ../../../interactive/measurementTools/support/viewUtils ../../../interactive/visualElements/LabelVisualElement ../../../interactive/visualElements/LineVisualElement ../../../interactive/visualElements/MeasurementAreaVisualElement ../../../interactive/visualElements/support/Segment ../../../webgl-engine/materials/lineStippleUtils ../../../../../intl/locale ../../../../../intl/messages".split(" "),
function(l,y,m,Y,K,Z,L,M,k,B,C,u,N,q,aa,ba,ca,O,D,E,P,F,t,G,Q,z,v,R,w,S,T,U){l.AreaMeasurementView=function(H){function A(a){a=H.call(this,a)||this;a._handles=new L;a._params={...V};a._path=null;a._intersectedPath=null;a._perimeter=null;a._intersectedPerimeter=null;a._projectionLines=null;a._measurementArea=null;a._areaLabel=null;a._pathLengthLabel=null;a._cursorSegmentLengthLabel=null;a._perimeterLengthLabel=null;a._pathSegments=[];a._perimeterSegments=[];a._cursorSegment=null;a._origin=t.create();
a._originTransform=P.create();a._cursorPositionRenderSpace=t.create();a.messages=null;a.viewData=W;a.areaLabel=null;a.perimeterLengthLabel=null;a.mode="auto";a.geodesicMeasurementDistanceThreshold=1E5;return a}y._inheritsLoose(A,H);var g=A.prototype;g.initialize=function(){var a=this;const b=this.view;this._path=new v.LineVisualElement({view:b,attached:!0,width:this._params.pathLineWidth,color:this._params.pathLineColor,polygonOffset:!0,renderOccluded:4});this._intersectedPath=new v.LineVisualElement({view:b,
attached:!0,width:this._params.pathLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4});this._perimeter=new v.LineVisualElement({view:b,attached:!0,width:this._params.perimeterLineWidth,color:this._params.perimeterLineColor,polygonOffset:!0,renderOccluded:4});this._intersectedPerimeter=new v.LineVisualElement({view:b,attached:!0,width:this._params.perimeterLineWidth,color:this._params.intersectingLineColor,polygonOffset:!0,renderOccluded:4});this._projectionLines=
new v.LineVisualElement({view:b,attached:!0,width:this._params.projectionLineWidth,color:this._params.projectionLineColor,stipplePattern:S.createStipplePatternSimple(this._params.projectionLineStippleSize),stippleIntegerRepeats:!1,polygonOffset:!0,renderOccluded:4});this._measurementArea=new R.MeasurementAreaVisualElement({view:b,attached:!0,color1:this._params.areaColor1,color2:this._params.areaColor2});this._areaLabel=new z.LabelVisualElement({view:this.view,attached:!0,fontSize:16});this._pathLengthLabel=
new z.LabelVisualElement({view:b,attached:!0,fontSize:12});this._cursorSegmentLengthLabel=new z.LabelVisualElement({view:b,attached:!0,fontSize:12});this._perimeterLengthLabel=new z.LabelVisualElement({view:b,attached:!0,fontSize:12});const c=this.layerView,d=c.layerViewData;this._handles.add([D.reactionInit(()=>[this.mode,this.visible,c.unit,d.measurementData,d.cursorPoint],()=>this._update()),D.reactionInit(()=>{var e;return null==(e=b.state)?void 0:e.camera},()=>this._updateLabels()),T.onLocaleChange(y._asyncToGenerator(function*(){return a._updateMessageBundle()}))]);
this._updateMessageBundle()};g.destroy=function(){this._measurementArea.destroy();this._measurementArea=null;this._path.destroy();this._path=null;this._intersectedPath.destroy();this._intersectedPath=null;this._perimeter.destroy();this._perimeter=null;this._intersectedPerimeter.destroy();this._intersectedPerimeter=null;this._areaLabel.destroy();this._areaLabel=null;this._pathLengthLabel.destroy();this._pathLengthLabel=null;this._cursorSegmentLengthLabel.destroy();this._cursorSegmentLengthLabel=null;
this._perimeterLengthLabel.destroy();this._perimeterLengthLabel=null;this.set("view",null)};g.whenMessages=function(){var a=y._asyncToGenerator(function*(){yield N.whenOnce(this,"messages")});return function(){return a.apply(this,arguments)}}();g._update=function(){if(!this.destroyed){var a=this.layerView.layerViewData.measurementData;k.isNone(a)||(this._updateViewData(a,this.layerView.layerViewData.path,this.layerView.layerViewData.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),
this._updateArea(),this._updateProjectionLines(),this._updateLabels())}};g._updateViewData=function(a,b,c){const d=b.isValidPolygon;var e=b.lastPoint;const h=k.isSome(e)&&k.isSome(c)?new B(G.segmentLengthGeodesic(e,c),"meters"):null;e=k.isSome(e)&&k.isSome(c)?new B(a.unitNormalizer.normalizeDistance(G.segmentLengthEuclidean(e,c,a.unitNormalizer.spatialReference)),"meters"):null;let f;"auto"===this.mode?(f="euclidean",(a.geodesicPathLength?a.geodesicPathLength.value:0)+(!d&&k.isSome(h)?h.value:0)>
this.geodesicMeasurementDistanceThreshold&&(f="geodesic")):f=this.mode;null==a.geodesicPathLength&&(f="euclidean");const n="geodesic"===f;var p=n?a.geodesicArea:a.area;let r=1;p&&(p=this._toPreferredAreaUnit(p,this.layerView.unit),r=M.nextHighestPowerOfTen(Math.sqrt(p.value)/Math.sqrt(300)),r*=Math.sqrt(u.convertUnit(1,p.unit,"square-meters")),r/=a.unitNormalizer.normalizeDistance(1));this._set("viewData",{validMeasurement:d,path:b,pathVersion:b.version,cursorPoint:c,measurementData:a,mode:f,positionsGeographic:a.positionsGeographic,
positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:n?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:n?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:n?a.geodesicAreaCentroidRenderCoords:a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:d?0:b.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:r,geodesicCursorSegmentLength:h,
cursorSegmentLength:e})};g._updateOrigin=function(){Q.midpoint(this.viewData.positionsRenderCoords,this._origin);E.identity(this._originTransform);E.translate(this._originTransform,this._originTransform,this._origin);this._measurementArea.transform=this._originTransform;this._projectionLines.transform=this._originTransform};g._createSegments=function(a){const b=this.viewData,c=b.path,d=this.view.renderCoordsHelper.spatialReference,e=b.mode,h=[],f=[],n=[],p=b.validMeasurement?c.numVertices:c.numVertices-
1;for(let r=0;r<p;++r){const I=b[a][r],J=b[a][(r+1)%c.numVertices];let x=null;switch(e){case "euclidean":x=new w.EuclideanSegment(I,J);break;case "geodesic":x=new w.GeodesicSegment(I,J,d)}b.intersectingSegments.has(r)?n.push(x):f.push(x);h.push(x)}return{all:h,nonIntersecting:f,intersecting:n}};g._updatePathSegments=function(){const a=this.visible;var b=this.viewData;const c=this._createSegments("positionsRenderCoords");var d=b.path,e=!d.isValidPolygon;const h=b.cursorPoint,f=this.view.renderCoordsHelper,
n=f.spatialReference,p=b.mode;this._cursorSegment=null;if(0<d.numVertices&&e&&k.isSome(h)&&f.toRenderCoords(h,this._cursorPositionRenderSpace)){b=b.positionsRenderCoords[d.numVertices-1];d=this._cursorPositionRenderSpace;e=null;switch(p){case "euclidean":e=new w.EuclideanSegment(b,d);break;case "geodesic":e=new w.GeodesicSegment(b,d,n)}c.nonIntersecting.push(e);this._cursorSegment=e}this._path.setGeometryFromSegments(c.nonIntersecting,this._origin);this._path.visible=a;this._intersectedPath.setGeometryFromSegments(c.intersecting,
this._origin);this._intersectedPath.visible=a;this._pathSegments=c.all};g._updatePerimeterSegments=function(){const a=this.visible&&"euclidean"===this.viewData.mode,b=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(b.nonIntersecting,this._origin);this._perimeter.visible=a;this._intersectedPerimeter.setGeometryFromSegments(b.intersecting,this._origin);this._intersectedPerimeter.visible=a;this._perimeterSegments=b.all};g._updateArea=function(){const a=this.viewData;
switch(a.mode){case "euclidean":this._updateAreaEuclidean(a);break;case "geodesic":this._updateAreaGeodesic()}};g._updateAreaEuclidean=function(a){const b=this.visible;a.validMeasurement&&0===a.intersectingSegments.size&&a.triangleIndices?(this._measurementArea.geometry={uv:a.positionsProjected,position:a.positionsFittedRenderCoords,triangleIndices:a.triangleIndices},this._measurementArea.size=[a.checkerSize,a.checkerSize],this._measurementArea.visible=b):this._measurementArea.visible=!1};g._updateAreaGeodesic=
function(){this._measurementArea.visible=!1};g._updateProjectionLines=function(){const a=this.viewData,b=this.visible,c=a.path;var d=a.mode;if(0<c.numVertices&&a.validMeasurement&&"euclidean"===d){d=[];for(let e=0;e<c.numVertices;++e){const h=t.create();F.subtract(h,a.positionsRenderCoords[e],this._origin);const f=t.create();F.subtract(f,a.positionsFittedRenderCoords[e],this._origin);d.push([h,f])}this._projectionLines.geometry=d;this._projectionLines.visible=b}else this._projectionLines.geometry=
null,this._projectionLines.visible=!1};g._updateLabels=function(){if(!this.destroyed){var a=this.viewData,b=a.path;if(b){var c=a.measurementData,d=a.mode,e=!b.isValidPolygon,h=this.visible,f=this._formatAreaLabel(this.messages,"geodesic"===d?c.geodesicArea:c.area,this.layerView.unit);k.isSome(f)?(this._areaLabel.geometry={type:"point",point:a.areaCentroid},this._areaLabel.text=f,this._areaLabel.visible=a.validMeasurement&&0===a.intersectingSegments.size&&h):this._areaLabel.visible=!1;this._set("areaLabel",
k.unwrap(f));f=this._formatLengthLabel(this.messages,"geodesic"===d?c.geodesicPathLength:c.pathLength,this.layerView.unit);if(k.isSome(f)&&0<=a.pathLengthLabelSegmentIndex&&a.pathLengthLabelSegmentIndex<this._pathSegments.length){const n=this._pathSegments[a.pathLengthLabelSegmentIndex],p=k.isSome(this._cursorSegment)?this._cursorSegment:X;this._pathLengthLabel.distance=this._params.labelDistance;this._pathLengthLabel.geometry={type:"corner",left:n,right:p};this._pathLengthLabel.text=f;this._pathLengthLabel.visible=
e&&0<b.numVertices&&h}else this._pathLengthLabel.visible=!1;b="geodesic"===d?a.geodesicCursorSegmentLength:a.cursorSegmentLength;k.isSome(b)?(d=this._formatLengthLabel(this.messages,b,this.layerView.unit),this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=k.isSome(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=k.unwrap(d),
this._cursorSegmentLengthLabel.visible=e&&0!==b.value&&h):this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1);this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);c=(e="geodesic"===a.mode)?c.geodesicPathLength:c.perimeterLength;c=k.unwrap(null!=c?this._formatLengthLabel(this.messages,c,this.layerView.unit):null);this._set("perimeterLengthLabel",k.unwrap(c));if(a.validMeasurement&&
0===a.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance;this._perimeterLengthLabel.anchor="top";this._perimeterLengthLabel.text=c;b=this._perimeterLengthLabel.visible=!0;for(c=0;c<a.path.numVertices;++c)if(b=(a.perimeterLengthLabelSegmentIndex+c)%a.path.numVertices,d=e?this._pathSegments[b]:this._perimeterSegments[b],b=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:d,sampleLocation:"center"},this._perimeterLengthLabel.overlaps(this._areaLabel))b=
!1;else break;this._perimeterLengthLabel.visible=b&&h}else this._perimeterLengthLabel.visible=!1}}};g._toPreferredAreaUnit=function(a,b){return a.toUnit(this._preferredAreaUnit(a,b))};g._preferredAreaUnit=function(a,b){switch(b){case "metric":return u.preferredMetricAreaUnit(a.value,a.unit);case "imperial":return u.preferredImperialAreaUnit(a.value,a.unit);default:return b}};g._preferredLengthUnit=function(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return u.preferredMetricLengthUnit(a.value,
a.unit);case "imperial":return u.preferredImperialLengthUnit(a.value,a.unit);default:return b}};g._deriveLengthUnitFromAreaUnit=function(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";
case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");};g._formatAreaLabel=function(a,b,c){return a&&b&&C.formatDecimal(a,b,this._preferredAreaUnit(b,c))};g._formatLengthLabel=function(a,b,c){return a&&b&&C.formatDecimal(a,b,this._preferredLengthUnit(b,c))};g._updateMessageBundle=function(){U.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a;this.view&&
this._update()})};y._createClass(A,[{key:"visible",get:function(){return this.layerView.visible&&!this.layerView.suspended}},{key:"testData",get:function(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}}]);return A}(K);m.__decorate([q.property()],l.AreaMeasurementView.prototype,"view",void 0);m.__decorate([q.property()],l.AreaMeasurementView.prototype,"messages",void 0);m.__decorate([q.property()],
l.AreaMeasurementView.prototype,"analysis",void 0);m.__decorate([q.property()],l.AreaMeasurementView.prototype,"viewData",void 0);m.__decorate([q.property()],l.AreaMeasurementView.prototype,"layerView",void 0);m.__decorate([q.property({readOnly:!0})],l.AreaMeasurementView.prototype,"areaLabel",void 0);m.__decorate([q.property({readOnly:!0})],l.AreaMeasurementView.prototype,"perimeterLengthLabel",void 0);m.__decorate([q.property()],l.AreaMeasurementView.prototype,"mode",void 0);m.__decorate([q.property({readOnly:!0})],
l.AreaMeasurementView.prototype,"visible",null);m.__decorate([q.property()],l.AreaMeasurementView.prototype,"geodesicMeasurementDistanceThreshold",void 0);l.AreaMeasurementView=m.__decorate([O.subclass("esri.views.3d.layers.analysis.AreaMeasurement.AreaMeasurementView")],l.AreaMeasurementView);const V={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,
handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},W={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,
positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,geodesicCursorSegmentLength:null,cursorSegmentLength:null},X=new w.EuclideanSegment(t.create(),t.create());Object.defineProperty(l,"__esModule",{value:!0})});