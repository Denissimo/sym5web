// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define(["require","exports","../../core/Error","../../core/maybe"],function(d,h,n,k){function e(a){return Object.freeze({__proto__:null,"default":a})}const f=()=>new Promise(function(a,b){d(["./layers/TileLayerView3D"],function(c){a(e(c))},b)}),l=()=>new Promise(function(a,b){d(["./layers/ElevationLayerView3D"],function(c){a(e(c))},b)}),m={"base-dynamic":()=>new Promise(function(a,b){d(["./layers/BaseDynamicLayerView3D"],function(c){a(e(c))},b)}),"base-elevation":l,"base-tile":f,"bing-maps":f,"building-scene":()=>
new Promise(function(a,b){d(["./layers/BuildingSceneLayerView3D"],function(c){a(e(c))},b)}),csv:()=>new Promise(function(a,b){d(["./layers/CSVLayerView3D"],function(c){a(e(c))},b)}),"direct-line-measurement":()=>new Promise(function(a,b){d(["./layers/DirectLineMeasurementLayerView3D"],function(c){a(e(c))},b)}),"area-measurement":()=>new Promise(function(a,b){d(["./layers/AreaMeasurementLayerView3D"],function(c){a(e(c))},b)}),elevation:l,feature:()=>new Promise(function(a,b){d(["./layers/FeatureLayerView3D"],
function(c){a(e(c))},b)}),geojson:()=>new Promise(function(a,b){d(["./layers/GeoJSONLayerView3D"],function(c){a(e(c))},b)}),graphics:()=>new Promise(function(a,b){d(["./layers/GraphicsLayerView3D"],function(c){a(e(c))},b)}),group:()=>new Promise(function(a,b){d(["../layers/GroupLayerView"],function(c){a(e(c))},b)}),imagery:()=>new Promise(function(a,b){d(["./layers/ImageryLayerView3D"],function(c){a(e(c))},b)}),"integrated-mesh":()=>new Promise(function(a,b){d(["./layers/IntegratedMeshLayerView3D"],
function(c){a(e(c))},b)}),"line-of-sight":()=>new Promise(function(a,b){d(["./layers/LineOfSightLayerView3D"],a,b)}),"map-image":()=>new Promise(function(a,b){d(["./layers/MapImageLayerView3D"],function(c){a(e(c))},b)}),"ogc-feature":()=>new Promise(function(a,b){d(["./layers/OGCFeatureLayerView3D"],function(c){a(e(c))},b)}),"open-street-map":f,"point-cloud":()=>new Promise(function(a,b){d(["./layers/PointCloudLayerView3D"],function(c){a(e(c))},b)}),voxel:()=>new Promise(function(a,b){d(["./layers/VoxelLayerView3D"],
function(c){a(e(c))},b)}),scene:a=>null==a.profile||"mesh-pyramids"===a.profile?new Promise(function(b,c){d(["./layers/SceneLayerView3D"],function(g){b(e(g))},c)}):new Promise(function(b,c){d(["./layers/SceneLayerGraphicsView3D"],function(g){b(e(g))},c)}),stream:()=>new Promise(function(a,b){d(["./layers/StreamLayerView3D"],function(c){a(e(c))},b)}),tile:f,"imagery-tile":()=>new Promise(function(a,b){d(["./layers/ImageryTileLayerView3D"],function(c){a(e(c))},b)}),"vector-tile":()=>new Promise(function(a,
b){d(["./layers/VectorTileLayerView3D"],function(c){a(e(c))},b)}),wcs:()=>new Promise(function(a,b){d(["./layers/ImageryTileLayerView3D"],function(c){a(e(c))},b)}),"web-tile":f,wfs:()=>new Promise(function(a,b){d(["./layers/WFSLayerView3D"],function(c){a(e(c))},b)}),wms:()=>new Promise(function(a,b){d(["./layers/WMSLayerView3D"],function(c){a(e(c))},b)}),wmts:()=>new Promise(function(a,b){d(["./layers/WMTSLayerView3D"],function(c){a(e(c))},b)}),slice:()=>new Promise(function(a,b){d(["./layers/SliceLayerView3D"],
a,b)}),"geo-rss":null,kml:null,"map-notes":null,route:null,"subtype-group":null,unknown:null,unsupported:null};h.layerView3DImporter={hasLayerViewModule:a=>k.isSome(m[a.type]),importLayerView:a=>{var b=m[a.type];if(!k.isSome(b))throw a=a.declaredClass?a.declaredClass.slice(a.declaredClass.lastIndexOf(".")+1):"Unknown",b=a.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),a=new n(`${b}:view-not-supported`,`${a} is not supported in 3D`),a;return b(a)}};Object.defineProperty(h,"__esModule",{value:!0})});