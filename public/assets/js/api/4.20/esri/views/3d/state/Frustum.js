// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/vec3","../../../chunks/vec3f64","../../../geometry/support/frustum"],function(m,n,f,g,d){function h(e,c,a){e.origin=c;e.endpoint=a;f.direction(e.direction,c,a)}let l=function(){function e(a){this.renderCoordsHelper=a;this.frustum=d.create();this._points=d.createPoints();this.lines=Array(12);this._origin=g.create();this._direction=g.create();this._altitude=null;for(a=0;12>a;a++)this.lines[a]={origin:null,direction:g.create(),
endpoint:null}}var c=e.prototype;c.update=function(a){d.fromMatrix(a.viewMatrix,a.projectionMatrix,this.frustum,this._points);f.copy(this._origin,a.eye);f.copy(this._direction,a.viewForward);this._altitude=this.renderCoordsHelper.getAltitude(this._origin);this.updateLines()};c.updatePoints=function(a){for(let b=0;b<this._points.length;b++)f.copy(this._points[b],a[b]);d.computePlanes(this.frustum,this._points);this.updateLines()};c.intersectsSphere=function(a){return d.intersectsSphere(this.frustum,
a)};c.intersectsRay=function(a){return d.intersectsRay(this.frustum,a)};c.intersectsLineSegment=function(a,b){return d.intersectsLineSegment(this.frustum,a,b)};c.intersectsPoint=function(a){return d.intersectsPoint(this.frustum,a)};c.updateLines=function(){const a=this._points;for(let b=0;4>b;b++){const k=b+4;h(this.lines[b],a[b],a[k]);h(this.lines[b+4],a[b],3===b?a[0]:a[b+1]);h(this.lines[b+8],a[k],3===b?a[4]:a[k+1])}};n._createClass(e,[{key:"planes",get:function(){return this.frustum}},{key:"points",
get:function(){return this._points}},{key:"mutablePoints",get:function(){return this._points}},{key:"direction",get:function(){return this._direction}},{key:"altitude",get:function(){return this._altitude}}]);return e}();l.planePointIndices=d.planePointIndices;l.nearFarLineIndices=[[0,4],[1,5],[2,6],[3,7]];m.Frustum=l;Object.defineProperty(m,"__esModule",{value:!0})});