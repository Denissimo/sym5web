// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/Handles ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../../core/mathUtils ../../../geometry/support/ray ../../../chunks/sphere ../../../geometry/support/vectorStacks ../camera/constraintUtils/surfaceCollision ../../../geometry/projectionEllipsoid ../camera/intersectionUtils".split(" "),
function(b,g,e,h,k,l,q,r,t,u,m,v,w,x,y,n,z,p){b.SurfaceCollisionConstraint=function(f){function d(a){a=f.call(this,a)||this;a.handles=new k;return a}g._inheritsLoose(d,f);var c=d.prototype;c.initialize=function(){this.handles.add(this.view.basemapTerrain.on("elevation-change",a=>this.handleElevationChangeEvent(a)))};c.destroy=function(){this.handles&&(this.handles.destroy(),this.handles=null)};c.handleElevationChangeEvent=function(a){this.view.state.cameraController||p.eyeWithinExtent(this.view,this.view.state.camera,
a.extent,a.spatialReference)&&this.applyToCurrentCamera()};c.applyToCurrentCamera=function(){this.view.state.updateCamera(a=>{n.applySurfaceCollisionConstraint(this.view,a,1)})};return d}(h);e.__decorate([l.property({constructOnly:!0})],b.SurfaceCollisionConstraint.prototype,"view",void 0);b.SurfaceCollisionConstraint=e.__decorate([m.subclass("esri.views.3d.state.ElevationCollisionConstraint")],b.SurfaceCollisionConstraint);b.default=b.SurfaceCollisionConstraint;Object.defineProperty(b,"__esModule",
{value:!0})});