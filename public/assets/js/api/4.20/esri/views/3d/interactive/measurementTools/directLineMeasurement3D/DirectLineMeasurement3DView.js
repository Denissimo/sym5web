// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/Logger ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/accessorSupport/trackingUtils ../../../../../chunks/vec3f64 ../../../../../geometry/support/lineSegment ../../../../../properties/defaultUnit ../../manipulatorUtils ./PickResult ../support/viewUtils ../../visualElements/LaserlineVisualElement ../../../support/ElevationProvider ../../../webgl-engine/lib/Intersector".split(" "),
function(d,r,f,A,B,c,C,g,K,L,M,N,D,m,t,y,E,F,v,w,G,H,I){const z={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5};var n;(function(p){p.Manipulators="manipulators";p.AnalysisViewDestroyed="analysis-view-destroyed";p.AnalysisView="analysis-view"})(n||(n={}));d.DirectLineMeasurement3DView=function(p){function u(a){var b=p.call(this,
a)||this;b._state="pending";b._visible=!1;b._laserLine=null;b._handles=new B;b._cursorPosition=t.create();b._startPosition=t.create();b._endPosition=t.create();b._lastDraggedHandle=null;b.analysisView=null;b._view=a.model.sceneView;b._intersector=new I.Intersector(b._view.state.viewingMode);b._intersector.options.store=0;return b}r._inheritsLoose(u,p);var e=u.prototype;e.normalizeCtorArgs=function(a){return{...a,params:a.params?w.copyParameter(z,a.params):w.copyParameter(z,{})}};e.initialize=function(){this._promise=
this._initialize()};e._initialize=function(){var a=r._asyncToGenerator(function*(){switch(this._state){case "destroyed":return Promise.reject("DirectLineMeasurement3DView already destroyed")}const b=yield this._view.whenLayerView(this.model.layer);yield b.whenReady();this._set("analysisView",b);this._laserLine=new G.LaserlineVisualElement({view:this._view,attached:!0});this._visible&&this._updateVisibility(this._visible);this._connectToAnalysisView();this._state="ready";return b});return function(){return a.apply(this,
arguments)}}();e.destroy=function(){switch(this._state){case "pending":this._state="destroyed";return;case "ready":break;default:return}this.hide();this._handles=c.destroyMaybe(this._handles);this._laserLine=c.destroyMaybe(this._laserLine);this._state="destroyed"};e.when=function(){return this._promise.then(()=>{})};e.whenMessages=function(){var a=r._asyncToGenerator(function*(){return this._promise.then(b=>b.whenMessages())});return function(){return a.apply(this,arguments)}}();e.createManipulators=
function(){var a=()=>{const k=F.createSphereManipulator(this._view,this.params.handleColor,this.params.handleOpacity);k.available=!1;k.radius=this.params.handleRadius;return k};const b=a(),h=a();this.model.startPoint&&(b.location=c.unwrap(this.model.startPoint),b.available=!0);this.model.endPoint&&(h.location=c.unwrap(this.model.endPoint),h.available=!0);var l=()=>{let k=this._lastDraggedHandle;b.grabbing&&!h.grabbing&&(k="start");h.grabbing&&!b.grabbing&&(k="end");b.grabbing||h.grabbing||(k=null);
const q=k!==this._lastDraggedHandle;this._lastDraggedHandle=k;q&&this.visible&&this._updateLaserLine()};a=b.events.on("grab-changed",l);l=h.events.on("grab-changed",l);this._handles.add([a,l],n.Manipulators);return{start:b,end:h}};e.show=function(){switch(this._state){case "ready":this._visible||this._updateVisibility(!0);break;case "pending":this._visible=!0}};e.hide=function(){switch(this._state){case "ready":this._visible&&this._updateVisibility(!1);break;case "pending":this._visible=!1}};e.finishMeasurement=
function(){this.model.finishMeasurement()};e._connectToAnalysisView=function(){this._handles.remove(n.AnalysisView);this._handles.add([m.reactionInit(()=>c.applySome(this.analysisView,a=>a.destroyed),a=>{a&&this._handles.remove(n.AnalysisView)}),m.reactionInit(()=>["measured"===this.model.state,this.analysisView],([a,b])=>{c.applySome(b,h=>h.allowVisualElementsOrientationChange=!a)}),m.autorun(()=>this._updateLaserLine()),m.autorun(()=>this._updateCursorPosition()),m.autorun(()=>this._updateStartPosition()),
m.autorun(()=>this._updateEndPosition()),m.reactionInit(()=>({unit:this.unit,layerView:this.analysisView}),({unit:a,layerView:b})=>c.applySome(b,h=>h.unit=a))],n.AnalysisView)};e._updateVisibility=function(a){(this._visible=a)?(this.model.layer.visible=!0,this._laserLine.style={innerColor:this.params.laserLineInnerColor,innerWidth:this.params.laserLineInnerWidth,glowColor:this.params.laserLineGlowColor,glowWidth:this.params.laserLineGlowWidth,glowFalloff:this.params.laserLineGlowFalloff,globalAlpha:this.params.laserLineGlobalAlpha},
this._laserLine.visible=!0,this._updateCursorPosition(),this._updateStartPosition(),this._updateEndPosition(),this._updateLaserLine()):(this.model.layer.visible=!1,this._laserLine.visible=!1,this._view.cursor=null)};e.pick=function(a){var b=this._view.spatialReference;a=C.screenPointObjectToArray(a.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);a=this._intersector.results.min;const h=t.create();if(!a.getIntersectionPoint(h))return new v.PickResult;
b=this._view.renderCoordsHelper.fromRenderCoords(h,b);return c.isNone(b)?new v.PickResult:new v.PickResult("TerrainRenderer"===a.intersector?"ground":"feature",h,b)};e.getElevation=function(a){return this._view.basemapTerrain.ready?c.unwrapOr(H.getElevationAtPoint(this._view.elevationProvider,a),0):0};e.overlappingHandles=function(a,b){return w.pointToPointScreenDistance(a,b,this._view)<=this.params.handleRadius};e._updateCursorPosition=function(){this.model.cursorPoint&&this._view.renderCoordsHelper.toRenderCoords(this.model.cursorPoint,
this._cursorPosition)};e._updateStartPosition=function(){c.isSome(this.model.startPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.startPoint,this._startPosition)};e._updateEndPosition=function(){c.isSome(this.model.endPoint)&&this._view.renderCoordsHelper.toRenderCoords(this.model.endPoint,this._endPosition)};e._getFocusPosition=function(){const a=this.model;var b=this.analysisView;b=c.isSome(b)&&!b.destroyed&&1===b.visualizedMeasurement;b=1===this.viewMode&&b;switch(a.state){case "drawing":return b?
this._startPosition:a.endPoint?this._endPosition:this._startPosition;case "editing":return b?"start"===this._lastDraggedHandle?this._endPosition:this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return a.cursorPoint?this._cursorPosition:null}};e._getFocusSpherePosition=function(){return"drawing"===this.model.state||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition};e._updateLaserLine=function(){if(this.visible){var {state:a,active:b,
startPoint:h}=this.model,l=this._getFocusPosition(),k=this.viewMode,q=this.analysisView,x=this.params.laserLineEnabled&&!!l&&"measured"!==a&&b;x&&c.isSome(q)&&!q.destroyed?(this._laserLine.heightManifoldTarget=1===q.actualVisualizedMeasurement?l:null,this._laserLine.pointDistanceLine=x&&h&&2===q.actualVisualizedMeasurement?{origin:this._getFocusSpherePosition(),target:l}:null,this._laserLine.lineVerticalPlaneSegment=x&&2===k?y.fromPoints(this._startPosition,this._endPosition,J):null):(this._laserLine.heightManifoldTarget=
null,this._laserLine.pointDistanceLine=null,this._laserLine.lineVerticalPlaneSegment=null)}};r._createClass(u,[{key:"requiresCursorPoint",get:function(){return"initial"===this.model.state&&this.model.active}},{key:"visible",get:function(){return this._visible},set:function(a){a?this.show():this.hide()}},{key:"viewMode",get:function(){const a=this.analysisView;return c.isSome(a)&&!a.destroyed?a.viewMode:0}},{key:"measurementMode",get:function(){const a=this.analysisView;return c.isSome(a)&&!a.destroyed?
a.actualVisualizedMeasurement:1}},{key:"unit",get:function(){return c.unwrapOr(this._cachedUnit,this._defaultUnit)},set:function(a){this._cachedUnit=a}},{key:"testData",get:function(){const a=this._laserLine.testData,b=c.unwrap(this.analysisView).testData;return{labels:null==b?void 0:b.labels,stripeLength:null==b?void 0:b.stripeLength,laserLineRenderer:{heightManifoldEnabled:c.isSome(a)?a.heightManifoldEnabled:!1,heightManifoldTarget:c.isSome(a)?a.heightManifoldTarget:null,pointDistanceEnabled:c.isSome(a)?
a.pointDistanceEnabled:!1,pointDistanceOrigin:c.isSome(a)?a.pointDistanceOrigin:null,pointDistanceTarget:c.isSome(a)?a.pointDistanceTarget:null,lineVerticalPlaneEnabled:c.isSome(a)?a.lineVerticalPlaneEnabled:!1}}}},{key:"directLabelText",get:function(){const a=this.analysisView;return c.isSome(a)&&!a.destroyed?a.directLabelText:null}},{key:"horizontalLabelText",get:function(){const a=this.analysisView;return c.isSome(a)&&!a.destroyed?a.horizontalLabelText:null}},{key:"verticalLabelText",get:function(){const a=
this.analysisView;return c.isSome(a)&&!a.destroyed?a.verticalLabelText:null}}]);return u}(A);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"_view",void 0);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"_visible",void 0);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"_laserLine",void 0);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"params",void 0);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,
"model",void 0);f.__decorate([g.property({readOnly:!0})],d.DirectLineMeasurement3DView.prototype,"analysisView",void 0);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"requiresCursorPoint",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"visible",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"viewMode",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"measurementMode",null);f.__decorate([g.property()],
d.DirectLineMeasurement3DView.prototype,"unit",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"_cachedUnit",void 0);f.__decorate([g.property(E.defaultUnitPropertyMetadata)],d.DirectLineMeasurement3DView.prototype,"_defaultUnit",void 0);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"testData",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"directLabelText",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,
"horizontalLabelText",null);f.__decorate([g.property()],d.DirectLineMeasurement3DView.prototype,"verticalLabelText",null);d.DirectLineMeasurement3DView=f.__decorate([D.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],d.DirectLineMeasurement3DView);const J=y.create();Object.defineProperty(d,"__esModule",{value:!0})});