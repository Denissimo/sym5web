// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../../chunks/_rollupPluginBabelHelpers ../../../../core/asyncUtils ../../../../core/has ../../../../core/lang ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/urlUtils ./I3SBinaryReader ./I3SMaterialUtil".split(" "),function(B,q,C,D,v,x,y,z,w){return function(){function r(b,a,d,c,e,f){this.streamDataController=a;this.logger=d;this.defaultGeometrySchema=c;this.requiredAttributes=e;this.options=f;this.logLayer=b;this.layerUrl=b.parsedUrl.path;this.geometryDefinitions=
b.geometryDefinitions;if(b.materialDefinitions){const g=b.textureSetDefinitions;this.materialAndTextures=b.materialDefinitions.map(h=>w.getMaterialAndTextures(g,h))}}var k=r.prototype;k.load=function(b,a,d){return this.streamDataController.request(b,a,d)};k.loadAttribute=function(b,a,d){return this.load(`${this.layerUrl}/nodes/${b.resources.attributes}/attributes/${a.key}/0`,"binary",d).then(c=>z.readBinaryAttribute(a,c))};k.loadAttributes=function(b,a,d){return x.eachAlways(a.map(c=>this.loadAttribute(b,
c.attributeStorageInfo,d))).then(c=>{const e={};for(let f=0;f<a.length;++f)if(c[f].value)e[a[f].name]=c[f].value;else{if(x.isAbortError(c[f].error))throw c[f].error;this.logger.error("#loadAttributes",this.logLayer,`Failed to load attributeData for '${a[f].name}' on node '${b.id}'`,c[f].error)}return e})};k.loadNodeData=function(){var b=B._asyncToGenerator(function*(a,d){var c=null!=this.requiredAttributes&&a.resources.attributes?q.result(this.loadAttributes(a,this.requiredAttributes,d)):null;var e=
this.geometryDefinitions;var f={bufferDefinition:null,bufferIndex:0};if(!(null==e||0>a.resources.geometryDefinition)&&(e=0<=a.resources.geometryDefinition?e[a.resources.geometryDefinition].geometryBuffers:null,null!=e))for(var g=0;g<e.length;g++){var h=e[g];if(null!=h.compressedAttributes){if("draco"===h.compressedAttributes.encoding&&!C("disable-feature:i3s-draco")){f.bufferIndex=g;f.bufferDefinition=h;break}}else f.bufferIndex=g,f.bufferDefinition=e[g]}const {bufferDefinition:p,bufferIndex:u}=f;
g=(h=!!a.resources.geometry)?q.result(this.loadGeometry(a.resources.geometry,u,d)):null;e=a.resources.hasSharedResource?yield this.loadShared(a,d):null;var l=(f=this.materialAndTextures&&0<=a.resources.materialDefinition?this.materialAndTextures[a.resources.materialDefinition]:null!=e?w.getMaterialAndTexturesFromShared(e):null)&&f.material;f=f&&f.textures;const E=`${a.id}`,A=!h&&this.options.loadFeatureData;h=A?yield this.loadFeatureData(E,d):null;if(A)a:{for(m of h.featureData)if(l=m.geometries,
null!=l)for(var n of l){var m={featureIds:[m.id],featureDataPosition:m.position,geometries:[n]};break a}m=null}else m={featureIds:[],geometries:[{type:"ArrayBufferView",params:{material:l}}],featureDataPosition:[0,0,0]};if(n=v.isNone(m)){n=[];for(var t of h.featureData)null!=t.position&&n.push({featureIds:[t.id],featureDataPosition:t.position,geometries:null})}t=n;n=null!=f&&0<f.length?q.result(this.loadTextures(a,f,d)):null;d=a=null;g&&(a=q.assertResult(yield g),(d=this.defaultGeometrySchema)&&e&&
e.materialDefinitions&&(g=Object.keys(e.materialDefinitions)[0],!e.materialDefinitions[g].params.vertexRegions&&d.vertexAttributes.region&&(d=D.clone(d),delete d.vertexAttributes.region)),d=z.createGeometryDescriptor(p,d));e=n?q.assertResult(yield n):null;c=(c=c?q.assertResult(yield c):{})?{attributeData:c,loadedAttributes:this.requiredAttributes}:null;return v.isSome(m)?{geometryData:m,attributeDataInfo:c,geometryBuffer:a,geometryDescriptor:d,requiredTextures:f,textureData:e}:v.isSome(t)?{pointData:t,
attributeDataInfo:c,geometryBuffer:a,geometryDescriptor:d,requiredTextures:f,textureData:e}:Promise.reject()});return function(a,d){return b.apply(this,arguments)}}();r.addAbsoluteHrefTexture=function(b,a){b=b.textureDefinitions;if(null!=b)for(const d of Object.keys(b))for(const c of b[d].images)Array.isArray(c.href)?c.hrefConcat=c.href.map(e=>y.makeAbsolute(e,a)):c.hrefConcat=y.makeAbsolute(c.href,a)};r.fixTextureEncodings=function(b){b=b.textureDefinitions;if(null!=b)for(const d in b){const c=b[d];
if(Array.isArray(c.encoding))for(var a=0;a<c.encoding.length;a++){const e=c.encoding[a];"data:"===e.substring(0,5)&&(c.encoding[a]=e.substring(5))}else a=c.encoding,"data:"===a.substring(0,5)&&(c.encoding=a.substring(5))}};k.loadShared=function(b,a){const d=`${this.layerUrl}/nodes/${b.resources.geometry}/shared`;return this.load(d,"json",a).then(c=>{r.fixTextureEncodings(c);r.addAbsoluteHrefTexture(c,d);return c})};k.loadTexture=function(b,a,d,c,e,f){let g=!1;return 4===e||1===e||2===e?this.load(b,
"binary",f).then(h=>({id:a,usage:d,data:h,encoding:e,downsampled:g})):this.load(b,"image",f).then(h=>{var p=h;if(c&&4096<=h.width*h.height){p=Math.ceil(h.width/2);const u=Math.ceil(h.height/2),l=document.createElement("canvas");l.width=p;l.height=u;l.getContext("2d").drawImage(h,0,0,p,u);p=l;g=!0}return{id:a,usage:d,data:p,encoding:e,downsampled:g}})};k.loadTextures=function(b,a,d){const c=this.options.uncompressedTextureDownsamplingEnabled,e=this.options.textureUsageMask;return Promise.all(a.map(f=>
{if(0===(f.usage&e))return null;const g=w.selectEncoding(f.encodings,this.options.textureEncodings);return null==g?(this.logger.error("#loadTextures",this.logLayer,`No known encoding for texture found on node ${b.id}`),Promise.reject()):this.loadTexture(`${this.layerUrl}/nodes/${b.resources.texture||b.id}/textures/${g.name}`,f.id,f.usage,c,g.encoding,d)}))};k.loadFeatureData=function(b,a){return this.load(`${this.layerUrl}/nodes/${b}/features/0`,"json",a)};k.loadGeometry=function(b,a,d){return this.load(`${this.layerUrl}/nodes/${b}/geometries/${a}`,
"binary",d)};return r}()});