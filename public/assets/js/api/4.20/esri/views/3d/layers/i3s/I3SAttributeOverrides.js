// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../request ../../../../core/arrayUtils ../../../../core/asyncUtils ../../../../core/byteSizeEstimations ../../../../core/Logger ../../../../core/maybe ../../../../core/promiseUtils ../../../../intl/number ../../../../layers/support/featureQueryAll".split(" "),function(v,q,A,w,r,x,t,l,y,B,u){const C=t.getLogger("esri.views.3d.layers.i3s.I3SAttributeOverrides");t=function(){function p(b,a){this.layer=b;this.warnMaximumChangedObjectsExceeded=
!1;this.changedObjectIds=new Set;this.pendingFetchAbortController=y.createAbortController();this.interactiveEditingSessions=null;this._maximumNumberOfEditOVerrides=5E4;this.memCache=a.getMemCache(`${b.uid}-attribute-overrides`);this.pendingFetchChangedObjectIds=this.fetchChangedObjectIds(this.pendingFetchAbortController.signal);this.pendingFetchChangedObjectIds.then(()=>this.pendingFetchAbortController=null)}var g=p.prototype;g.destroy=function(){this.layer=null;this.memCache.destroy();this.memCache=
null;this.pendingFetchAbortController&&(this.pendingFetchAbortController.abort(),this.pendingFetchAbortController=null);this.pendingFetchChangedObjectIds=null};g.createInteractiveEditSession=function(b){this.changedObjectIds.add(b);l.isNone(this.interactiveEditingSessions)&&(this.interactiveEditingSessions=[]);const a=this.interactiveEditingSessions,c=new D(b,{rollback:()=>{w.remove(a,c);0===a.length&&(this.interactiveEditingSessions=null)},commit:d=>{for(const [f,e]of d)this.updateValue(b,f,e)}});
a.unshift(c);return c};g.apply=function(){var b=q._asyncToGenerator(function*(a,c,d){if(!l.isNone(c)){var {loadedAttributes:f,attributeData:e}=c;if(!l.isNone(f)&&0!==f.length&&!l.isNone(e)&&(yield y.whenOrAbort(this.pendingFetchChangedObjectIds,d),0!==this.changedObjectIds.size)){c={loadedAttributes:f,attributeData:e};var h=this.getOverridesFromCache(a,c,this.changedObjectIds),{objectIds:m,fieldNames:k}=h;d=yield this.queryOverridesFromAssociatedLayer(m,k,d);l.isNone(d)||this.processOverridesFromAssociatedLayer(a,
d,k,c)}}});return function(a,c,d){return b.apply(this,arguments)}}();g.updateValue=function(b,a,c){this.changedObjectIds.add(b);this.cacheValue(b,a,c)};g.cacheValue=function(b,a,c){this.memCache.put(this.getCacheKey(b,a),c,this.memCacheValueSize(c))};g.getOverridesFromCache=function(b,{loadedAttributes:a,attributeData:c},d){const f=new Set,e=[];for(var h of a)e[h.index]=c[h.name];c=new Set;for(h=0;h<b.length;h++){const m=b[h];if(d.has(m))for(const k of a){const n=this.fromCache(m,k.index);void 0!==
n?e[k.index][h]=n:(f.add(m),c.add(k.name))}}return{objectIds:Array.from(f),fieldNames:Array.from(c)}};g.fromCache=function(b,a){const c=this.fromInteractiveEditingSession(b,a);if(void 0!==c)return c;b=this.getCacheKey(b,a);return this.memCache.get(b)};g.fromInteractiveEditingSession=function(b,a){if(!l.isNone(this.interactiveEditingSessions))for(const c of this.interactiveEditingSessions){if(c.objectId!==b)continue;const d=c.get(a);if(void 0!==d)return d}};g.getCacheKey=function(b,a){return`${b}-${a}`};
g.queryOverridesFromAssociatedLayer=function(){var b=q._asyncToGenerator(function*(a,c,d){if(0===a.length||0===c.length)return null;a=a.sort((h,m)=>h-m);this.warnMaximumChangedObjectsExceeded&&(this.warnMaximumChangedObjectsExceeded=!1,this.logMaximumObjectsExceededWarning());const f=l.unwrap(this.layer.associatedLayer),e=f.createQuery();e.where="1\x3d1";e.returnGeometry=!1;e.outFields=[f.objectIdField,...c];e.cacheHint=!0;e.objectIds=a;c=u.getMaximumQuerySize(f);a=a.length>c?w.splitIntoChunks(a,
c).map(h=>{const m=e.clone();m.objectIds=h;return r.resultOrAbort(u.queryAllJSON(f,m,{signal:d}))}):[r.resultOrAbort(u.queryAllJSON(f,e,{signal:d}))];return(yield Promise.all(a)).reduce((h,m)=>h.concat(m.ok?m.value.features:[]),[])});return function(a,c,d){return b.apply(this,arguments)}}();g.logMaximumObjectsExceededWarning=function(){let b=`The number of edited objects that are not yet cached in the scene service exceeds the maximum limit. Attribute changes will only be available for the first ${B.formatNumber(this._maximumNumberOfEditOVerrides)} objects. Please consider re-caching the scene service`;
const a=this.layer.portalItem;b=a&&a.loaded?b+` (${a.portal.url}/home/item.html?id=${a.id}#settings)`:b+` (${this.layer.parsedUrl.path})`;C.warn("#queryOverrides()",this.layer.title,`${b}.`)};g.processOverridesFromAssociatedLayer=function(b,a,c,{loadedAttributes:d,attributeData:f}){const e=l.unwrap(this.layer.associatedLayer).objectIdField,h=c.map(k=>f[k]),m=new Map(d.map(k=>[k.name,k.index]));d=c.map(k=>m.get(k));b=new Map(Array.from(b,(k,n)=>[k,n]));for(const k of a){a=k.attributes[e];for(let n=
0;n<c.length;n++){const E=d[n],F=b.get(a),z=k.attributes[c[n]];h[n][F]=z;this.cacheValue(a,E,z)}}};g.memCacheValueSize=function(b){return"string"===typeof b?x.estimateStringByteSize(b):x.estimateNumberByteSize()};g.fetchChangedObjectIds=function(){var b=q._asyncToGenerator(function*(a){var c,d,f,e=this.layer;yield e.load({signal:a});this.changedObjectIds.clear();if(!l.isNone(e.associatedLayer)&&null!=(c=e.associatedLayer.capabilities)&&null!=(d=c.operations)&&d.supportsChangeTracking){c=this.getFetchChangedObjectIdsServerGen();
if(l.isNone(c))return null;d=e.associatedLayer.layerId;a=yield r.result(A(`${e.associatedLayer.url}/extractChanges`,{method:"post",query:{f:"json",returnIdsOnly:!0,layers:`${d}`,returnUpdates:!0,returnDeletes:!1,returnInserts:!1,layerServerGens:JSON.stringify([{id:d,serverGen:c}])},timeout:1E4,signal:a}));a=a.ok&&null!=(f=a.value.data)&&f.edits?l.get(a.value.data.edits[0],"objectIds","updates"):null;if(l.isSome(a))for(f=Math.min(this._maximumNumberOfEditOVerrides,a.length),f<a.length&&(this.warnMaximumChangedObjectsExceeded=
!0),a=a.sort((h,m)=>h-m),e=0;e<f;e++)this.changedObjectIds.add(a[e])}});return function(a){return b.apply(this,arguments)}}();g.getFetchChangedObjectIdsServerGen=function(){var b=this.layer;if(l.isSome(b.serviceUpdateTimeStamp)&&l.isSome(b.serviceUpdateTimeStamp.lastUpdate))return b.serviceUpdateTimeStamp.lastUpdate;b=b.associatedLayer;return l.isSome(b)&&l.isSome(b.serverGens)&&l.isSome(b.serverGens.minServerGen)?b.serverGens.minServerGen:null};q._createClass(p,[{key:"test",get:function(){const b=
this;return{changedObjectIds:Array.from(this.changedObjectIds),pendingFetchChangedObjectIds:this.pendingFetchChangedObjectIds,get maximumNumberOfEditOVerrides(){return b._maximumNumberOfEditOVerrides},set maximumNumberOfEditOVerrides(a){b._maximumNumberOfEditOVerrides=a}}}}]);return p}();let D=function(){function p(b,a){this.objectId=b;this.options=a;this.updates=new Map;this.state=0}var g=p.prototype;g.get=function(b){return this.updates.get(b)};g.set=function(b,a){this.isActive&&this.updates.set(b,
a)};g.rollback=function(){this.isActive&&(this.state=2,this.options.rollback())};g.commit=function(){this.isActive&&(this.state=1,this.options.commit(this.updates),this.updates.clear())};q._createClass(p,[{key:"isActive",get:function(){return 0===this.state}}]);return p}();v.I3SAttributeOverrides=t;Object.defineProperty(v,"__esModule",{value:!0})});