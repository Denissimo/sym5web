// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/_rollupPluginBabelHelpers ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/Quantity ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/accessorSupport/ensureType ../../../../../core/Logger ../../../../../core/jsonMap ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/accessorSupport/trackingUtils ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/geometryEngine ../../../../../geometry/Polyline ../../../../../geometry/projection ../../../../../geometry/projectionEllipsoid ../../../../../geometry/support/geodesicUtils ../support/UnitNormalizer".split(" "),
function(f,z,n,D,E,l,x,p,F,u,M,N,O,P,G,H,A,q,I,J,h,v,y,K){f.DirectLineMeasurementController=function(B){function w(a){a=B.call(this,a)||this;a._unitNormalizer=new K.UnitNormalizer;a._handles=new E;a._tempStartPosition=q.create();a._tempEndPosition=q.create();a._tempCornerPosition=q.create();return a}z._inheritsLoose(w,B);var k=w.prototype;k.initialize=function(){this._handles.add(F.whenOnce(this.view,"ready",()=>this._initialize(),!0))};k.destroy=function(){this._handles=x.destroyMaybe(this._handles)};
k._initialize=function(){const a=this.view.spatialReference;var b=v.getSphericalPCPF(a);this._sphericalPCPF=b=b===v.SphericalECEFSpatialReference?v.WGS84ECEFSpatialReference:b;const c=h.canProjectWithoutEngine(a,b);this._unitNormalizer.spatialReference=c?b:a;this._handles.add(H.reactionInit(()=>({result:this._computedResult,viewData:this.viewData}),({result:e,viewData:d})=>{d.result=e}))};k._euclideanDistances=function(a,b){var c=a.clone();c.z=b.z;const e=this._tempStartPosition;var d=this._tempEndPosition,
m=this._tempCornerPosition,g=this.view.spatialReference;const C=this._sphericalPCPF;g=h.canProjectWithoutEngine(g,C)?C:g;h.projectPointToVector(a,e,g);h.projectPointToVector(b,d,g);h.projectPointToVector(c,m,g);c=A.distance(e,d);d=A.distance(m,d);a=Math.abs(b.z-a.z);b=L=>this._unitNormalizer.normalizeDistance(L);m=b(c);d=b(d);a=b(a);return{direct:new p(m,"meters"),horizontal:new p(d,"meters"),vertical:new p(a,"meters")}};k._exactGeodesicDistanceAndAngle=function(a,b,c){const e=a.spatialReference;
var d=new J({spatialReference:e});d.addPath([a,b]);d=e.isGeographic&&y.isSupported(e)?y.geodesicLengths([d],"meters")[0]:e.isWebMercator?I.geodesicLength(d,"meters"):void 0;const {distance:m,angle:g}=d?{distance:d,angle:this._fallbackGeodesicAngle(d,e)}:this._fallbackGeodesicDistance(a,b,c);return{distance:new p(m,"meters"),angle:new p(g,"degrees")}};k._fallbackGeodesicAngle=function(a,b){return a/v.getReferenceEllipsoid(b).metersPerDegree};k._fallbackGeodesicDistance=function(a,b,c){if(h.projectPointToWGS84ComparableLonLat(a,
r)){h.projectPointToWGS84ComparableLonLat(b,t);a=l.deg2rad(r[0]);b=l.deg2rad(r[1]);c=l.deg2rad(t[0]);const e=l.deg2rad(t[1]);a=l.acosClamped(Math.sin(b)*Math.sin(e)+Math.cos(b)*Math.cos(e)*Math.cos(Math.abs(c-a)));a=l.rad2deg(a);b={distance:0};y.inverseGeodeticSolver(b,[r[0],r[1]],[t[0],t[1]]);return{distance:b.distance,angle:a}}return{distance:c,angle:this._fallbackGeodesicAngle(c,a.spatialReference)}};z._createClass(w,[{key:"_computedResult",get:function(){const {startPoint:a,endPoint:b}=this.layer;
if(x.isNone(a)||x.isNone(b))return null;const c=this._euclideanDistances(a,b),e=this._exactGeodesicDistanceAndAngle(a,b,c.horizontal.value);return{directDistance:c.direct,horizontalDistance:c.horizontal,verticalDistance:c.vertical,geodesicDistance:e.distance,geodesicAngle:e.angle}}}]);return w}(D);n.__decorate([u.property()],f.DirectLineMeasurementController.prototype,"view",void 0);n.__decorate([u.property()],f.DirectLineMeasurementController.prototype,"layer",void 0);n.__decorate([u.property()],
f.DirectLineMeasurementController.prototype,"viewData",void 0);n.__decorate([u.property()],f.DirectLineMeasurementController.prototype,"_computedResult",null);f.DirectLineMeasurementController=n.__decorate([G.subclass("esri.views.3d.layers.analysis.DirectLineMeasurement/DirectLineMeasurementController")],f.DirectLineMeasurementController);const r=q.create(),t=q.create();Object.defineProperty(f,"__esModule",{value:!0})});