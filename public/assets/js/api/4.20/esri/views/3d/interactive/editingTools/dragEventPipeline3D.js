// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/mathUtils ../../../../core/maybe ../../../../core/screenUtils ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/projection ../../../../geometry/support/plane ../../../../geometry/support/ray ../../../../geometry/support/vector ../../../../geometry/support/vectorStacks ../../../../support/elevationInfoUtils ../../support/geometryUtils/ray ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/verticalOffsetUtils ../../../interactive/dragEventPipeline".split(" "),
function(n,H,h,p,l,q,v,t,I,J,w,x,y,K,z,L){function A(a,b){return B(a,()=>b)}function B(a,b){const c=q.create(),f=q.create();let g=!1;return e=>{const k=b(e);if("start"===e.action){var d=p.screenPointObjectToArray(e.screenStart,p.castScreenPointArray(w.sv2d.get()));d=y.fromScreen(a.state.camera,d,C);h.isSome(d)&&(g=t.intersectRay(k,d,c))}if(!g)return null;d=p.screenPointObjectToArray(e.screenEnd,p.castScreenPointArray(w.sv2d.get()));d=y.fromScreen(a.state.camera,d,C);return h.isNone(d)?null:t.intersectRay(k,
d,f)?{...e,renderStart:c,renderEnd:f,plane:k,ray:d}:null}}function M(a,b,c,f=null,g=null){let e=null;return k=>{if("start"===k.action&&(e=a.sceneIntersectionHelper.intersectElevationFromScreen(p.createScreenPointArray(k.screenStart.x,k.screenStart.y),b,c,g),h.isSome(e)&&h.isSome(f)&&!v.projectPoint(e,e,f))||h.isNone(e))return null;const d=a.sceneIntersectionHelper.intersectElevationFromScreen(p.createScreenPointArray(k.screenEnd.x,k.screenEnd.y),b,c,g);return h.isSome(d)?h.isSome(f)&&!v.projectPoint(d,
d,f)?null:{...k,mapStart:e,mapEnd:d}:null}}function D(a,b,c,f=null,g=null){b=x.getZForElevationMode(b,a,c);return M(a,c,b,f,g)}function E(a,b,c,f=null,g=null){return D(a,c,x.getGraphicEffectiveElevationInfo(b),f,g)}function N(a,b){const c=O,f=P,g=t.create();a.renderCoordsHelper.worldUpAtPosition(b,c);a=l.cross(g,c,l.subtract(f,b,a.state.camera.eye));l.cross(a,a,c);return t.fromPositionAndNormal(b,a,g)}function F(a,b){const c=q.create(),f=l.length(b);a.renderCoordsHelper.worldUpAtPosition(b,c);const g=
q.create(),e=q.create(),k=d=>{l.subtract(d,d,b);J.projectPoint(c,d,d);"global"===a.viewingMode&&l.length(d)*H.sign(l.dot(c,d))<-f+.001&&l.subtract(d,l.scale(d,c,.001),b);l.add(d,d,b);return d};return d=>{d.renderStart=k(l.copy(g,d.renderStart));d.renderEnd=k(l.copy(e,d.renderEnd));return d}}function G(a,b){const c=a.renderCoordsHelper;return f=>{const g=c.fromRenderCoords(f.renderStart,b),e=c.fromRenderCoords(f.renderEnd,b);return h.isSome(g)&&h.isSome(e)?{...f,mapStart:g,mapEnd:e}:null}}const O=
q.create(),P=q.create(),C=I.create();n.convertToMapCoordinates=G;n.hideManipulatorWhileDragging=function(a){let b=null;return c=>{switch(c.action){case "start":b=a.disableDisplay();break;case "end":case "cancel":h.isSome(b)&&(b.remove(),b=null)}return c}};n.projectToWorldUp=F;n.screenToMap3D=function(a,b=null){const c=new K.Intersector(a.state.viewingMode);c.options.selectionMode=!0;c.options.store=0;c.options.hud=!1;const f=p.createScreenPointArray(),g={requiresGroundFeedback:!0,enableDraped:!0,
exclude:new Set},e=q.create(),k=h.unwrapOr(b,a.spatialReference),d=m=>{a.map.ground&&1>a.map.ground.opacity?g.exclude.add(z.TERRAIN_ID):g.exclude.delete(z.TERRAIN_ID);a.sceneIntersectionHelper.intersectIntersectorScreen(p.screenPointObjectToArray(m,f),c,g);m=c.results.min;if(m.getIntersectionPoint(e))m="TerrainRenderer"===m.intersector?0:1;else if(c.results.ground.getIntersectionPoint(e))m=0;else return null;return{location:a.renderCoordsHelper.fromRenderCoords(e,k),surfaceType:m}};let u;return m=>
{if("start"===m.action){var r=d(m.screenStart);u=h.isSome(r)?r.location:null}if(h.isNone(u))return null;r=d(m.screenEnd);return h.isSome(r)&&h.isSome(r.location)?{...m,mapStart:u,mapEnd:r.location,surfaceType:r.surfaceType}:null}};n.screenToMapXYAtLocation=D;n.screenToMapXYForGraphic=function(a,b,c,f){a=b.toMap(a.screenStart,{include:[c]});return h.isSome(a)?E(b,c,a,f):null};n.screenToMapXYForGraphicAtLocation=E;n.screenToRenderPlane=A;n.screenToRenderPlaneFromEvent=function(a){return B(a,b=>b.plane)};
n.screenToZConstrained=function(a,b,c){let f=null;const g=new L.EventPipeline;g.next(A(a,N(a,b))).next(F(a,b)).next(G(a,c)).next(e=>{e.mapEnd.x=e.mapStart.x;e.mapEnd.y=e.mapStart.y;f=e});return e=>{f=null;g.execute(e);return f}};Object.defineProperty(n,"__esModule",{value:!0})});