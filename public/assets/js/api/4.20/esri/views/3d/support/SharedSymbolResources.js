// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../core/arrayUtils ../../../core/Handles ../../../geometry/projectionEllipsoid ./TextureCollection ../webgl-engine/lib/screenSizePerspectiveUtils".split(" "),function(e,k,l,m,n,f){let h=function(){function g(a){this.streamDataRequester=this.textures=null;this.graphicsOwners=[];this.cimSymbolRasterizer=this.screenSizePerspectiveHandles=null;this.viewState=a.viewState;this.view=a.view;this.pointsOfInterest=a.pointsOfInterest;this.objectResourceCache=a.objectResourceCache;this.streamDataRequester=
a.resourceController.createStreamDataRequester(4);this.textures=new n.TextureCollection(this.streamDataRequester,a.view._stage,{preMultiplyAlpha:!0,wrap:{s:33071,t:33071}},a.resourceController.scheduler);const b=m.getReferenceEllipsoid(this.view.spatialReference).radius;this.screenSizePerspectiveSettings=f.getSettings(a.viewingMode,b);this.screenSizePerspectiveSettingsLabels=f.getLabelSettings(a.viewingMode,b)}var c=g.prototype;c.destroy=function(){this.textures.destroy();this.streamDataRequester=
this.textures=null};c.addGraphicsOwner=function(a){if(!a)return{remove(){}};this.graphicsOwners.push(a);const b="layer"in a?a.watch("layer.screenSizePerspectiveEnabled",()=>this.updateScreenSizePerspectiveEnabled()):null;this.updateScreenSizePerspectiveEnabled();return{remove:()=>{b&&(b.remove(),k.removeUnordered(this.graphicsOwners,a),this.updateScreenSizePerspectiveEnabled())}}};c.updateScreenSizePerspectiveEnabled=function(){var a=this.graphicsOwners.some(b=>!0===b.get("layer.screenSizePerspectiveEnabled"));
a&&!this.screenSizePerspectiveHandles?(this.screenSizePerspectiveHandles=new l,a=()=>this.updateScreenSizePerspectiveSettings(),this.screenSizePerspectiveHandles.add([this.pointsOfInterest.centerOnSurfaceInfrequent.watch("distance",a,!0),this.viewState.events.on("camera-projection-changed",a)]),this.updateScreenSizePerspectiveSettings()):!a&&this.screenSizePerspectiveHandles&&(this.screenSizePerspectiveHandles.destroy(),this.screenSizePerspectiveHandles=null)};c.updateScreenSizePerspectiveSettings=
function(){d.distance=this.pointsOfInterest.centerOnSurfaceInfrequent.distance;d.fovY=this.viewState.camera.fovY;this.screenSizePerspectiveSettings.update(d);this.screenSizePerspectiveSettingsLabels.update(d);this.view._stage.renderView.setNeedsRender()};return g}();const d={distance:0,fovY:0};e.SharedSymbolResources=h;e.default=h;Object.defineProperty(e,"__esModule",{value:!0})});