// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../geometry ../../../../core/arrayUtils ../../../../core/maybe ../../../../core/promiseUtils ../../../support/Scheduler ../../../../geometry/Multipoint".split(" "),function(n,q,r,t,p,k,u,v){r=function(){function l(a,c){this.spatialReference=a;this.view=c}var m=l.prototype;m.getElevation=function(a,c,d){return this.view.elevationProvider.getElevation(a,c,0,this.spatialReference,d)};m.queryElevation=function(){var a=q._asyncToGenerator(function*(c,
d,g,f,h){return this.view.elevationProvider.queryElevation(c,d,0,this.spatialReference,h,g,f)});return function(c,d,g,f,h){return a.apply(this,arguments)}}();return l}();let x=function(){function l(a,c,d,g){this.spatialReference=c;this._getElevationQueryProvider=d;this._queries=[];this._queryOptions={...g,ignoreInvisibleLayers:!0};this._frameTask=a.registerTask(u.TaskPriority.ELEVATION_QUERY,this)}var m=l.prototype;m.destroy=function(){this._frameTask.remove()};m.queryElevation=function(a,c,d,g=0){return new Promise((f,
h)=>{const b={x:a,y:c,minDemResolution:g,result:{resolve:f,reject:h},signal:d};this._queries.push(b);k.onAbort(d,()=>{t.remove(this._queries,b);h(k.createAbortError())})})};m.runTask=function(){const a=this._queries;this._queries=[];const c=this._getElevationQueryProvider();if(c){var d=a.map(b=>[b.x,b.y]),g=a.reduce((b,e)=>Math.min(b,e.minDemResolution),Infinity);d=new v({points:d,spatialReference:this.spatialReference});var f=1<a.length&&a.some(b=>!!b.signal)?k.createAbortController():null,h=p.isSome(f)?
f.signal:a[0].signal;if(p.isSome(f)){let b=0;a.forEach(e=>k.onAbort(e.signal,()=>{b++;e.result.reject(k.createAbortError());b===a.length&&f.abort()}))}c.queryElevation(d,{...this._queryOptions,minDemResolution:g,signal:h}).then(b=>{a.forEach((e,w)=>{p.isSome(e.signal)&&e.signal.aborted?e.result.reject(k.createAbortError()):e.result.resolve(b.geometry.points[w][2])})}).catch(b=>{a.forEach(e=>e.result.reject(b))})}else a.forEach(b=>b.result.reject())};q._createClass(l,[{key:"running",get:function(){return 0<
this._queries.length}},{key:"test",get:function(){const a=this;return{update:()=>0<a._queries.length&&a.runTask()}}}]);return l}();n.ElevationQuery=x;n.ViewElevationProvider=r;Object.defineProperty(n,"__esModule",{value:!0})});