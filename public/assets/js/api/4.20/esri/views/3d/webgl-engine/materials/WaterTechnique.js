// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../chunks/tslib.es6 ../core/shaderLibrary/Slice.glsl ../core/shaderLibrary/output/OutputHighlight.glsl ../core/shaderLibrary/shading/MultipassTerrainTest.glsl ../core/shaderLibrary/shading/ReadShadowMap.glsl ../core/shaderLibrary/shading/ScreenSpaceReflections.glsl ../core/shaderLibrary/shading/WaterDistortion.glsl ../core/shaderLibrary/util/View.glsl ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultVertexAttributeLocations ../lib/OrderIndependentTransparency ../lib/Program ../../../../chunks/WaterSurface.glsl ../../../webgl/renderState".split(" "),
function(t,n,r,g,u,v,w,x,y,z,p,d,m,f,A,l,B,C,q){m=function(k){function h(b,a,e){a=k.call(this,b,a,e)||this;a._textureRepository=b.waterTextureRepository;return a}r._inheritsLoose(h,k);var c=h.prototype;c.initializeProgram=function(b){var a=h.shader.get();const e=this.configuration;a=a.build({OITEnabled:0===e.transparencyPassType,output:e.output,viewingMode:b.viewingMode,slicePlaneEnabled:e.slicePlaneEnabled,sliceHighlightDisabled:!1,sliceEnabledForVertexPrograms:!1,receiveShadows:e.receiveShadows,
pbrMode:3,useCustomDTRExponentForWater:!0,ssrEnabled:e.useSSR,highStepCount:!0,multipassTerrainEnabled:e.multipassTerrainEnabled,cullAboveGround:e.cullAboveGround});return new B.Program(b.rctx,a,A.Default3D)};c.ensureResource=function(b){this._textureRepository.ready||this._textureRepository.updating||this._textureRepository.loadTextures(b);return this._textureRepository.ready?2:1};c.bindPass=function(b,a){p.bindProjectionMatrix(this.program,a.camera.projectionMatrix);a.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",
a.camera.nearFar),this.program.setUniform2fv("inverseViewport",a.inverseViewport),w.bindMultipassTerrainTexture(this.program,a));0===this.configuration.output&&(a.lighting.setUniforms(this.program,!1),y.bindSSRUniforms(this.program,a));if(0===this.configuration.output||2===this.configuration.output)z.bindWaterDistortionUniforms(this.program,b),this._textureRepository.bind(this.program);this.program.setUniform4fv("waterColor",b.color);4===this.configuration.output&&v.bindOutputHighlight(this.program,
a)};c.bindDraw=function(b){p.bindView(this.program,b);this.program.rebindTextures();0!==this.configuration.output&&7!==this.configuration.output||p.bindCameraPosition(this.program,b.origin,b.camera.viewInverseTransposeMatrix);0===this.configuration.output&&x.bindReadShadowMapUniforms(this.program,b);0!==this.configuration.output&&7!==this.configuration.output&&4!==this.configuration.output||u.bindSliceUniformsWithOrigin(this.program,this.configuration,b)};c.setPipelineState=function(b){const a=this.configuration,
e=3===b,D=2===b;return q.makePipelineState({blending:2!==a.output&&4!==a.output&&a.transparent?e?l.blendingDefault:l.OITBlending(b):null,depthTest:{func:l.OITDepthTest(b)},depthWrite:e?a.writeDepth&&q.defaultDepthWriteParams:l.OITDepthWrite(b),colorWrite:q.defaultColorWriteParams,polygonOffset:e||D?null:l.getOITPolygonOffset(a.enableOffset)})};c.initializePipeline=function(){return this.setPipelineState(this.configuration.transparencyPassType)};return h}(m.ShaderTechnique);m.shader=new d.ReloadableShaderModule(C.WaterSurface,
()=>new Promise(function(k,h){t(["../shaders/WaterSurface.glsl"],k,h)}));d=function(k){function h(){var c=k.apply(this,arguments)||this;c.output=0;c.receiveShadows=!1;c.slicePlaneEnabled=!1;c.transparent=!1;c.enableOffset=!0;c.writeDepth=!1;c.useSSR=!1;c.isDraped=!1;c.transparencyPassType=3;c.multipassTerrainEnabled=!1;c.cullAboveGround=!1;return c}r._inheritsLoose(h,k);return h}(f.ShaderTechniqueConfiguration);g.__decorate([f.parameter({count:8})],d.prototype,"output",void 0);g.__decorate([f.parameter()],
d.prototype,"receiveShadows",void 0);g.__decorate([f.parameter()],d.prototype,"slicePlaneEnabled",void 0);g.__decorate([f.parameter()],d.prototype,"transparent",void 0);g.__decorate([f.parameter()],d.prototype,"enableOffset",void 0);g.__decorate([f.parameter()],d.prototype,"writeDepth",void 0);g.__decorate([f.parameter()],d.prototype,"useSSR",void 0);g.__decorate([f.parameter()],d.prototype,"isDraped",void 0);g.__decorate([f.parameter({count:4})],d.prototype,"transparencyPassType",void 0);g.__decorate([f.parameter()],
d.prototype,"multipassTerrainEnabled",void 0);g.__decorate([f.parameter()],d.prototype,"cullAboveGround",void 0);n.WaterTechnique=m;n.WaterTechniqueConfiguration=d;Object.defineProperty(n,"__esModule",{value:!0})});