// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ./DynamicLayerView3D ../../layers/ImageryLayerView".split(" "),function(f,m,n,p,h,u,v,w,x,q,r,t){h=function(l){function k(){var c=l.apply(this,arguments)||this;c.type="imagery-3d";
c.redrawDebounced=n.debounce(function(){var a=f._asyncToGenerator(function*(b){c.redraw((d,g)=>c._redrawImage(d,g),b)});return function(b){return a.apply(this,arguments)}}(),2E3);return c}f._inheritsLoose(k,l);var e=k.prototype;e.initialize=function(){this.handles.add([p.whenOnce(this.view.basemapTerrain,"ready",()=>this.initializeMaximumDataResolution()),this.layer.on("redraw",()=>this.redrawDebounced())]);this.updatingHandles.add(this.layer,"exportImageServiceParameters.version",()=>{this.updatingHandles.addPromise(this.refreshDebounced())});
this.updatingHandles.add(this,"timeExtent",()=>this.updatingHandles.addPromise(this.refreshDebounced()))};e.initializeMaximumDataResolution=function(){const c=this.view.basemapTerrain.spatialReference,a=this.layer.fullExtent;a&&c.equals(a.spatialReference)&&(this.maximumDataResolution={x:this.layer.pixelSizeX,y:this.layer.pixelSizeY})};e.getFetchOptions=function(){return{timeExtent:this.timeExtent}};e.processResult=function(){var c=f._asyncToGenerator(function*(a,b,d){b.imageElement?a.image=b.imageElement:
(a.image=document.createElement("canvas"),a.pixelData=b.pixelData,yield this._redrawImage(a,d))});return function(a,b,d){return c.apply(this,arguments)}}();e._redrawImage=function(){var c=f._asyncToGenerator(function*(a,b){if(!(a.image instanceof HTMLCanvasElement&&a.pixelData))return Promise.reject();var d=a.image;const g=d.getContext("2d");a=yield this.layer.applyRenderer(a.pixelData,{signal:b});a=this.layer.applyFilter(a);b=a.pixelBlock;d.width=b.width;d.height=b.height;d=g.createImageData(b.width,
b.height);d.data.set(a.pixelBlock.getAsRGBA());g.putImageData(d,0,0)});return function(a,b){return c.apply(this,arguments)}}();return k}(t.ImageryLayerView(r));return h=m.__decorate([q.subclass("esri.views.3d.layers.ImageryLayerView3D")],h)});