// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/_rollupPluginBabelHelpers ../../../../core/maybe ./BoundingInfo ./ContentObject ./geometryDataUtils ./Util".split(" "),function(p,q,r,t,m,l,u){function v(d){if(d.BYTES_PER_ELEMENT===Uint16Array.BYTES_PER_ELEMENT)return d;for(const g of d)if(65536<=g)return d;return new Uint16Array(d)}m=function(d){function g(a,c=[],e=0,n=-1){var b=d.call(this)||this;b._primitiveType=e;b.edgeIndicesLength=n;b.type=2;b._vertexAttributes=new Map;b._indices=new Map;b._boundingInfo=null;
for(const [f,k]of a)k&&b._vertexAttributes.set(f,{...k});if(null==c||0===c.length){a=b._vertexAttributes.values().next().value;a=null==a?0:a.data.length/a.size;c=l.generateDefaultIndexArray(a);b.edgeIndicesLength=0>b.edgeIndicesLength?a:b.edgeIndicesLength;for(const f of b._vertexAttributes.keys())b._indices.set(f,c)}else for(const [f,k]of c)k&&(b._indices.set(f,v(k)),"position"===f&&(b.edgeIndicesLength=0>b.edgeIndicesLength?b._indices.get(f).length:b.edgeIndicesLength));return b}q._inheritsLoose(g,
d);var h=g.prototype;h.getMutableAttribute=function(a){(a=this._vertexAttributes.get(a))&&!a.exclusive&&(a.data=Array.from(a.data),a.exclusive=!0);return a};h.computeAttachmentOrigin=function(a){return 0===this.primitiveType?this.computeAttachmentOriginTriangles(a):this.computeAttachmentOriginPoints(a)};h.computeAttachmentOriginTriangles=function(a){const c=this.indices.get("position"),e=this.vertexAttributes.get("position");return l.computeAttachmentOriginTriangles(e,c,a)};h.computeAttachmentOriginPoints=
function(a){const c=this.indices.get("position"),e=this.vertexAttributes.get("position");return l.computeAttachmentOriginPoints(e,c,a)};h.invalidateBoundingInfo=function(){this._boundingInfo=null};h._calculateBoundingInfo=function(){const a=this.indices.get("position");if(0===a.length)return null;const c=0===this.primitiveType?3:1;u.assert(0===a.length%c,"Indexing error: "+a.length+" not divisible by "+c);const e=l.generateDefaultIndexArray(a.length/c),n=this.vertexAttributes.get("position");return new t.BoundingInfo(e,
c,a,n)};q._createClass(g,[{key:"vertexAttributes",get:function(){return this._vertexAttributes}},{key:"indices",get:function(){return this._indices}},{key:"indexCount",get:function(){const a=this._indices.values().next().value;return a?a.length:0}},{key:"primitiveType",get:function(){return this._primitiveType}},{key:"faceCount",get:function(){return this.indexCount/3}},{key:"boundingInfo",get:function(){r.isNone(this._boundingInfo)&&(this._boundingInfo=this._calculateBoundingInfo());return this._boundingInfo}}]);
return g}(m.ContentObject);p.Geometry=m;Object.defineProperty(p,"__esModule",{value:!0})});