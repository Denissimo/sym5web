// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/asyncUtils ../../../core/Collection ../../../core/has ../../../core/Error ../../../core/Handles ../../../core/lang ../../../core/Logger ../../../core/maybe ../../../core/Promise ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../../support/arcgisLayerUrl ../../../portal/support/geometryServiceUtils ../../../rest/support/StatisticDefinition ../../../views/3d/layers/support/FeatureTileFetcher3D ../../../views/3d/layers/support/FeatureTileFetcher3DDebugger ../../../views/3d/support/debugFlags ../../../views/support/WatchUpdatingTracking".split(" "),
function(c,u,l,C,y,z,P,D,E,A,F,f,G,r,w,m,Q,R,H,I,J,K,L,M,N,O){function B(p,v){if(!v)return!1;for(const k of v)if(!p.has(k))return!0;return!1}const x=F.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");c.FeatureTileController3D=function(p){function v(a){a=p.call(this,a)||this;a.type="feature-tile-3d";a.watchUpdatingTracking=new O.WatchUpdatingTracking;a.serviceDataExtent=null;a.serviceDataCount=c.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT;a.vertexLimitExceeded=!1;a.displayFeatureLimit=
null;a.suspended=!1;a.tileFetcher=null;a.handles=new E;a.fetchDataInfoPromise=null;a.fetchDataInfoAbortController=null;a.lifeCycleAbortController=r.createAbortController();return a}u._inheritsLoose(v,p);var k=v.prototype;k.approximateExtentSizeAtScale=function(a,b){const d=this.layerView.view,e=b.levels[0];return(e.tileSize[0]/(e.scale/a)+e.tileSize[1]/(e.scale/a))/2*Math.ceil((d.width/b.pixelSize+d.height/b.pixelSize)/2)};k.initialize=function(){this.watchUpdatingTracking.add(this,"vertexLimitInfo",
()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)));this.watchUpdatingTracking.add(this,"mode",()=>this.modeChanged(),2);this.addResolvingPromise(Promise.resolve().then(()=>this.verifyCapabilities()).then(()=>this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo())).then(()=>this.initializeTileFetcher()))};k.verifyCapabilities=function(){const a=this.layerView.layer;if(!a.get("capabilities.operations.supportsQuery"))throw new D("graphicscontroller:query-capability-required",
"Service requires query capabilities to be used as a feature layer",{layer:a});};k.destroy=function(){this.cancelFetchServiceDataInfo();this.tileFetcher=f.destroyMaybe(this.tileFetcher);this.handles=f.destroyMaybe(this.handles);this.tilesHandle=f.removeMaybe(this.tilesHandle);this.lifeCycleAbortController&&(this.lifeCycleAbortController.abort(),this.lifeCycleAbortController=null);this.watchUpdatingTracking.destroy();this._set("watchUpdatingTracking",null)};k.suspend=function(){this.suspended||(this.suspended=
!0,f.isSome(this.tileFetcher)&&this.tileFetcher.suspend())};k.resume=function(){this.suspended&&(this.suspended=!1,f.isSome(this.tileFetcher)&&this.tileFetcher.resume())};k.restart=function(){const a=()=>{f.isSome(this.tileFetcher)&&this.tileFetcher.restart()};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(a,a))};k.refetch=function(){const a=()=>{f.isSome(this.tileFetcher)&&this.tileFetcher.refetch()};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(a,
a))};k.initializeTileFetcher=function(){const a=this.layerView.view;if(a){var b=w.whenOnce(a.featureTiles,"tilingScheme",this.lifeCycleAbortController.signal);this.watchUpdatingTracking.addPromise(b);b.then(()=>{const {layerView:d,tileDescriptors:e}=this,n=d.layer,g=new L.FeatureTileFetcher3D({context:this.context,filterExtent:this.extent,tileDescriptors:e,features:this.graphics});this.tileFetcher=g;this.suspended?this.tileFetcher.suspend():this.tileFetcher.resume();var q=this.layerView.view.resourceController;
q&&(this.handles.add(q.memoryController.events.on("quality-changed",h=>{g.memoryFactor=h})),this.tileFetcher.memoryFactor=q.memoryController.memoryFactor);(q="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null)&&this.handles.add(w.init(this.layerView.view,"qualitySettings.graphics3D."+q,h=>{g.lodFactor=h||1}));this.watchUpdatingTracking.add(n,"createQueryVersion",()=>this.dataFilterChanged());this.watchUpdatingTracking.add(d,"availableFields",
(h,t)=>this.availableFieldsChanged(t,h));this.watchUpdatingTracking.add(d,"requiredFields",(h,t)=>this.requiredFieldsChanged(t,h));this.handles.add([n.on("apply-edits",h=>this.applyEdits(h)),this.watch("extent",h=>g.filterExtent=h,!0),this.watch("tileDescriptors",h=>g.tileDescriptors=h,!0),w.init(this,"maximumNumberOfFeatures",h=>{g.maximumNumberOfFeatures=h;g.useTileCount=this.serviceDataCount>h},!0),w.init(this,"serviceDataCount",h=>g.useTileCount=h>this.maximumNumberOfFeatures,!0),w.init(N,"FEATURE_TILE_FETCH_SHOW_TILES",
h=>{h&&g&&!g.debugger?(g.debugger=new M.FeatureTileFetcher3DDebugger(g,a.featureTiles.tilingScheme.toTileInfo(),a),g.debugger.update()):!h&&this.tileFetcher&&g.debugger&&(g.debugger.destroy(),g.debugger=null)})]);this.supportsExceedsLimitQuery||this.watchUpdatingTracking.add(this,"maxTotalSnapshotVertices",()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)))}).catch(()=>{})}};k.modeChanged=function(){switch(this.mode){case "tiles":this.tilesHandle||
(this.tilesHandle=this.layerView.view.featureTiles.addClient());break;default:x.warn("Unhandled feature layer mode "+this.mode);case "snapshot":f.isSome(this.tilesHandle)&&(this.tilesHandle.remove(),this.tilesHandle=null)}};k.dataFilterChanged=function(){this._set("maxTotalSnapshotVertices",0);this.notifyChange("maxTotalSnapshotVertices");this.refetch()};k.applyEdits=function(a){f.isNone(this.tileFetcher)||this.tileFetcher.applyEdits(a).then(b=>{b&&(b.deletedFeatures.length||b.updatedFeatures.length||
b.addedFeatures.length)&&this.watchUpdatingTracking.addPromise(this.updateServiceDataExtent(this.lifeCycleAbortController.signal))}).catch(b=>{if(!r.isAbortError(b))throw b;})};k.availableFieldsChanged=function(a,b){f.isSome(this.tileFetcher)&&B(this.tileFetcher.availableFields,b)&&this.refetch()};k.requiredFieldsChanged=function(a,b){f.isSome(this.tileFetcher)&&B(this.tileFetcher.availableFields,b)&&this.restart()};k.createVertexLimitExceededQuery=function(a){const b=this.layerView.layer,d=b.createQuery();
d.outStatistics=[new K({statisticType:"exceedslimit",maxVertexCount:a,outStatisticFieldName:"exceedslimit",maxPointCount:1E8,maxRecordCount:1E8})];b.capabilities.query.supportsCacheHint&&(d.cacheHint=!0);return d};k.createDataInfoQuery=function(){const a=this.layerView.layer,b=a.createQuery();b.outSpatialReference=this.layerView.view.spatialReference;a.capabilities.query.supportsCacheHint&&(b.cacheHint=!0);return b};k.fullExtentIsAccurate=function(){const a=this.layerView.layer;if(a.definitionExpression)return!1;
switch(a.type){case "feature":return I.isHostedAgolService(a.url);case "csv":case "geojson":case "ogc-feature":case "wfs":return!0}};k.updateServiceDataExtent=function(){var a=u._asyncToGenerator(function*(b){try{yield this.tryUpdateServiceDataExtent(b)}catch(d){r.isAbortError(d)||this._set("serviceDataExtent",A.clone(this.layerView.fullExtentInLocalViewSpatialReference))}});return function(b){return a.apply(this,arguments)}}();k.tryUpdateServiceDataExtent=function(){var a=u._asyncToGenerator(function*(b){var d=
this.layerView;const e=d.layer,n=e.capabilities.query.supportsExtent,g=A.clone(d.fullExtentInLocalViewSpatialReference),q=e.fullExtent,h=this.fullExtentIsAccurate(),t=this.serviceDataCount;n&&t<=c.FeatureTileController3DConstants.MAX_FEATURE_COUNT_FOR_EXTENT&&(!g||!h)&&"queryExtent"in e?(d=this.createDataInfoQuery(),b=yield e.queryExtent(d,{timeout:c.FeatureTileController3DConstants.QUERY_EXTENT_TIMEOUT,signal:b}),this._set("serviceDataExtent",b.extent)):g?this._set("serviceDataExtent",g):q?(b=yield J.projectGeometry(q,
d.view.spatialReference,"portalItem"in e?e.portalItem:null,b),this._set("serviceDataExtent",b)):this._set("serviceDataExtent",null)});return function(b){return a.apply(this,arguments)}}();k.updateServiceDataCount=function(){var a=u._asyncToGenerator(function*(b){const d=this.layerView.layer;if("queryFeatureCount"in d)if(b=yield y.result(d.queryFeatureCount(this.createDataInfoQuery(),{timeout:c.FeatureTileController3DConstants.QUERY_STATISTICS_TIMEOUT,signal:b})),!0===b.ok)this._set("serviceDataCount",
b.value);else{if(r.isAbortError(b.error))throw b.error;this._set("serviceDataCount",c.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT)}else this._set("serviceDataCount",c.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT)});return function(b){return a.apply(this,arguments)}}();k.updateVertexLimitExceeded=function(){var a=u._asyncToGenerator(function*(b,d){var e=this.vertexLimitInfo;if(f.isNone(e))this._set("vertexLimitExceeded",!1);else{var n=1<this.minimumNumberOfVerticesForGeometry;
if(0>=e.primitivesPerFeature||n){var {primitivesPerFeature:g,primitivesPerCoordinate:q,maximumTotalNumberOfPrimitives:h}=e;0!==g&&f.isSome(b)&&(yield b);e=this.serviceDataCount;var t=e!==c.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT;b=t?Math.ceil((h-e*g)/(q||1)):Math.ceil(h/(q||1));n&&(b=Math.min(b,5E6));if(t&&this.minimumNumberOfVerticesForGeometry*e>b)this._set("vertexLimitExceeded",!0);else if(this.supportsExceedsLimitQuery)if(d=yield y.result(this.layerView.layer.queryFeatures(this.createVertexLimitExceededQuery(b),
{timeout:c.FeatureTileController3DConstants.QUERY_STATISTICS_TIMEOUT,signal:d})),!1===d.ok){if(r.isAbortError(d.error))throw d.error;this._set("vertexLimitExceeded",!1)}else(d=d.value.features[0])&&d.attributes?this._set("vertexLimitExceeded",!!d.attributes.exceedslimit):this._set("vertexLimitExceeded",!1);else this._set("vertexLimitExceeded",this.maxTotalSnapshotVertices>b)}else this._set("vertexLimitExceeded",!1)}});return function(b,d){return a.apply(this,arguments)}}();k.fetchServiceDataInfo=
function(){var a=u._asyncToGenerator(function*(){this.cancelFetchServiceDataInfo();let b=r.createAbortController();const d=b.signal;var e=this.updateServiceDataCount(d);e=r.eachAlways([e,this.updateVertexLimitExceeded(e,d)]);const n=e.then(()=>this.updateServiceDataExtent(d)).catch(g=>{r.isAbortError(g)||x.error("#fetchServiceDataInfo()",g)}).then(()=>{n===this.fetchDataInfoPromise&&(this.fetchDataInfoAbortController=this.fetchDataInfoPromise=null);b=null});b&&(this.fetchDataInfoPromise=n);this.fetchDataInfoAbortController=
b;return e.then(()=>{},()=>{})});return function(){return a.apply(this,arguments)}}();k.cancelFetchServiceDataInfo=function(){const a=this.fetchDataInfoAbortController;a&&(this.fetchDataInfoPromise=this.fetchDataInfoAbortController=null,a.abort())};u._createClass(v,[{key:"extent",set:function(a){if(a&&!a.spatialReference.equals(this.layerView.view.spatialReference))x.error("#extent\x3d","extent needs to be in the same spatial reference as the view");else{var b=this._get("extent");b===a||b&&a&&b.equals(a)||
(a=a?a.clone():null,this._set("extent",a))}}},{key:"updating",get:function(){return!!(f.isSome(this.tileFetcher)&&this.tileFetcher.updating||null!=this.fetchDataInfoPromise||"tiles"===this.mode&&this.layerView.view.featureTiles&&this.layerView.view.featureTiles.updating||this.watchUpdatingTracking&&this.watchUpdatingTracking.updating)}},{key:"updatingTotal",get:function(){return this.updating&&f.isSome(this.tileFetcher)?this.tileFetcher.updatingTotal:0}},{key:"updatingRemaining",get:function(){return this.updating&&
f.isSome(this.tileFetcher)?this.tileFetcher.updatingRemaining:0}},{key:"expectedFeatureDiff",get:function(){return this.updating&&f.isSome(this.tileFetcher)?this.tileFetcher.expectedFeatureDiff:0}},{key:"memoryForUnusedFeatures",get:function(){return f.isSome(this.tileFetcher)?this.tileFetcher.memoryForUnusedFeatures:0}},{key:"maximumNumberOfFeaturesExceeded",get:function(){return!(!f.isSome(this.tileFetcher)||!this.tileFetcher.maximumNumberOfFeaturesExceeded)}},{key:"maximumNumberOfFeatures",get:function(){return f.isSome(this.displayFeatureLimit)?
this.displayFeatureLimit.maximumNumberOfFeatures:0},set:function(a){a!==this.maximumNumberOfFeatures&&(null==a?this._clearOverride("maximumNumberOfFeatures"):this._override("maximumNumberOfFeatures",a))}},{key:"hasMaximumNumberOfFeaturesOverride",get:function(){return this._isOverridden("maximumNumberOfFeatures")}},{key:"mode",get:function(){var a=this.layerView.layer;if("feature"===a.type&&f.isSome(a.infoFor3D))return"snapshot";if(this.serviceDataCount===c.FeatureTileController3DConstants.NO_SERVICE_DATA_COUNT||
this.vertexLimitExceeded)return"tiles";var b=this.layerView.view;b=(b=b&&b.featureTiles)&&b.tilingScheme;return a&&a.minScale&&this.serviceDataExtent&&b&&(a=this.approximateExtentSizeAtScale(a.minScale,b),(this.serviceDataExtent.width/a+this.serviceDataExtent.height/a)/2>c.FeatureTileController3DConstants.MAX_SNAPSHOT_MIN_SCALE_FACTOR)?"tiles":!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}},{key:"maxTotalSnapshotVertices",get:function(){const a=
this._get("maxTotalSnapshotVertices")||0,b="snapshot"===this.mode&&f.isSome(this.tileFetcher)&&this.tileFetcher.totalVertices||0;return Math.max(a,b)}},{key:"tileDescriptors",get:function(){return"snapshot"===this.mode?new z([{id:"dummy-tile-full-extent",lij:[0,0,0]}]):this.layerView.view.featureTiles?this.layerView.view.featureTiles.tiles:new z}},{key:"test",get:function(){return{fetchDataInfoPromise:this.fetchDataInfoPromise,tileFetcher:this.tileFetcher}}},{key:"vertexLimitInfo",get:function(){if(f.isNone(this.displayFeatureLimit)||
f.isNone(this.displayFeatureLimit.averageSymbolComplexity))return null;const {averageSymbolComplexity:a,maximumTotalNumberOfPrimitives:b}=this.displayFeatureLimit,{primitivesPerCoordinate:d,primitivesPerFeature:e}=a,n=this._get("vertexLimitInfo");return f.isNone(n)||n.maximumTotalNumberOfPrimitives!==b||n.primitivesPerCoordinate!==d||n.primitivesPerFeature!==e?{primitivesPerCoordinate:d,primitivesPerFeature:e,maximumTotalNumberOfPrimitives:b}:n}},{key:"supportsExceedsLimitQuery",get:function(){const a=
this.layerView.layer;return a.capabilities&&a.capabilities.operations&&a.capabilities.operations.supportsExceedsLimitStatistics}},{key:"minimumNumberOfVerticesForGeometry",get:function(){switch(this.layerView.layer.geometryType){case "point":return 1;case "multipoint":return 1;case "polygon":return 4;case "polyline":return 2;case "multipatch":case "mesh":return 3;default:return 0}}},{key:"debug",get:function(){return{storedFeatures:f.isSome(this.tileFetcher)?this.tileFetcher.storedFeatures:0,totalFeatures:f.isSome(this.tileFetcher)?
this.tileFetcher.totalFeatures:0,totalVertices:f.isSome(this.tileFetcher)?this.tileFetcher.totalVertices:0}}}]);return v}(G.EsriPromiseMixin(C));l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"type",void 0);l.__decorate([m.property({constructOnly:!0})],c.FeatureTileController3D.prototype,"graphics",void 0);l.__decorate([m.property({constructOnly:!0})],c.FeatureTileController3D.prototype,"layerView",void 0);l.__decorate([m.property({constructOnly:!0})],c.FeatureTileController3D.prototype,
"context",void 0);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"extent",null);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"updating",null);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"watchUpdatingTracking",void 0);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"updatingTotal",null);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"updatingRemaining",null);l.__decorate([m.property()],c.FeatureTileController3D.prototype,
"expectedFeatureDiff",null);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"memoryForUnusedFeatures",null);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"maximumNumberOfFeaturesExceeded",null);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"serviceDataExtent",void 0);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"serviceDataCount",void 0);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,
"vertexLimitExceeded",void 0);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"displayFeatureLimit",void 0);l.__decorate([m.property({type:Number})],c.FeatureTileController3D.prototype,"maximumNumberOfFeatures",null);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"mode",null);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"maxTotalSnapshotVertices",null);l.__decorate([m.property({readOnly:!0,dependsOn:["mode"]})],c.FeatureTileController3D.prototype,
"tileDescriptors",null);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"tileFetcher",void 0);l.__decorate([m.property()],c.FeatureTileController3D.prototype,"fetchDataInfoPromise",void 0);l.__decorate([m.property({readOnly:!0})],c.FeatureTileController3D.prototype,"vertexLimitInfo",null);c.FeatureTileController3D=l.__decorate([H.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],c.FeatureTileController3D);c.FeatureTileController3DConstants=void 0;(function(p){p.NO_SERVICE_DATA_COUNT=
Infinity;p.MAX_SNAPSHOT_MIN_SCALE_FACTOR=5;p.reset=function(){p.MAX_FEATURE_COUNT_FOR_EXTENT=1E4;p.QUERY_STATISTICS_TIMEOUT=12E3;p.QUERY_EXTENT_TIMEOUT=1E4}})(c.FeatureTileController3DConstants||(c.FeatureTileController3DConstants={}));c.FeatureTileController3DConstants.reset();Object.defineProperty(c,"__esModule",{value:!0})});