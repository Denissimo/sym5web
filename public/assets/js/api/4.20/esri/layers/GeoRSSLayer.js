// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../config ../request ../symbols ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/has ../core/accessorSupport/ensureType ../core/Logger ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ./Layer ./mixins/BlendLayer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/commonProperties ../symbols/Symbol ../symbols/SimpleLineSymbol ../symbols/PictureMarkerSymbol ../symbols/SimpleMarkerSymbol ../symbols/SimpleFillSymbol".split(" "),
function(m,c,r,t,q,u,b,v,w,d,J,K,L,M,x,y,z,A,B,C,D,E,n,g,F,p,G,H){const I=["atom","xml"];q={base:g,key:"type",typeMap:{"simple-line":F},errorContext:"symbol"};p={base:g,key:"type",typeMap:{"picture-marker":p,"simple-marker":G},errorContext:"symbol"};g={base:g,key:"type",typeMap:{"simple-fill":H},errorContext:"symbol"};b=function(h){function k(...a){a=h.call(this,...a)||this;a.description=null;a.legendEnabled=!0;a.lineSymbol=null;a.pointSymbol=null;a.polygonSymbol=null;a.operationalLayerType="GeoRSS";
a.outSpatialReference=null;a.url=null;a.type="geo-rss";return a}m._inheritsLoose(k,h);var l=k.prototype;l.normalizeCtorArgs=function(a,e){return"string"===typeof a?{url:a,...e}:a};l.readFeatureCollections=function(a,e){e.featureCollection.layers.forEach(f=>{(f=f.layerDefinition.drawingInfo.renderer.symbol)&&"esriSFS"===f.type&&f.outline&&-1!==f.outline.style.indexOf("esriSFS")&&(f.outline.style="esriSLSSolid")});return e.featureCollection.layers};l.load=function(a){const e=u.isSome(a)?a.signal:null;
this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},a).catch(v.throwIfAbortError).then(()=>this._fetchService(e)));return Promise.resolve(this)};l._fetchService=function(){var a=m._asyncToGenerator(function*(e){({data:e}=yield t(r.geoRSSServiceUrl,{query:{url:this.url,refresh:this.loaded?!0:void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e}));this.read(e,{origin:"service"})});
return function(e){return a.apply(this,arguments)}}();m._createClass(k,[{key:"title",get:function(){const a=this._get("title");return a&&"defaults"!==this.originOf("title")?a:this.url?w.getFilename(this.url,I)||"GeoRSS":a||""},set:function(a){this._set("title",a)}}]);return k}(A.BlendLayer(D.RefreshableLayer(B.OperationalLayer(C.PortalLayer(E.ScaleRangeLayer(b.MultiOriginJSONMixin(z)))))));c.__decorate([d.property()],b.prototype,"description",void 0);c.__decorate([d.property({json:{origins:{service:{read:{source:"name",
reader(h){return h||void 0}}}}}})],b.prototype,"title",null);c.__decorate([d.property()],b.prototype,"featureCollections",void 0);c.__decorate([x.reader("service","featureCollections",["featureCollection.layers"])],b.prototype,"readFeatureCollections",null);c.__decorate([d.property(n.id)],b.prototype,"id",void 0);c.__decorate([d.property(n.legendEnabled)],b.prototype,"legendEnabled",void 0);c.__decorate([d.property({types:q,json:{write:!0}})],b.prototype,"lineSymbol",void 0);c.__decorate([d.property({type:["show",
"hide"]})],b.prototype,"listMode",void 0);c.__decorate([d.property({types:p,json:{write:!0}})],b.prototype,"pointSymbol",void 0);c.__decorate([d.property({types:g,json:{write:!0}})],b.prototype,"polygonSymbol",void 0);c.__decorate([d.property({type:["GeoRSS"]})],b.prototype,"operationalLayerType",void 0);c.__decorate([d.property()],b.prototype,"outSpatialReference",void 0);c.__decorate([d.property(n.url)],b.prototype,"url",void 0);c.__decorate([d.property({readOnly:!0,json:{read:!1},value:"geo-rss"})],
b.prototype,"type",void 0);return b=c.__decorate([y.subclass("esri.layers.GeoRSSLayer")],b)});