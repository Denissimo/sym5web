// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/maybe ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../DimensionalDefinition ../wmsUtils ./BaseRaster ./multipartParser ./wcsCapabilitiesParser ./wcsCoverageParser ../rasterFunctions/pixelUtils ../../../geometry/Extent".split(" "),
function(A,G,B,C,K,L,I,Y,Z,aa,ba,O,P,Q,R,S,T,M,U,V){const W=["nearest neighbor","bilinear","bicubic"],X=["nearest","linear","cubic"];B=function(N){function J(){var a=N.apply(this,arguments)||this;a.datasetFormat="WCSServer";return a}A._inheritsLoose(J,N);var y=J.prototype;y.open=function(){var a=A._asyncToGenerator(function*(c){yield this.init();c=null==c?void 0:c.signal;var b=yield this._getCapabilities(c);this.capabilities=b;if(!this.version){var e;let g=null==(e=b.capabilitiesVersion)?void 0:e.slice(0,
3);this.version="2.0"===g||"1.1"===g||"1.0"===g?b.capabilitiesVersion:g=b.supportedVersions.find(h=>"2.0.1"===h)||b.supportedVersions.find(h=>"2.0"===h.slice(0,3))||b.supportedVersions.find(h=>"1.1"===h.slice(0,3))||b.supportedVersions.find(h=>"1.0"===h.slice(0,3))||"1.0.0"}null==this.coverageId&&(this.coverageId=b.coverages[0].id);e=b.coverages.filter(g=>g.id===this.coverageId)[0];if(null==e)throw new C("wcsraster-open",`the coverageId ${this.coverageId} does not exist in capabilities`);this.coverageInfo=
(yield this._describeCoverage(c))[0];"2.0"===this.version.slice(0,3)&&(this.coverageInfo.lonLatEnvelope=e.lonLatEnvelope,this.coverageInfo.supportedInterpolations=M.standardizeInterpolations(b.supportedInterpolations));this.datasetName=this.coverageInfo.title;({rasterInfo:b}=this.coverageInfo);this.createRemoteDatasetStorageInfo(b,512,512);this._set("rasterInfo",b);if(null==b.spatialReference)throw new C("wcsraster-open",`coverage without spatial referernce is not supported: ${this.coverageId}`);
const {pixelType:f,bandCount:d}=yield this._getPixelTypeAndBandCount(c);b.pixelType=f;1===b.bandCount&&1<d&&(b.bandCount=d);this.updateTileInfo()});return function(c){return a.apply(this,arguments)}}();y.fetchRawTile=function(){var a=A._asyncToGenerator(function*(c,b,e,f={}){if(this.isBlockOutside(c,b,e))return null;const {nativePixelSize:d,spatialReference:g}=this.rasterInfo,h=2**c,l=d.x*h,p=d.y*h,{blockWidth:x,blockHeight:w}=this.getBlockWidthHeight(c);({origin:c}=this.rasterInfo.storageInfo.tileInfo);
const z=this.getTileExtent({x:l,y:p},b,e,c,g,[x,w]),q=this.rasterInfo.extent;b=z.xmax>q.xmax||z.ymin<q.ymin;let k=z;e=x;c=w;b&&(k=z.clone().intersection(q),e=Math.floor((k.xmax-k.xmin)/l),c=Math.floor((k.ymax-k.ymin)/p),k.xmax=k.xmin+l*e,k.ymin=k.ymax-p*c);if(1>=e||1>=c)return null;f=yield this._getCoverage(k,e,c,h,f);if(!f)return null;if((f=yield this.decodePixelBlock(f,{width:e,height:c,planes:null,pixelType:null}))&&(f.width!==e||f.height!==c))throw new C("wcsraster-fetch",`the reponse has unexpected dimension width: ${f.width}, height: {pixelBlock.height}`);
b&&(f=U.clip(f,{x:0,y:0},{width:w,height:w}));return f});return function(c,b,e){return a.apply(this,arguments)}}();y._getCapabilities=function(){var a=A._asyncToGenerator(function*(c){const b={service:"WCS",request:"GetCapabilities"};this.version&&(b.version=this.version,b.acceptVersions=this.version);try{const {data:e}=yield this.request(this.url,{query:b,responseType:"xml",signal:c});return T.parseCapabilities(e)}catch(e){if(!L.isAbortError(e))throw new C("wcslayer:open","wcs capabilities is not valid or supported");
throw e;}});return function(c){return a.apply(this,arguments)}}();y._describeCoverage=function(){var a=A._asyncToGenerator(function*(c){const b={service:"WCS",request:"DescribeCoverage",version:this.version},e=this.version.slice(0,3);"1.0"===e?b.coverage=this.coverageId:"1.1"===e?b.identifiers=this.coverageId:"2.0"===e&&(b.coverageId=this.coverageId);try{const {data:f}=yield this.request(this.url,{query:b,responseType:"xml",signal:c});return M.parseCoverages(f,this.version)}catch(f){if(!L.isAbortError(f))throw new C("wcslayer:open",
"wcs coverage description is not valid or supported");throw f;}});return function(c){return a.apply(this,arguments)}}();y._getPixelTypeAndBandCount=function(){var a=A._asyncToGenerator(function*(c){const {pixelSize:b,extent:e,multidimensionalInfo:f}=this.rasterInfo;var d=e.center;d=new V({xmin:d.x-b.x,xmax:d.x+b.x,ymin:d.y-b.y,ymax:d.y+b.y,spatialReference:e.spatialReference});let g;if(K.isSome(f)){const h=f.variables[0];g=[];h.dimensions.forEach(l=>{g.push(new P({variableName:h.name,dimensionName:l.name,
values:l.hasRegularIntervals?l.extent[0]:l.values[0],isSlice:!0}))})}c=yield this._getCoverage(d,2,2,1,{multidimensionalDefinition:g,signal:K.unwrap(c)});if(!c)throw new C("wcsraster-open","unable to determine pixel type");c=yield this.decodePixelBlock(c,{width:2,height:2,planes:null,pixelType:null});return{pixelType:c.pixelType,bandCount:c.getPlaneCount()}});return function(c){return a.apply(this,arguments)}}();y._getCoverage=function(){var a=A._asyncToGenerator(function*(c,b,e,f,d){const {coverageDescription:g}=
this.coverageInfo;var {version:h}=g;c="2.0"===g.version?this._getCoverage201Parameters(c,b,e,f,d,g):"1.1"===g.version?this._getCoverage110Parameters(c,b,e,d,g):this._getCoverage100Parameters(c,b,e,d);d="2.0"===g.version?yield this.request(this._constructWCS201Url(c),{signal:d.signal,responseType:"array-buffer"}):yield this.request(this.url,{query:c,signal:d.signal,responseType:"array-buffer"});if("1.0"===h)return d.data;h=S.parse(d);if(h.isMultipart&&h.data)return h=h.data.filter(l=>{var p;return(null==
(p=l.contentType)?void 0:p.toLowerCase().includes("image"))&&null!=l.contentData})[0],null==h?void 0:h.contentData;if(this.ioConfig.allowAnyMediaType)return d.data;throw new C("wcsraster:getcoverage","response is not a valid coverage, multipart response is expected");});return function(c,b,e,f,d){return a.apply(this,arguments)}}();y._getInterpolationIndex=function(a){return-1===this.coverageInfo.supportedInterpolations.indexOf(a)?0:"nearest"===a?0:"bilinear"===a?1:"cubic"===a?2:0};y._getCoverage100Parameters=
function(a,c,b,e){const f=`${a.xmin},${a.ymin},${a.xmax},${a.ymax}`;a=a.spatialReference.wkid;const d=(this.coverageInfo.supportedFormats||[]).find(p=>-1<p.toLowerCase().indexOf("tiff"))||"GEOTIFF",{bandIds:g,interpolation:h}=e;e=this._getInterpolationIndex(h);const l=g?g.map(p=>this.coverageInfo.bandNames[p]):null;return{service:"WCS",request:"GetCoverage",version:this.version,coverage:this.coverageId,format:d,crs:`EPSG:${a}`,bbox:f,width:c,height:b,interpolation:W[e],band:null==l?void 0:l.join(",")}};
y._getCoverage110Parameters=function(a,c,b,e,f){var d;const {multidimensionalDefinition:g,bandIds:h,interpolation:l}=e;e=a.spatialReference.wkid;const p=`urn:ogc:def:crs:EPSG::${e}`,x=(this.coverageInfo.supportedFormats||[]).find(u=>-1<u.toLowerCase().indexOf("tiff"))||"image/tiff";var w=this._getInterpolationIndex(l);w=X[w];const z=null==l||0===(null==(d=this.coverageInfo.supportedInterpolations)?void 0:d.indexOf(l));d=f.domain.spatialDomain;var q=d.origin.x<=d.envelope.xmin&&d.origin.y<=d.envelope.ymin,
k=a.width/c,r=a.height/b*(q?1:-1);b=q?[a.xmin,a.ymin]:[a.xmin,a.ymax];b=(d=d.useEPSGAxis&&Q.coordsReversedForWKID(e))?`${b[1]},${b[0]}`:`${b[0]},${b[1]}`;c=d?`${r},0,0,${k}`:`${k},0,0,${r}`;q=k/2;k=a.xmin+q;q=a.xmax-q;var t=Math.abs(r)/2;r=a.ymin+t;a=a.ymax-t;a=d?`${r},${k},${a},${q},${p}`:`${k},${r},${q},${a},${p}`;d=(d=f.range.filter(u=>u.axis.some(n=>-1<n.identifier.toLowerCase().indexOf("band")))[0])&&w&&h?z?`${d.identifier}[${d.axis[0].identifier}[${h.join(",")}]]`:`${d.identifier}:${w}[${d.axis[0].identifier}[${h.join(",")}]]`:
null;let H;if(null!=g&&g.length)for(r=0;r<g.length;r++){k=g[r].values;const u=g[r].dimensionName.toLowerCase(),n=g[r].variableName.toLowerCase();0<k.length&&(k[0]instanceof Array&&(k=k[0]),"stdtime"===u?H=k.map(m=>this._convertToISOTime(m)).join(","):(q=f.range.filter(m=>m.identifier.toLowerCase()===n)[0])&&(t=q.axis.filter(m=>m.identifier.toLowerCase()===u)[0])&&(d=z?q.identifier+"["+t.identifier+"["+k.join(",")+"]]":q.identifier+":"+w+"["+t.identifier+"["+k.join(",")+"]]"))}return{service:"WCS",
request:"GetCoverage",version:this.version,identifier:this.coverageId,format:x,crs:`EPSG:${e}`,boundingbox:a,gridCS:"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS",gridType:"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs",gridOrigin:b,gridOffsets:c,gridBaseCRS:p,timeSequence:H,rangeSubset:d}};y._convertToISOTime=function(a,c=!1){return(c?new Date(864E5*(a-25569)):new Date(a)).toISOString()};y._getCoverage201Parameters=function(a,c,b,e,f,d){const {multidimensionalDefinition:g,interpolation:h}=f;var l=this._getInterpolationIndex(h);
let p=null;var {supportedInterpolations:x}=this.capabilities;if(null!=x&&x.length)switch(l){case 0:p=x.find(v=>v.includes("nearest"));break;case 1:p=x.find(v=>v.includes("linear"));break;case 2:p=x.find(v=>v.includes("cubic")||v.includes("quadratic"))}l=(this.coverageInfo.supportedFormats||[]).find(v=>-1<v.toLowerCase().indexOf("tiff"))||"image/tiff";const {bandNames:w}=this.coverageInfo,{boundedBy:z,domainSet:q,rangeType:k}=d;var r=z.isEastFirst?0:1,{axisLabels:t}=z;x=t[r];r=t[1-r];const H=`http://www.opengis.net/def/crs/EPSG/0/${a.spatialReference.wkid}`,
u=[];u.push(`${x}(${a.xmin},${a.xmax})`);u.push(`${r}(${a.ymin},${a.ymax})`);a=[];if(2<t.length)for(var n=2;n<t.length;n++){var m=q.origin[n];if(-1<t[n].toLowerCase().indexOf("time")){let v=m.toString();-1<z.uomLabels[n].toLowerCase().indexOf("ole")&&(a.push(t[n]),v=this._convertToISOTime(m,!0));u.push(t[n]+",http://www.opengis.net("+v+")")}else u.push(t[n]+",http://www.opengis.net("+m+")")}a=null;if(null!=g&&g.length){const v=[];k.forEach(D=>D.forEach(E=>v.push(E.name)));f=[];for(let D=0;D<g.length;D++){const E=
t.find(F=>F===g[D].dimensionName);n=v.find(F=>F===g[D].variableName);-1===f.indexOf(n)&&f.push(n);E&&(m=g[D].values,0<m.length&&(Array.isArray(m[0])&&(m=m[0]),n="",n=-1<E.toLowerCase().indexOf("time")?m.map(F=>this._convertToISOTime(F)).join(","):m.join(","),m=u.findIndex(F=>0===F.indexOf(E+",http://www.opengis.net")),-1===m&&u.push(E+",http://www.opengis.net("+n+")"),-1!==m&&-1===u[m].indexOf("("+n+")")&&u.splice(m,1,E+",http://www.opengis.net("+n+")")))}f.length&&(a=f.join(","))}else null!=w&&w.length&&
(a=(f.bandIds?f.bandIds.map(v=>w[v]):w).join(","));t=u.join("\x26subset\x3d");d=d.domainSet.axisLabels.join("")!==d.boundedBy.axisLabels.join("")&&!1!==this.ioConfig.allowScaleFactor;return{service:"WCS",request:"GetCoverage",version:this.version,coverageId:this.coverageId,rangesubset:a,interpolation:p,scaleSize:d?null:`${x}(${c}),${r}(${b})`,scaleFactor:d?1/e:null,subset:t,format:l,mediaType:this.ioConfig.allowAnyMediaType?null:"multipart/related",outputcrs:H,subsettingcrs:H}};y._constructWCS201Url=
function(a){const c={...this.ioConfig.customFetchParameters,...a},b=[];Object.keys(c).forEach(f=>{const d=c[f];null!=d&&("subset"!==f?b.push(`${f}=${encodeURIComponent(d)}`):d.split("\x26subset\x3d").forEach(g=>{g&&b.push(`subset=${encodeURIComponent(g)}`)}))});a=encodeURI(this.url);const e=b.join("\x26");return`${a}?${e}`};return J}(R);G.__decorate([I.property({type:String,json:{write:!0}})],B.prototype,"datasetFormat",void 0);G.__decorate([I.property()],B.prototype,"tileType",void 0);G.__decorate([I.property({type:String,
json:{write:!0}})],B.prototype,"version",void 0);G.__decorate([I.property({type:String,json:{write:!0}})],B.prototype,"coverageId",void 0);return B=G.__decorate([O.subclass("esri.layers.support.rasterDatasets.ImageServerRaster")],B)});