// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/maybe ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../RasterInfo ../RasterStorageInfo ../TileInfo ./BaseRaster ./DBFParser ../rasterTransforms/utils ../../../rest/support/FeatureSet ../../../geometry/SpatialReference ../../../geometry/Extent ../../../geometry/Point".split(" "),
function(w,A,t,B,L,H,Z,aa,ba,ca,M,N,O,P,Q,R,I,S,T,U,J){const n=new Map;n.set("int16","esriFieldTypeSmallInteger");n.set("int32","esriFieldTypeInteger");n.set("int64","esriFieldTypeInteger");n.set("float32","esriFieldTypeSingle");n.set("float64","esriFieldTypeDouble");n.set("text","esriFieldTypeString");t=function(K){function C(){var a=K.apply(this,arguments)||this;a.storageInfo=null;a.datasetFormat="CRF";return a}w._inheritsLoose(C,K);var l=C.prototype;l.open=function(){var a=w._asyncToGenerator(function*(b){yield this.init();
({data:b}=yield this.request(this.url+"/conf.json",{signal:null==b?void 0:b.signal}));if(!this._validateHeader(b))throw new B("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const {storageInfo:c,rasterInfo:d}=this._parseHeader(b);"thematic"===d.dataType&&(b=yield this._fetchAuxiliaryInformation(),d.attributeTable=b);this._set("storageInfo",c);this._set("rasterInfo",d);this.ioConfig.retryCount=this.ioConfig.retryCount||0});return function(b){return a.apply(this,
arguments)}}();l.fetchRawTile=function(){var a=w._asyncToGenerator(function*(b,c,d,e={}){b=this.rasterInfo.storageInfo.maximumPyramidLevel-b;if(0>b)return null;b=this._buildCacheFilePath(b,c,d,e.multidimensionalDefinition);c=this._getIndexRecordFromBundle(c,d);d=yield this.request(b,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:e.signal});if(!d)return null;d=new Uint8Array(d.data);c=this._getTileEndAndContentType(d,c);return 0===c.recordSize?null:(e=yield this.request(b,
{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:e.signal}))?this.decodePixelBlock(e.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null});return function(b,c,d){return a.apply(this,arguments)}}();l._validateHeader=function(a){const b="origin extent geodataXform LODInfos blockWidth blockHeight bandCount pixelType pixelSizeX pixelSizeY format packetSize".split(" ");return a&&
"RasterInfo"===a.type&&!b.some(c=>!a[c])};l._parseHeader=function(a){var b,c;const d="u1 u2 u4 u8 s8 u16 s16 u32 s32 f32 f64".split(" ")[a.pixelType],{bandCount:e,histograms:m,colormap:g,blockWidth:u,blockHeight:v,firstPyramidLevel:V,maximumPyramidLevel:D}=a,W=a.statistics&&a.statistics.map(r=>({min:r.min,max:r.max,avg:r.mean,stddev:r.standardDeviation,median:r.median,mode:r.mode}));var f=a.extent.spatialReference,p=null==(b=a.geodataXform)?void 0:b.spatialReference;b=new T(null!=f&&f.wkid||null!=
f&&f.wkt?f:p);f=new U({xmin:a.extent.xmin,ymin:a.extent.ymin,xmax:a.extent.xmax,ymax:a.extent.ymax,spatialReference:b});p=new J({x:a.pixelSizeX,y:a.pixelSizeY,spatialReference:b});const x=Math.round((f.xmax-f.xmin)/p.x),y=Math.round((f.ymax-f.ymin)/p.y),z=this._parseTransform(a.geodataXform),X=z?f:null;z&&(f=z.forwardTransform(f),p.x=(f.xmax-f.xmin)/x,p.y=(f.ymax-f.ymin)/y);const Y=null!=(c=a.properties)?c:{};var E=a.format.toLowerCase().replace("cache/","");c=new J(a.origin.x,a.origin.y,b);let F,
h;if(g&&g.colors)for(F=[],h=0;h<g.colors.length;h++){var k=g.colors[h];var q=g.values?g.values[h]:h;F.push([q,k&255,k<<16>>>24,k<<8>>>24,k>>>24])}k=a.LODInfos;q=[];for(h=0;h<k.levels.length;h++)q.push({level:k.levels[h],resolution:k.resolutions[h],scale:96/.0254*k.resolutions[h]});k=new P({dpi:96,lods:q,format:E,origin:c,size:[u,v],spatialReference:b});E={recordSize:8,packetSize:a.packetSize,headerSize:a.packetSize*a.packetSize*8+64};q=[{maxCol:Math.ceil(x/u)-1,maxRow:Math.ceil(y/v)-1,minCol:0,minRow:0}];
let G=2;if(0<D)for(h=0;h<D;h++)q.push({maxCol:Math.ceil(x/G/u)-1,maxRow:Math.ceil(y/G/v)-1,minCol:0,minRow:0}),G*=2;a=new N({width:x,height:y,pixelType:d,bandCount:e,extent:f,nativeExtent:X,transform:z,spatialReference:b,pixelSize:p,keyProperties:Y,statistics:W,histograms:m,multidimensionalInfo:a.mdInfo,colormap:F,storageInfo:new O({blockWidth:u,blockHeight:v,pyramidBlockWidth:u,pyramidBlockHeight:v,origin:c,tileInfo:k,firstPyramidLevel:V,maximumPyramidLevel:D,blockBoundary:q})});return{storageInfo:E,
rasterInfo:a}};l._parseTransform=function(a){var b,c;if(!I.isTransformSupported(a))throw new B("cloudraster:open","the data contains unsupported geodata transform types");a=I.readTransform(a);if("identity"===a.type)return null;if("polynomial"!==a.type||null==(b=a.forwardCoefficients)||!b.length||null==(c=a.inverseCoefficients)||!c.length)throw new B("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return a};l._fetchAuxiliaryInformation=
function(){var a=w._asyncToGenerator(function*(b){var c=this.request(this.url+"/conf.vat.json",{signal:b}).then(e=>e.data).catch(()=>null);b=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:b}).then(e=>e.data).catch(()=>null);c=yield Promise.all([c,b]);let d;if(c[0]){b=c[0].fields;const e=c[0].values;if(b&&e){b=b.map(g=>({type:"OID"===g.name?"esriFieldTypeOID":n.get(g.type),name:g.name,alias:g.alias||g.name}));const m=e.map(g=>({attributes:g}));b&&e&&(d={fields:b,features:m})}}!d&&
c[1]&&(d=R.parse(c[1]).recordSet);return S.fromJSON(d)});return function(b){return a.apply(this,arguments)}}();l._buildCacheFilePath=function(a,b,c,d){var e=this.storageInfo.packetSize;c=Math.floor(c/e)*e;b="R"+this._toHexString4(Math.floor(b/e)*e)+"C"+this._toHexString4(c);e="L";e=10<=a?e+a.toString():e+("0"+a.toString());({multidimensionalInfo:a}=this.rasterInfo);const m=null==d?void 0:d[0];if(!L.isSome(a)||!m)return`${this.url}/_alllayers/${e}/${b}.bundle`;d=a.variables.filter(g=>g.name===m.variableName)[0].dimensions[0].values.indexOf(m.values[0]).toString(16);
a=4-d.length;for(c=0;c<a;c++)d="0"+d;return`${this.url}/_alllayers/${m.variableName}/${"S"+d}/${e}/${b}.bundle`};l._getIndexRecordFromBundle=function(a,b){const c=this.storageInfo.packetSize;a=a%c*c+b%c;if(0>a)throw"Invalid level / row / col";return a*this.storageInfo.recordSize+64};l._getTileEndAndContentType=function(a,b){a=a.subarray(b,b+8);b=0;let c;for(c=0;5>c;c++)b|=(a[c]&255)<<8*c;const d=b&0xffffffffff;b=0;for(c=5;8>c;c++)b|=(a[c]&255)<<8*(c-5);return{position:d,recordSize:b&0xffffffffff}};
l._toHexString4=function(a){a=a.toString(16);if(4!==a.length){let b=4-a.length;for(;0<b--;)a="0"+a}return a};return C}(Q);A.__decorate([H.property({readOnly:!0})],t.prototype,"storageInfo",void 0);A.__decorate([H.property({type:String,json:{write:!0}})],t.prototype,"datasetFormat",void 0);return t=A.__decorate([M.subclass("esri.layers.support.rasterDatasets.CloudRaster")],t)});