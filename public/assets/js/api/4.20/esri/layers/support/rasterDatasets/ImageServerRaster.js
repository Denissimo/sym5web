// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/maybe ../../../core/urlUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/ensureType ../../../core/Logger ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ../RasterInfo ../RasterStorageInfo ../serviceTileInfoProperty ../TileInfo ../TilemapCache ./BaseRaster ../rasterFunctions/pixelUtils ../rasterTransforms/GCSShiftTransform ../../../rest/support/FeatureSet ../../../geometry/SpatialReference ../../../geometry/Extent ../../../geometry/Point".split(" "),
function(t,y,x,z,A,I,D,T,U,V,W,J,E,K,L,M,N,O,P,Q,R,S,F,G){x=function(H){function B(){var e=H.apply(this,arguments)||this;e._levelOffset=0;e._slices=null;e._tilemapCache=null;e.datasetFormat="RasterTileServer";return e}t._inheritsLoose(B,H);var r=B.prototype;r.open=function(){var e=t._asyncToGenerator(function*(b){yield this.init();b=b&&b.signal;var a=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:b});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));
const c=a.data;this.sourceJSON=c;if(!c)throw new z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!c.tileInfo)throw new z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();a="jpg jpeg png png8 png24 png32 mixed".split(" ");this.tileType=c.cacheType;null==this.tileType&&(-1<a.indexOf(c.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===c.tileInfo.format.toLowerCase()?this.tileType="Elevation":
this.tileType="Raster");this.datasetName=c.name.slice(c.name.indexOf("/")+1);b=yield this._fetchRasterInfo({signal:b});if(A.isSome(b)){a="Map"===this.tileType?L.readServiceTileInfo(c.tileInfo,c):M.fromJSON(c.tileInfo);const {extent:f,pixelSize:h}=b,l=.5/b.width*h.x;let m,p;var d=a.lodAt(Math.max.apply(null,a.lods.map(k=>k.level)));"Map"!==this.tileType&&0!==c.maxScale&&("Raster"===this.tileType?(m=a.lods.filter(k=>k.resolution===h.x)[0])||(m=a.lods[a.lods.length-1]):(m=a.lods.filter(k=>Math.abs(k.scale-
c.maxScale)<l)[0])||(m=a.lods.filter(k=>k.scale>c.maxScale).sort((k,C)=>k.scale>C.scale?1:-1)[0]),h.x=h.y=m.resolution,b.width=Math.ceil((f.xmax-f.xmin)/h.x-.1),b.height=Math.ceil((f.ymax-f.ymin)/h.y-.1));m||(m=d);d=a.lodAt(Math.min.apply(null,a.lods.map(k=>k.level)));"Map"===this.tileType?this._levelOffset=a.lods[0].level:0!==c.minScale&&"Elevation"===this.tileType&&(p=a.lods.filter(k=>Math.abs(k.scale-c.minScale)<l)[0],this._levelOffset=p.level-d.level);p||(p=d);const u=Math.max(h.x,h.y);if(Math.abs(h.x-
h.y)>l||!a.lods.some(k=>Math.abs(k.resolution-u)<l))h.x=h.y=m.resolution,b.width=Math.ceil((f.xmax-f.xmin)/h.x-.1),b.height=Math.ceil((f.ymax-f.ymin)/h.y-.1);d=m.level-p.level;const [v,w]=a.size,g=[];a.lods.forEach(k=>{k.level>=p.level&&k.level<=m.level&&g.push({x:k.resolution,y:k.resolution})});g.sort((k,C)=>k.x-C.x);const n=this.computeBlockBoundary(f,v,w,a.origin,g,d),q=1<g.length?g.slice(1):null;b.storageInfo=new K({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],
pyramidResolutions:q,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:d,tileInfo:a,blockBoundary:n});this._fixGCSShift(b);this._set("rasterInfo",b)}else throw new z("image-server-raster:open","cannot initialize image service");-1<c.capabilities.toLowerCase().indexOf("tilemap")&&(b={tileInfo:b.storageInfo.tileInfo,parsedUrl:I.urlToObject(this.url),url:this.url,tileServers:[],type:"tile"},this._tilemapCache=new N.TilemapCache({layer:b}))});return function(b){return e.apply(this,
arguments)}}();r.fetchRawTile=function(){var e=t._asyncToGenerator(function*(b,a,c,d={}){const {storageInfo:f,extent:h}=this.rasterInfo;({data:d}=yield this.request(`${this.url}/tile/${f.maximumPyramidLevel-b+this._levelOffset}/${a}/${c}`,{query:this._slices?{sliceId:d.sliceId||0}:null,responseType:"array-buffer",signal:d.signal}));if(!d)return null;d=yield this.decodePixelBlock(d,{width:f.tileInfo.size[0],height:f.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType});
const l=f.blockBoundary[b];if("jpg"!==f.compression||c>l.minCol&&c<l.maxCol&&a>l.minRow&&a<l.maxRow)return d;const {origin:m,blockWidth:p,blockHeight:u}=f,{x:v,y:w}=this.getPyramidPixelSize(b);var g=Math.round((h.xmin-m.x)/v)%p;b=Math.round((h.xmax-m.x)/v)%p;var n=Math.round((m.y-h.ymax)/w)%u;const q=Math.round((m.y-h.ymin)/w)%u;g=c===l.minCol?g:0;n=a===l.minRow?n:0;P.setValidBoundary(d,{x:g,y:n},{width:(c===l.maxCol?b:p)-g,height:(a===l.maxRow?q:u)-n});return d});return function(b,a,c){return e.apply(this,
arguments)}}();r.getSliceIndex=function(e){if(null==e||!e.length||!this._slices)return null;for(let b=0;b<this._slices.length;b++){const a=this._slices[b].multidimensionalDefinition;if(a.length===e.length&&!a.some(c=>{var d=e.filter(h=>c.variableName===h.variableName&&h.dimensionName===c.dimensionName)[0];if(!d)return!0;const f=Array.isArray(c.values[0])?c.values[0][0]:c.values[0];d=Array.isArray(d.values[0])?d.values[0][0]:d.values[0];return f!==d}))return b}return null};r.fetchVariableStatisticsHistograms=
function(){var e=t._asyncToGenerator(function*(b,a){var c=this.request(this.url+"/statistics",{query:{variable:b,f:"json"},signal:a}).then(d=>{var f;return null==(f=d.data)?void 0:f.statistics});b=this.request(this.url+"/histograms",{query:{variable:b,f:"json"},signal:a}).then(d=>{var f;return null==(f=d.data)?void 0:f.histograms});c=yield Promise.all([c,b]);c[0]&&c[0].forEach(d=>{d.avg=d.mean;d.stddev=d.standardDeviation});return{statistics:c[0]||null,histograms:c[1]||null}});return function(b,a){return e.apply(this,
arguments)}}();r.computeBestPyramidLevelForLocation=function(){var e=t._asyncToGenerator(function*(b,a={}){if(!this._tilemapCache)return 0;b=this.identifyPixelLocation(b,0,A.unwrap(a.datumTransformation));if(null===b)return null;let c=0;var {maximumPyramidLevel:d}=this.rasterInfo.storageInfo;d=d-c+this._levelOffset;const f=b.srcLocation;for(;0<=d;){try{if("available"===(yield this._tilemapCache.fetchAvailability(d,b.row,b.col,a)))break}catch{}d--;c++;b=this.identifyPixelLocation(f,c,A.unwrap(a.datumTransformation));
if(null===b)return null}return-1===d||null==b?null:c});return function(b){return e.apply(this,arguments)}}();r._fetchRasterInfo=function(){var e=t._asyncToGenerator(function*(b){const a=this.sourceJSON,c=Math.ceil((a.extent.xmax-a.extent.xmin)/a.pixelSizeX-.1),d=Math.ceil((a.extent.ymax-a.extent.ymin)/a.pixelSizeY-.1),f=S.fromJSON(a.spatialReference||a.extent.spatialReference);if("Map"===this.tileType)return new E({width:c,height:d,bandCount:3,extent:F.fromJSON(a.extent),spatialReference:f,pixelSize:new G({x:a.pixelSizeX,
y:a.pixelSizeY,spatialReference:f}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const {slice:h,signal:l}=b;b=a.hasRasterAttributeTable?this.request(this.url+"/rasterAttributeTable",{query:{slice:h,f:"json"},signal:l}).then(g=>R.fromJSON(g.data)).catch(()=>null):!1;const m=a.hasColormap?this.request(this.url+"/colormap",{query:{slice:h,f:"json"},signal:l}).then(g=>{var n;return null==(n=g.data)?void 0:n.colormap}):!1,p=a.hasHistograms?this.request(this.url+"/histograms",{query:{slice:h,
f:"json"},signal:l}).then(g=>{var n;return null==(n=g.data)?void 0:n.histograms}):!1,u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:l}).then(g=>g.data).catch(()=>{}),v=a.hasMultidimensions?this._fetchMultidimensionalInfo():!1,w=a.hasMultidimensions?this.request(this.url+"/slices",{query:{f:"json"},signal:l}).then(g=>g.data&&g.data.slices).catch(()=>{}):!1;return Promise.all([b,m,p,u,v,w]).then(g=>{let n=null;if(a.minValues&&a.minValues.length===a.bandCount){n=[];for(let q=0;q<a.minValues.length;q++)n.push({min:a.minValues[q],
max:a.maxValues[q],avg:a.meanValues[q],stddev:a.stdvValues[q]})}this._slices=g[5]||null;return new E({width:c,height:d,bandCount:a.bandCount,extent:F.fromJSON(a.extent),spatialReference:f,pixelSize:new G({x:a.pixelSizeX,y:a.pixelSizeY,spatialReference:f}),pixelType:a.pixelType.toLowerCase(),statistics:n,attributeTable:g[0]||null,colormap:g[1]||null,histograms:g[2]||null,keyProperties:g[3]||{},multidimensionalInfo:g[4]||null})})});return function(b){return e.apply(this,arguments)}}();r._fetchMultidimensionalInfo=
function(){var e=t._asyncToGenerator(function*(b){var a;b=yield this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:b}).then(c=>{var d;return null==(d=c.data)?void 0:d.multidimensionalInfo});null!=(a=b.variables)&&a.length&&b.variables.forEach(c=>{var d;null!=(d=c.statistics)&&d.length&&c.statistics.forEach(f=>{f.avg=f.mean;f.stddev=f.standardDeviation})});return b});return function(b){return e.apply(this,arguments)}}();r._fixScaleInServiceInfo=function(){const {sourceJSON:e}=this;
e.minScale&&0>e.minScale&&(e.minScale=0);e.maxScale&&0>e.maxScale&&(e.maxScale=0)};r._fixGCSShift=function(e){const {extent:b,spatialReference:a}=e;0===b.xmin&&360===b.xmax&&a.wkid&&a.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Q,e.extent=e.transform.forwardTransform(b))};return B}(O);y.__decorate([D.property({type:String,json:{write:!0}})],x.prototype,"datasetFormat",void 0);y.__decorate([D.property()],x.prototype,"tileType",void 0);return x=y.__decorate([J.subclass("esri.layers.support.rasterDatasets.ImageServerRaster")],
x)});