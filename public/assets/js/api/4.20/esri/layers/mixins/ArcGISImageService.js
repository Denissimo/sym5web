// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators/aliasOf ../../core/accessorSupport/ensureType ../../core/has ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/PixelBlock ../support/rasterEnums ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterFormats/RasterCodec ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../rest/imageService ../../rest/support/FeatureSet ../../rest/support/ImageHistogramParameters ../../rest/support/ImageIdentifyParameters ../../rest/support/ImageSampleParameters ../../rest/support/Query ../../tasks/ImageIdentifyTask ../../tasks/QueryTask ../../geometry/SpatialReference ../../geometry/Polygon ../../geometry/Extent ../../geometry/Point".split(" "),
function(Y,y,h,Fa,ma,R,w,A,na,Z,oa,C,pa,qa,L,D,Ga,n,B,ra,E,aa,sa,ta,F,ua,va,I,wa,J,K,S,xa,T,N,ya,U,ba,ca,da,za,ea,fa,Aa,O,Ba,M,ha){function Ca(g){if(!g)return null;g=JSON.stringify(g).match(/"rasterFunction":"(.*?")/gi);return(g=null==g?void 0:g.map(G=>G.replace('"rasterFunction":"',"").replace('"',"")))?g.join("/"):null}const ia=oa.getLogger("esri.layers.mixins.ArcGISImageService"),V=na.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",
C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Da=new Set("png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" ")),Ea=n.ensureRange(D.ensureNumber,{min:0,max:255});Y.ArcGISImageService=g=>{g=function(G){function P(){var a=G.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._symbolizer=null;a._defaultServiceMosaicRule=null;a.rasterAttributeTableFieldPrefix="Raster.";a.adjustAspectRatio=null;a.bandCount=null;a.bandIds=void 0;
a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.minScale=0;a.maxScale=0;a.multidimensionalInfo=null;a.noData=null;a.noDataInterpretation=void 0;a.objectIdField=null;a.pixelSizeX=null;a.pixelSizeY=null;a.pixelFilter=null;a.raster=void 0;a.viewId=void 0;
a.renderer=null;a.rasterAttributeTable=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=null;return a}y._inheritsLoose(P,G);var k=P.prototype;k.initialize=function(){this._set("exportImageServiceParameters",new ta.ExportImageServiceParameters({layer:this}))};k.readDefaultServiceMosaicRule=function(a,b){return I.fromJSON(b)};k.readBandIds=function(a,b){if(Array.isArray(a)&&0<a.length&&a.every(c=>
"number"===typeof c))return a};k.readCapabilities=function(a,b){return this._readCapabilities(b)};k.writeCompressionQuality=function(a,b,c){null!=a&&"lerc"!==this.format&&(b[c]=a)};k.writeCompressionTolerance=function(a,b,c){"lerc"===this.format&&null!=a&&(b[c]=a)};k.readFormat=function(a,b){return"esriImageServiceDataTypeVector-UV"===b.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===b.serviceDataType?"lerc":null!=this.pixelFilter?"lerc":"jpgpng"};k.readMinScale=function(a,b){return null!=
b.minLOD&&null!=b.maxLOD?a:0};k.readMaxScale=function(a,b){return null!=b.minLOD&&null!=b.maxLOD?a:0};k.readMosaicRule=function(a,b){return I.fromJSON(a||b.mosaicRule||b)};k.writeMosaicRule=function(a,b,c){a=this.mosaicRule;const d=this.definitionExpression;a?d&&d!==a.where&&(a=a.clone(),a.where=d):d&&(a=new I({where:d}));this._isValidCustomizedMosaicRule(a)&&(b[c]=a.toJSON())};k.writeNoData=function(a,b,c){null!=a&&"number"===typeof a&&(b[c]=Ea(a))};k.readObjectIdField=function(a,b){a||(a=(a=b.fields.filter(c=>
"esriFieldTypeOID"===c.type||"oid"===c.type))&&a[0]&&a[0].name);return a};k.readRenderer=function(a,b,c){var d,e;a=null==b?void 0:null==(d=b.layerDefinition)?void 0:null==(e=d.drawingInfo)?void 0:e.renderer;c=R.read(a,c);if(null==c)return null;"vector-field"===c.type&&b.symbolTileSize&&!a.symbolTileSize&&(c.symbolTileSize=b.symbolTileSize);va.isSupportedRendererType(c)||ia.warn("ArcGISImageService","Imagery layer doesn't support given renderer type.");return c};k.writeRenderer=function(a,b,c){b.layerDefinition=
b.layerDefinition||{};b.layerDefinition.drawingInfo=b.layerDefinition.drawingInfo||{};b.layerDefinition.drawingInfo.renderer=a.toJSON();"vector-field"===a.type&&(b.symbolTileSize=a.symbolTileSize)};k.readRenderingRule=function(a,b){a=b.rasterFunctionInfos;return b.renderingRule||a&&a.length&&"None"!==a[0].name?K.fromJSON(b.renderingRule||{rasterFunctionInfos:b.rasterFunctionInfos}):null};k.writeRenderingRule=function(a,b,c){this._isRFTJson(a)||(b[c]=a.toJSON())};k.readSpatialReference=function(a,
b){return(a=a||b.extent.spatialReference)?O.fromJSON(a):null};k.readPixelType=function(a){return V.fromJSON(a)||a};k.writePixelType=function(a,b,c){if(C.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)b[c]=V.toJSON(a)};k.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("fields")||b.hasOwnProperty("timeInfo")?10:9.3);return a};k.applyFilter=function(a){let b=a;this.pixelFilter&&(b=this._clonePixelData(a),this.pixelFilter(b));return b};k.applyRenderer=
function(){var a=y._asyncToGenerator(function*(b,c){var d=b;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){d=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());const e=this._rasterJobHandler.instance,{bandIds:f}=this;e?(d&&(this._symbolizer.bind(),yield e.updateSymbolizer(this._symbolizer,c),this._cachedRendererJson=this.renderer.toJSON()),c=yield e.symbolize({bandIds:f,...b},c),d={extent:b.extent,pixelBlock:c}):d={extent:b.extent,pixelBlock:this._symbolizer.symbolize({bandIds:f,
...b})}}return d});return function(b,c){return a.apply(this,arguments)}}();k.destroy=function(){this._shutdownJobHandler()};k.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};k.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};k.computeHistograms=function(){var a=y._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeHistograms)throw new A("imagery-layer:compute-histograms",
"this operation is not supported on the input image service");b=D.ensureClass(ca,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return U.computeHistograms(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();k.computeStatisticsHistograms=function(){var a=y._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==
c?void 0:c.signal);if(!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");b=D.ensureClass(ca,b).clone();const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return U.computeStatisticsHistograms(this.url,b,this._getRequestOptions(c))});return function(b,
c){return a.apply(this,arguments)}}();k.fetchImage=function(a,b,c,d={}){if(null==a||null==b||null==c)return Promise.reject(new A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const e=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:d.signal}):null;return pa.when(e).then(f=>{f&&(this.rasterInfo=f);f={imageServiceParameters:this.getExportImageServiceParameters(a,b,c,d.timeExtent),
imageProps:{extent:a,width:b,height:c,format:this.format},requestAsImageElement:d.requestAsImageElement&&!this.pixelFilter||!1,signal:d.signal};return this._requestArrayBuffer(f)})};k.fetchKeyProperties=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return w(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(b=>b.data)};k.fetchRasterAttributeTable=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();
return 10.1>this.version?Promise.reject(new A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):w(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(b=>ba.fromJSON(b.data))};k.getCatalogItemRasterInfo=function(){var a=y._asyncToGenerator(function*(b,c){var d=w(this.parsedUrl.path+"/"+b+"/info",{query:this._getQueryParams(),...c}).then(e=>e.data);b=w(this.parsedUrl.path+"/"+b+"/info/keyProperties",
{query:this._getQueryParams(),...c}).then(e=>e.data).catch(()=>{});d=yield Promise.all([d,b]);if(d[0])return b=M.fromJSON(d[0].extent),c=d[0].statistics?d[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null,new S({bandCount:d[0].bandCount,extent:b,spatialReference:b.sr,pixelSize:new ha({x:d[0].pixelSizeX,y:d[0].pixelSizeY,spatialReference:b.sr}),pixelType:d[0].pixelType.toLowerCase(),statistics:c,histograms:d[0].histograms,keyProperties:d[1]||{}})});return function(b,c){return a.apply(this,
arguments)}}();k.getCatalogItemICSInfo=function(){var a=y._asyncToGenerator(function*(b,c){var {data:d}=yield w(this.parsedUrl.path+"/"+b+"/info/ics",{query:this._getQueryParams(),...c});if(d=d&&d.ics){var e=null;try{e=(yield w(this.parsedUrl.path+"/"+b+"/info",{query:this._getQueryParams(),...c})).data.extent}catch{}if(!e||!e.spatialReference)return{ics:d,icsToPixelTransform:null,icsExtent:null,northDirection:null};var f=10.7<=this.version?w(this.parsedUrl.path+"/"+b+"/info/icstopixel",{query:this._getQueryParams(),
...c}).then(u=>u.data).catch(()=>({})):{},m=e.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[e]}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+b};l=w(this.parsedUrl.path+"/project",{query:this._getQueryParams(l),...c}).then(u=>u.data).catch(()=>({}));var p=(e.xmin+e.xmax)/2,t=(e.ymax-e.ymin)/6;e=e.ymin+t;var z=[];for(let u=0;5>u;u++)z.push({x:p,y:e+t*u});b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:z}),inSR:m.wkid||JSON.stringify(m),
outSR:"0:"+b};c=w(this.parsedUrl.path+"/project",{query:this._getQueryParams(b),...c}).then(u=>u.data).catch(()=>({}));f=yield Promise.all([f,l,c]);c=f[0].ipxf;if(null==c){var q,r,v;b=null==(q=d.geodataXform)?void 0:q.xf_0;"topup"===(null==b?void 0:null==(r=b.name)?void 0:r.toLowerCase())&&6===(null==b?void 0:null==(v=b.coefficients)?void 0:v.length)&&(c={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:b.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}if(q=
M.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]))q.spatialReference=new O({wkid:0,imageCoordinateSystem:d});r=f[2].geometries?f[2].geometries.filter(u=>null!=u&&null!=u.x&&null!=u.y&&"NaN"!==u.x&&"NaN"!==u.y):[];v=r.length;if(3>v)return{ics:d,icsToPixelTransform:c,icsExtent:q,northDirection:null};m=l=b=f=0;for(p=0;p<v;p++)f+=r[p].x,b+=r[p].y,l+=r[p].x*r[p].x,m+=r[p].x*r[p].y;v=(v*m-f*b)/(v*l-f*f);f=0;b=r[4].x>r[0].x;r=r[4].y>r[0].y;Infinity===v?f=r?90:270:0===v?f=b?0:180:0<v?f=b?180*Math.atan(v)/
Math.PI:180*Math.atan(v)/Math.PI+180:0>v&&(f=r?180+180*Math.atan(v)/Math.PI:360+180*Math.atan(v)/Math.PI);return{ics:d,icsToPixelTransform:c,icsExtent:q,northDirection:f}}});return function(b,c){return a.apply(this,arguments)}}();k.generateRasterInfo=function(){var a=y._asyncToGenerator(function*(b,c){if((!b||"none"===b.functionName.toLowerCase()||this._isVectorFieldResampleFunction(b))&&C.isSome(this.serviceRasterInfo))return this.serviceRasterInfo;const d=Ca(b);if(this._functionRasterInfos[d])return this._functionRasterInfos[d];
b=this._generateRasterInfo(b,c);this._functionRasterInfos[d]=b;try{return yield b}catch{return this._functionRasterInfos[d]=null}});return function(b,c){return a.apply(this,arguments)}}();k.getExportImageServiceParameters=function(a,b,c,d){a=a.clone().shiftCentralMeridian();var e=a.spatialReference;if(e.imageCoordinateSystem){const {id:q,referenceServiceName:r}=e.imageCoordinateSystem;e=null!=q?r?-1<this.parsedUrl.path.toLowerCase().indexOf("/"+r.toLowerCase()+"/")?"0:"+q:JSON.stringify({icsid:q,
icsns:r}):"0:"+q:JSON.stringify({ics:e.imageCoordinateSystem})}else e=e.wkid||JSON.stringify(e.toJSON());C.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const f=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:l,mosaicRule:p}=f;var {renderingRule:t}=f;f.bandIds=m instanceof Array&&0<m.length&&!this.renderingRule?m.join(","):void 0;if(null!=m&&m.length&&this.renderingRule)if("Colormap"===t.rasterFunction){const q=
new K({functionName:"ExtractBand",functionArguments:{BandIds:m,raster:t.rasterFunctionArguments.Raster}});t.rasterFunctionArguments.Raster=q}else t=new K({functionName:"ExtractBand",functionArguments:{BandIds:m,raster:t}});l instanceof Array&&0<l.length&&(f.noData=l.join(","));const z=this.timeInfo;p&&p.multidimensionalDefinition&&d&&z&&z.startField&&(p.multidimensionalDefinition=p.multidimensionalDefinition.filter(q=>q.dimensionName!==z.startField));f.mosaicRule=p&&JSON.stringify(p);f.renderingRule=
t&&JSON.stringify(t);t={};if(d){const {start:q,end:r}=d.toJSON();if(q&&r&&q===r)t.time=""+q;else if(null!=q||null!=r)t.time=`${null==q?"null":q},${null==r?"null":r}`}return{bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:e,imageSR:e,size:b+","+c,...f,...t}};k.getSamples=function(){var a=y._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsGetSamples)throw new A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");
b=D.ensureClass(za,b).clone();const {raster:d}=this;d&&null==b.raster&&(b.raster=d);return U.getSamples(this.url,b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();k.identify=function(){var a=y._asyncToGenerator(function*(b,c){yield this._fetchCapabilities(null==c?void 0:c.signal);if(!this.capabilities.operations.supportsIdentify)throw new A("imagery-layer:query-rasters","query operation is not supported on the input image service");b=D.ensureClass(da,b).clone();
const {raster:d,mosaicRule:e,renderingRule:f}=this;f&&null==b.renderingRule&&(b.renderingRule=f);e&&null==b.mosaicRule&&(b.mosaicRule=e);d&&null==b.raster&&(b.raster=d);return(new fa({url:this.url})).execute(b,this._getRequestOptions(c))});return function(b,c){return a.apply(this,arguments)}}();k.queryRasters=function(){var a=y._asyncToGenerator(function*(b,c){var d;yield this._fetchCapabilities(null==(d=c)?void 0:d.signal);if(!this.capabilities.operations.supportsQuery)throw new A("imagery-layer:query-rasters",
"query operation is not supported on the input image service");b=D.ensureClass(ea,b);c=this._getRequestOptions(c);this.raster&&(c.query={...c.query,raster:this.raster});return this.queryTask.execute(b,c)});return function(b,c){return a.apply(this,arguments)}}();k.queryVisibleRasters=function(a,b){if(!a)return Promise.reject(new A("imagery-layer: query-visible-rasters","missing query parameter"));const {pixelSize:c,returnDomainValues:d,returnTopmostRaster:e,showNoDataRecords:f}=b||{pixelSize:null,
returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1;var l=null;let p=null;const t=this.rasterFunctionNamesIndex;if(C.isSome(a.outFields)&&(m=a.outFields.some(u=>-1===u.toLowerCase().indexOf("raster.servicepixelvalue")),10.4<=this.version)){const u=a.outFields.filter(x=>-1<x.toLowerCase().indexOf("raster.servicepixelvalue")&&24<x.length).map(x=>{x=x.slice(25);return[this._updateRenderingRulesFunctionName(x,t),x]});l=u.map(x=>new K({functionName:x[0]}));p=u.map(x=>x[1]);0===
l.length?this.renderingRule?(l.push(this.renderingRule),p.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(x=>x.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),p.push(this.renderingRule.functionName))}const z=C.isNone(a.outSpatialReference)||a.outSpatialReference.equals(this.spatialReference);l=this._getQueryParams({geometry:a.geometry,timeExtent:a.timeExtent||this.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:10.4>
this.version?this.renderingRule:null,renderingRules:l,pixelSize:c,returnCatalogItems:m,returnGeometry:z,raster:this.raster,maxItemCount:e?1:null});delete l.f;const q=new da(l),r=new fa({url:this.url}),v=this.generateRasterInfo(this.renderingRule);return new Promise(u=>{v.then(()=>{r.execute(q,{signal:null==b?void 0:b.signal,query:{...this.customParameters}}).then(x=>{const ja=a.outFields;if(m&&!z&&x.catalogItems&&x.catalogItems.features&&0<x.catalogItems.features.length){const Q=this.objectIdField||
"ObjectId",ka=x.catalogItems.features;var W=ka.map(H=>H.attributes&&H.attributes[Q]);W=new ea({objectIds:W,returnGeometry:!0,outSpatialReference:a.outSpatialReference,outFields:[Q]});return this.queryRasters(W).then(H=>{H&&H.features&&0<H.features.length&&H.features.forEach(la=>{ka.forEach(X=>{X.attributes[Q]===la.attributes[Q]&&(X.geometry=new Ba(la.geometry),X.geometry.spatialReference=a.outSpatialReference)})});u(this._processVisibleRastersResponse(x,{returnDomainValues:d,templateRRFunctionNames:p,
showNoDataRecords:f,templateFields:ja}))}).catch(()=>{throw new A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry");})}u(this._processVisibleRastersResponse(x,{returnDomainValues:d,templateRRFunctionNames:p,showNoDataRecords:f,templateFields:ja}))}).catch(()=>{throw new A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters");})})})};k.fetchVariableStatisticsHistograms=function(){var a=y._asyncToGenerator(function*(b,
c){var d=w(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>{var f;return null==(f=e.data)?void 0:f.statistics});b=w(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:b}),signal:c}).then(e=>{var f;return null==(f=e.data)?void 0:f.histograms});d=yield Promise.all([d,b]);d[0]&&d[0].forEach(e=>{e.avg=e.mean;e.stddev=e.standardDeviation});return{statistics:d[0]||null,histograms:d[1]||null}});return function(b,c){return a.apply(this,arguments)}}();
k._fetchService=function(){var a=y._asyncToGenerator(function*(b){yield this._fetchServiceInfo(b);C.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);var c=this.sourceJSON;c=C.isSome(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:c,signal:b}).then(d=>{this._set("serviceRasterInfo",d);return d});b=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,
{signal:b}):null;return Promise.all([c,b]).then(d=>{d[1]?this._set("rasterInfo",d[1]):this._set("rasterInfo",d[0]);this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,ia.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer"));this._configDefaultRenderer();this.watch("renderer",()=>this._configDefaultRenderer());this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&
this.generateRasterInfo(e).then(f=>{f&&(this.rasterInfo=f)})});(d=C.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo)&&this._updateMultidimensionalDefinition(d)})});return function(b){return a.apply(this,arguments)}}();k._initJobHandler=function(){var a=y._asyncToGenerator(function*(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const b=new xa;this._rasterJobHandler.connectionPromise=b.initialize().then(()=>{this._rasterJobHandler.instance=
b},()=>null);yield this._rasterJobHandler.connectionPromise});return function(){return a.apply(this,arguments)}}();k._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0};k._isSupportedRenderer=function(a){const {rasterInfo:b,renderingRule:c}=this;return"unique-value"===a.type&&c&&"none"!==c.functionName.toLowerCase()&&1===b.bandCount&&
["u8","s8"].includes(b.pixelType)||N.getSupportedRendererTypes(this.rasterInfo).includes(this.renderer.type)};k._fetchCapabilities=function(){var a=y._asyncToGenerator(function*(b){if(this.capabilities)return this.capabilities;yield this._fetchServiceInfo(b);return this.capabilities});return function(b){return a.apply(this,arguments)}}();k._fetchServiceInfo=function(){var a=y._asyncToGenerator(function*(b){var c;let d=this.sourceJSON;if(!d){const {data:e,ssl:f}=yield w(this.parsedUrl.path,{query:this._getQueryParams(),
signal:b});this.sourceJSON=d=e;f&&(this.url=this.url.replace(/^http:/i,"https:"))}if(-1<(null==(c=d.capabilities)?void 0:c.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly")))throw new A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(d,{origin:"service",url:this.parsedUrl})});return function(b){return a.apply(this,arguments)}}();k._isVectorFieldResampleFunction=function(a){if(!C.isSome(a))return!1;const {functionName:b,functionArguments:c}=
a;a="resample"===b.toLowerCase();const d=(null==c?void 0:c.ResampleType)||(null==c?void 0:c.resampleType);return a&&(7===d||10===d)};k._isPicture=function(){return!this.format||-1<this.format.indexOf("jpg")||-1<this.format.indexOf("png")};k._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&3<=this.rasterInfo.bandCount){const c=N.getDefaultBandCombination(this.rasterInfo);!c||3===this.rasterInfo.bandCount&&0===c[0]&&1===c[1]&&2===c[2]||(this.bandIds=c)}if(!this.renderer){var a,
b;this.renderer=N.createDefaultRenderer(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(a=this.mosaicRule)?void 0:null==(b=a.multidimensionalDefinition)?void 0:b[0].variableName})}this._symbolizer?(this._symbolizer.rendererJSON=N.normalizeRendererJSON(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new ya({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo});this._symbolizer.bind()||(this._symbolizer=null)}};k._clonePixelData=
function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:a.pixelBlock&&a.pixelBlock.clone()}};k._getQueryParams=function(a){const {raster:b,viewId:c}=this;return{raster:b,viewId:c,f:"json",...a,...this.customParameters}};k._getRequestOptions=function(a){return{...a,query:{...null==a?void 0:a.query,...this.customParameters}}};k._decodePixelBlock=function(a,b,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:b}):T.decode(a,b,c)};k._fetchMultidimensionalInfo=
function(){var a=y._asyncToGenerator(function*(b){var c;b=yield w(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:b}).then(d=>{var e;return null==(e=d.data)?void 0:e.multidimensionalInfo});null!=(c=b.variables)&&c.length&&b.variables.forEach(d=>{var e;null!=(e=d.statistics)&&e.length&&d.statistics.forEach(f=>{f.avg=f.mean;f.stddev=f.standardDeviation})});return b});return function(b){return a.apply(this,arguments)}}();k._fetchAuxiliaryRasterInfo=function(a){const b=
a&&a.serviceInfo;if(!b)return Promise.reject(new A("imagery-layer:fetch-metadata","valid serviceInfo is required"));var c=a.renderingRule?JSON.stringify(a.renderingRule.toJSON()):null,d=a.signal;a=b.hasRasterAttributeTable&&10.1<=this.version?w(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.1<=this.version?c:null}),signal:d}).then(m=>ba.fromJSON(m.data)).catch(()=>null):!1;const e=b.hasColormap&&10.1<=this.version?w(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:10.6<=
this.version?c:null}),signal:d}).then(m=>{var l;return null==(l=m.data)?void 0:l.colormap}):!1,f=b.hasHistograms&&10.1<=this.version?w(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:10.1<=this.version?c:null}),signal:d}).then(m=>{var l;return null==(l=m.data)?void 0:l.histograms}):!1;c=10.3<=this.version?w(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:c}),signal:d}).then(m=>m.data).catch(()=>{}):!1;d=b.hasMultidimensions&&10.3<=this.version?
this._fetchMultidimensionalInfo():!1;return Promise.all([a,e,f,c,d]).then(m=>{let l=null;if(b.minValues&&b.minValues.length===b.bandCount){l=[];for(var p=0;p<b.minValues.length;p++)l.push({min:b.minValues[p],max:b.maxValues[p],avg:b.meanValues[p],stddev:b.stdvValues[p]})}p=Math.ceil((b.extent.xmax-b.extent.xmin)/b.pixelSizeX-.1);const t=Math.ceil((b.extent.ymax-b.extent.ymin)/b.pixelSizeY-.1),z=O.fromJSON(b.spatialReference||b.extent.spatialReference);return new S({width:p,height:t,bandCount:b.bandCount,
extent:M.fromJSON(b.extent),spatialReference:z,pixelSize:new ha({x:b.pixelSizeX,y:b.pixelSizeY,spatialReference:z}),pixelType:b.pixelType.toLowerCase(),statistics:l,attributeTable:m[0]||null,colormap:m[1]||null,histograms:m[2]||null,keyProperties:m[3]||{},multidimensionalInfo:m[4]||null})})};k._requestArrayBuffer=function(a){const {imageProps:b,requestAsImageElement:c,signal:d}=a;if(c&&!this.pixelFilter&&b.format&&-1<b.format.indexOf("png"))return w(this.parsedUrl.path+"/exportImage",{responseType:"image",
query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:d}).then(f=>({imageElement:f.data,params:b}));const e=this._initJobHandler();a=w(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...a.imageServiceParameters}),signal:d});return Promise.all([a,e]).then(f=>{f=f[0].data;const m=b.format||"jpgpng";var l=m;"bsq"!==l&&"bip"!==l&&(l=T.getFormat(f));if(!l)throw new A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,
new Uint8Array(f)));l="gif"===m||"bmp"===m||-1<m.indexOf("png")&&("png"===l||"jpg"===l);const p={signal:d};return l?T.decode(f,{useCanvas:!0,...b},p).then(t=>({pixelData:{pixelBlock:t,extent:b.extent},params:b})):this._decodePixelBlock(f,{width:b.width,height:b.height,planes:null,pixelType:null,noDataValue:null,format:m},p).then(t=>({pixelData:{pixelBlock:t,extent:b.extent},params:b}))})};k._generateRasterInfo=function(){var a=y._asyncToGenerator(function*(b,c){const {data:d}=yield w(this.parsedUrl.path,
{query:this._getQueryParams({renderingRule:b}),...c});return yield this._fetchAuxiliaryRasterInfo({serviceInfo:d,renderingRule:b,...c})});return function(b,c){return a.apply(this,arguments)}}();k._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())};k._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var b=a.variables[0].dimensions;
a=[];for(var c in b)if(b.hasOwnProperty(c)){const d=b[c],e=d.extent;let f=!0,m=[e[0]];d.hasRanges&&!0===d.hasRanges?(f=!1,m=[d.values[0]]):"stdz"===d.name.toLowerCase()&&Math.abs(e[1])<=Math.abs(e[0])&&(m=[e[1]]);a.push(new sa({variableName:"",dimensionName:b[c].name,isSlice:f,values:m}))}0<a.length&&(this.mosaicRule=this.mosaicRule||new I,c=this.mosaicRule.multidimensionalDefinition,!c||c&&0>=c.length)&&(this.mosaicRule.multidimensionalDefinition=a)}};k._formatAttributeValue=function(a,b){if("string"===
typeof a&&(b=(b=this._getFieldInfo(this.popupTemplate&&this.popupTemplate.fieldInfos,b))&&b.format)){let c,d;return-1<a.trim().indexOf(",")?(c=",",d=c+" ",this._formatDelimitedString(a,c,d,b)):-1<a.trim().indexOf(" ")?(c=d=" ",this._formatDelimitedString(a,c,d,b)):this._formatNumberFromString(a,b)}return a};k._getFieldInfo=function(a,b){if(a&&a.length&&b){var c=b.toLowerCase(),d=void 0;a.some(e=>!e.fieldName||e.fieldName.toLowerCase()!==c&&e.fieldName.toLowerCase()!==c.replace(/ /g,"_")?!1:(d=e,!0));
return d}};k._formatDelimitedString=function(a,b,c,d){return a&&b&&c&&d?a.trim().split(b).map(e=>this._formatNumberFromString(e,d)).join(c):a};k._formatNumberFromString=function(a,b){if(!a||!b)return a;const c=Number(a);return isNaN(c)?a:b.format(c)};k._processVisibleRastersResponse=function(a,b){b=b||{};const c=a.value,{templateRRFunctionNames:d,showNoDataRecords:e,returnDomainValues:f,templateFields:m}=b;b=a.processedValues;var l=a.catalogItems&&a.catalogItems.features;let p=a.properties&&a.properties.Values&&
a.properties.Values.map(u=>u.replace(/ /gi,", "))||[];var t=this.objectIdField||"ObjectId";a="string"===typeof c&&-1<c.toLowerCase().indexOf("nodata");const z=[];!c||l||a||(l={},l[t]=0,l=new ma(this.fullExtent,null,l),p=[c],l=[l]);if(!l)return[];this._updateResponseFieldNames(l,m);a&&!e&&(l=[]);for(let u=0;u<l.length;u++){t=l[u];if(null!=c&&!a){var q=p[u];var r=this.renderingRule&&b&&0<b.length&&d&&0<d.length&&-1<d.indexOf(this.renderingRule.functionName)?b[d.indexOf(this.renderingRule.functionName)]:
c;if("nodata"===q.toLowerCase()&&!e)continue;t.attributes["Raster.ItemPixelValue"]=this._formatAttributeValue(q,"Raster.ItemPixelValue");t.attributes["Raster.ServicePixelValue"]=this._formatAttributeValue(r,"Raster.ServicePixelValue");this._updateFeatureWithMagDirValues(t,q);var v=this.fields&&0<this.fields.length;r=this.renderingRule&&C.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?v?q:c:r;this.renderingRule||(r=v?q:c);this._updateFeatureWithRasterAttributeTableValues(t,r)}t.sourceLayer=
this;f&&this._updateFeatureWithDomainValues(t);if(d&&b&&d.length===b.length)for(q=0;q<d.length;q++)v="Raster.ServicePixelValue."+d[q],t.attributes[v]=this._formatAttributeValue(b[q],v);z.push(l[u])}return z};k._updateFeatureWithRasterAttributeTableValues=function(a,b){var c=this.rasterInfo&&this.rasterInfo.attributeTable||C.isSome(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable;const d=c&&c.features;if(d){c=c.fields;var e=c.map(l=>l.name).filter(l=>"value"===l.toLowerCase()),f=e&&e[0];
if(f){var m=d.filter(l=>l.attributes[f]===(null!=b?parseInt(b,10):null));m&&m[0]&&c.forEach(l=>{const p=this.rasterAttributeTableFieldPrefix+l.name;a.attributes[p]=this._formatAttributeValue(m[0].attributes[l.name],p)})}}};k._updateFeatureWithMagDirValues=function(a,b){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType)){var c=b.replace(" ",",").split(",").map(d=>parseFloat(d));b=c.map(d=>[d]);c=c.map(d=>
({minValue:d,maxValue:d,noDataValue:null}));b=new wa({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});this.pixelFilter({pixelBlock:b,extent:new M(0,0,0,0,this.spatialReference)});a.attributes["Raster.Magnitude"]=b.pixels[0][0];a.attributes["Raster.Direction"]=b.pixels[1][0]}};k._updateFeatureWithDomainValues=function(a){const b=this.fields&&this.fields.filter(c=>c.domain&&"coded-value"===c.domain.type);null!=b&&b.forEach(c=>{const d=a.attributes[c.name];if(null!=d){const e=c.domain.codedValues.filter(f=>
f.code===d)[0];e&&(a.attributes[c.name]=e.name)}})};k._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var c=this.fieldsIndex;c&&a.forEach(d=>{if(d&&d.attributes)for(const e of b)if(c.has(e)){const f=c.get(e).name;f!==e&&(d.attributes[e]=d.attributes[f],delete d.attributes[f])}})}};k._updateRenderingRulesFunctionName=function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw","None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};k._isRFTJson=function(a){return a.name&&
a.arguments&&a.function&&a.hasOwnProperty("functionType")};k._readCapabilities=function(a){const b=a.capabilities?a.capabilities.toLowerCase().split(",").map(p=>p.trim()):["image","catalog"],{currentVersion:c,advancedQueryCapabilities:d,maxRecordCount:e}=a,f=-1<b.indexOf("image"),m="esriImageServiceDataTypeElevation"===a.serviceDataType,l=!!(a.spatialReference||a.extent&&a.extent.spatialReference);return{operations:{supportsComputeHistograms:f,supportsExportImage:f,supportsIdentify:f,supportsMeasure:-1<
b.indexOf("mensuration")&&l,supportsDownload:-1<b.indexOf("download"),supportsQuery:-1<b.indexOf("catalog")&&a.fields&&0<a.fields.length,supportsGetSamples:10.2<=c&&f,supportsProject:10.3<=c&&f,supportsComputeStatisticsHistograms:10.4<=c&&f,supportsQueryBoundary:10.6<=c&&f,supportsCalculateVolume:10.7<=c&&m,supportsComputePixelLocation:10.7<=c&&-1<b.indexOf("catalog")},query:{supportsStatistics:!(!d||!d.supportsStatistics),supportsOrderBy:!(!d||!d.supportsOrderBy),supportsDistinct:!(!d||!d.supportsDistinct),
supportsPagination:!(!d||!d.supportsPagination),supportsStandardizedQueriesOnly:!(!d||!d.useStandardizedQueries),maxRecordCount:e}}};y._createClass(P,[{key:"rasterFunctionNamesIndex",get:function(){const a=new Map;if(!this.rasterFunctionInfos||1>this.rasterFunctionInfos.length)return a;this.rasterFunctionInfos.forEach(b=>{a.set(b.name.toLowerCase().replace(/ /gi,"_"),b.name)});return a}},{key:"queryTask",get:function(){return new Aa({url:this.url})}},{key:"fieldsIndex",get:function(){return this.fields?
new ua(this.fields):null}},{key:"format",set:function(a){a&&Da.has(a.toLowerCase())&&this._set("format",a.toLowerCase())}},{key:"mosaicRule",set:function(a){a&&a.mosaicMethod&&(a=I.fromJSON({...a.toJSON(),mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation}));this._set("mosaicRule",a)}},{key:"parsedUrl",get:function(){return this.url?qa.urlToObject(this.url):null}},{key:"rasterFields",get:function(){const a=this.rasterAttributeTableFieldPrefix||"Raster.";var b=new F({name:"Raster.ItemPixelValue",
alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"});const c=new F({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),d=new F({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let e=this.fields?Z.clone(this.fields):[];e.push(c);this.capabilities.operations.supportsQuery&&this.fields&&0<this.fields.length&&e.push(b);10.4<=this.version&&this.rasterFunctionInfos&&
this.rasterFunctionInfos.some(f=>"none"===f.name.toLowerCase())&&e.push(d);this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(f=>"none"!==f.name.toLowerCase()).forEach(f=>{e.push(new F({name:"Raster.ServicePixelValue."+f.name,alias:f.name,domain:null,editable:!1,length:50,type:"string"}))});null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(e.push(new F({name:"Raster.Magnitude",alias:"Magnitude",
domain:null,editable:!1,type:"double"})),e.push(new F({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(b=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null)&&0<b.length&&(b=b.filter(f=>"esriFieldTypeOID"!==f.type&&"value"!==f.name.toLowerCase()).map(f=>{const m=Z.clone(f);m.name=a+f.name;return m}),e=e.concat(b));return e}},{key:"renderingRule",set:function(a){a&&a.rasterFunction&&(a=K.fromJSON({...a.toJSON(),rasterFunction:a.rasterFunction,
rasterFunctionArguments:a.rasterFunctionArguments}));this._set("renderingRule",a)}}]);return P}(g);h.__decorate([n.property()],g.prototype,"_functionRasterInfos",void 0);h.__decorate([n.property()],g.prototype,"_rasterJobHandler",void 0);h.__decorate([n.property()],g.prototype,"_symbolizer",void 0);h.__decorate([n.property()],g.prototype,"_defaultServiceMosaicRule",void 0);h.__decorate([B.reader("_defaultServiceMosaicRule",["defaultMosaicMethod"])],g.prototype,"readDefaultServiceMosaicRule",null);
h.__decorate([n.property()],g.prototype,"_cachedRendererJson",void 0);h.__decorate([n.property()],g.prototype,"rasterAttributeTableFieldPrefix",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"rasterFunctionNamesIndex",null);h.__decorate([n.property({readOnly:!0})],g.prototype,"queryTask",null);h.__decorate([n.property()],g.prototype,"adjustAspectRatio",void 0);h.__decorate([n.property({readOnly:!0}),L.aliasOf("serviceRasterInfo.bandCount")],g.prototype,"bandCount",void 0);h.__decorate([n.property({type:[D.Integer],
json:{write:!0}})],g.prototype,"bandIds",void 0);h.__decorate([B.reader("bandIds")],g.prototype,"readBandIds",null);h.__decorate([n.property({readOnly:!0,json:{read:!1}})],g.prototype,"capabilities",void 0);h.__decorate([B.reader("service","capabilities",["capabilities","currentVersion","serviceDataType"])],g.prototype,"readCapabilities",null);h.__decorate([n.property({type:Number})],g.prototype,"compressionQuality",void 0);h.__decorate([E.writer("compressionQuality")],g.prototype,"writeCompressionQuality",
null);h.__decorate([n.property({type:Number})],g.prototype,"compressionTolerance",void 0);h.__decorate([E.writer("compressionTolerance")],g.prototype,"writeCompressionTolerance",null);h.__decorate([n.property({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0);h.__decorate([n.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],g.prototype,"definitionExpression",void 0);h.__decorate([n.property({readOnly:!0,constructOnly:!0})],
g.prototype,"exportImageServiceParameters",void 0);h.__decorate([n.property()],g.prototype,"rasterInfo",void 0);h.__decorate([n.property({readOnly:!0,type:[F]})],g.prototype,"fields",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"fieldsIndex",null);h.__decorate([n.property({type:"png png8 png24 png32 jpg bmp gif jpgpng lerc tiff".split(" "),json:{write:!0}})],g.prototype,"format",null);h.__decorate([B.reader("service","format",["serviceDataType"])],g.prototype,"readFormat",null);h.__decorate([n.property({type:M})],
g.prototype,"fullExtent",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"hasMultidimensions",void 0);h.__decorate([n.property({json:{read:{source:"maxImageHeight"}}})],g.prototype,"imageMaxHeight",void 0);h.__decorate([n.property({json:{read:{source:"maxImageWidth"}}})],g.prototype,"imageMaxWidth",void 0);h.__decorate([n.property({type:String,json:{type:J.interpolationKebab.jsonValues,read:J.interpolationKebab.read,write:J.interpolationKebab.write}})],g.prototype,"interpolation",void 0);
h.__decorate([n.property()],g.prototype,"minScale",void 0);h.__decorate([B.reader("service","minScale")],g.prototype,"readMinScale",null);h.__decorate([n.property()],g.prototype,"maxScale",void 0);h.__decorate([B.reader("service","maxScale")],g.prototype,"readMaxScale",null);h.__decorate([n.property({type:I})],g.prototype,"mosaicRule",null);h.__decorate([B.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],g.prototype,"readMosaicRule",null);h.__decorate([E.writer("mosaicRule")],g.prototype,
"writeMosaicRule",null);h.__decorate([n.property({readOnly:!0}),L.aliasOf("serviceRasterInfo.multidimensionalInfo")],g.prototype,"multidimensionalInfo",void 0);h.__decorate([n.property({json:{type:D.Integer}})],g.prototype,"noData",void 0);h.__decorate([E.writer("noData")],g.prototype,"writeNoData",null);h.__decorate([n.property({type:String,json:{type:J.noDataInterpretationKebab.jsonValues,read:J.noDataInterpretationKebab.read,write:J.noDataInterpretationKebab.write}})],g.prototype,"noDataInterpretation",
void 0);h.__decorate([n.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],g.prototype,"objectIdField",void 0);h.__decorate([B.reader("objectIdField")],g.prototype,"readObjectIdField",null);h.__decorate([n.property({readOnly:!0})],g.prototype,"parsedUrl",null);h.__decorate([n.property({readOnly:!0}),L.aliasOf("serviceRasterInfo.pixelSize.x")],g.prototype,"pixelSizeX",void 0);h.__decorate([n.property({readOnly:!0}),L.aliasOf("serviceRasterInfo.pixelSize.y")],g.prototype,"pixelSizeY",
void 0);h.__decorate([n.property({type:Function})],g.prototype,"pixelFilter",void 0);h.__decorate([n.property()],g.prototype,"raster",void 0);h.__decorate([n.property()],g.prototype,"viewId",void 0);h.__decorate([n.property({types:R.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:R.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(G){return{enabled:G&&"vector-field"!==G.type}}}}}}})],g.prototype,"renderer",
void 0);h.__decorate([B.reader("renderer")],g.prototype,"readRenderer",null);h.__decorate([E.writer("renderer")],g.prototype,"writeRenderer",null);h.__decorate([n.property(aa.opacity)],g.prototype,"opacity",void 0);h.__decorate([n.property({readOnly:!0}),L.aliasOf("serviceRasterInfo.attributeTable")],g.prototype,"rasterAttributeTable",void 0);h.__decorate([n.property({readOnly:!0})],g.prototype,"rasterFields",null);h.__decorate([n.property({readOnly:!0})],g.prototype,"rasterFunctionInfos",void 0);
h.__decorate([n.property({type:K})],g.prototype,"renderingRule",null);h.__decorate([B.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],g.prototype,"readRenderingRule",null);h.__decorate([E.writer("renderingRule")],g.prototype,"writeRenderingRule",null);h.__decorate([n.property()],g.prototype,"serviceDataType",void 0);h.__decorate([n.property({readOnly:!0,type:O})],g.prototype,"spatialReference",void 0);h.__decorate([B.reader("spatialReference",["spatialReference","extent"])],g.prototype,
"readSpatialReference",null);h.__decorate([n.property({json:{type:V.jsonValues}})],g.prototype,"pixelType",void 0);h.__decorate([B.reader("pixelType")],g.prototype,"readPixelType",null);h.__decorate([E.writer("pixelType")],g.prototype,"writePixelType",null);h.__decorate([n.property({constructOnly:!0,type:S})],g.prototype,"serviceRasterInfo",void 0);h.__decorate([n.property()],g.prototype,"sourceJSON",void 0);h.__decorate([n.property(aa.url)],g.prototype,"url",void 0);h.__decorate([n.property({readOnly:!0})],
g.prototype,"version",void 0);h.__decorate([B.reader("version",["currentVersion","fields","timeInfo"])],g.prototype,"readVersion",null);return g=h.__decorate([ra.subclass("esri.layers.mixins.ArcGISImageService")],g)};Object.defineProperty(Y,"__esModule",{value:!0})});