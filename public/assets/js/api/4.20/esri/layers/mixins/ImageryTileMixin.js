// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/_rollupPluginBabelHelpers ../../chunks/tslib.es6 ../../geometry ../../rasterRenderers ../../request ../../core/Logger ../../core/maybe ../../core/accessorSupport/decorators/aliasOf ../../core/has ../../core/accessorSupport/ensureType ../../core/jsonMap ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/subclass ../../geometry/support/spatialReferenceUtils ../support/arcgisLayerUrl ../support/commonProperties ../support/DimensionalDefinition ../support/RasterJobHandler ../support/TileInfo ../../renderers/support/rasterRendererHelper ../../renderers/support/RasterSymbolizer ../../geometry/Extent ../../geometry/SpatialReference".split(" "),
function(q,l,f,K,x,y,z,r,n,L,M,N,g,A,B,C,D,t,E,u,m,F,G,H){const v=z.getLogger("esri.layers.mixins.ImageryTileMixin");q.ImageryTileMixin=d=>{d=function(w){function p(){var a=w.apply(this,arguments)||this;a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a.bandIds=null;a.copyright=null;a.fullExtent=null;a.interpolation="nearest";a.raster=null;a.rasterInfo=null;a.sourceJSON=null;a.spatialReference=null;a.tileInfo=null;a.symbolizer=null;return a}l._inheritsLoose(p,w);var h=p.prototype;
h.updateRenderer=function(){var a=l._asyncToGenerator(function*(){if(this.loaded&&JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer)){var b=this._rasterJobHandler.instance;b&&(this.symbolizer.rendererJSON=m.normalizeRendererJSON(this.renderer.toJSON()),this.symbolizer.bind(),yield b.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}});return function(){return a.apply(this,arguments)}}();h.applyRenderer=function(){var a=l._asyncToGenerator(function*(b,
c){var e=b&&b.pixelBlock;if(!(e&&e.pixels&&0<e.pixels.length))return null;this.updateRenderer();e=this._rasterJobHandler.instance;const {bandIds:k}=this;return e?yield e.symbolize({...b,simpleStretchParams:c,bandIds:k}):this.symbolizer.symbolize({...b,simpleStretchParams:c,bandIds:k})});return function(b,c){return a.apply(this,arguments)}}();h.getTileUrl=function(a,b,c){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${a}/${b}/${c}`:""};h.getCompatibleTileInfo=function(a,b,
c=!1){if(!this.loaded)return null;if(c&&a.equals(this.spatialReference))return this.tileInfo;c=B.getInfo(a);return u.create({size:256,spatialReference:a,origin:c?{x:c.origin[0],y:c.origin[1]}:{x:b.xmin,y:b.ymax}})};h.getCompatibleFullExtent=function(a){return this.loaded?this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(a)?this._compatibleFullExtent:this._compatibleFullExtent=this.raster.computeExtent(a):null};h.fetchTile=function(){var a=l._asyncToGenerator(function*(b,
c,e,k={}){if(k.requestAsImageElement)return b=this.getTileUrl(b,c,e),y(b,{responseType:"image",query:{sliceId:this._sliceId,_ts:k.timestamp,...this.raster.ioConfig.customFetchParameters},signal:k.signal}).then(I=>I.data);yield this._initJobHandler();const J="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;this.multidimensionalDefinition&&(k={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,buffer:J,...k});return this.raster.fetchTile(b,c,e,k)});return function(b,
c,e){return a.apply(this,arguments)}}();h.fetchPixels=function(){var a=l._asyncToGenerator(function*(b,c,e,k){yield this._initJobHandler();this.multidimensionalDefinition&&(k={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:this._sliceId,...k});return this.raster.fetchPixels(b,c,e,k)});return function(b,c,e,k){return a.apply(this,arguments)}}();h.identify=function(a,b={}){this.multidimensionalDefinition&&!b.multidimensionalDefinition&&(b={...b,multidimensionalDefinition:this.multidimensionalDefinition});
return this.raster.identify(a,b)};h.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};h.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&this._shutdownJobHandler()};h.hasStandardTime=function(){var a;const b=this.rasterInfo.multidimensionalInfo;if(!r.isSome(b)||"standard-time"!==this.rasterInfo.dataType)return!1;const c=null==(a=this.multidimensionalDefinition[0])?void 0:a.variableName;return b.variables.some(e=>
e.name===c&&e.dimensions.some(k=>"StdTime"===k.name))};h.getStandardTimeValue=function(a){return(new Date(864E5*(a-25569))).toString()};h._configDefaultSettings=function(){this._configDefaultInterpolation();this._configDefaultSlice();this._configDefaultRenderer()};h._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const a=new E;this._rasterJobHandler.connectionPromise=a.initialize().then(()=>{this._rasterJobHandler.instance=
a;this.raster.rasterJobHandler=a;this.renderer&&this.updateRenderer()}).catch(()=>null);return this._rasterJobHandler.connectionPromise};h._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=null;this._rasterJobHandler.refCount=0;this.raster.rasterJobHandler=null};h._configDefaultInterpolation=function(){if(null==this.interpolation){var a;const b=m.getDefaultInterpolation(this.rasterInfo,
this.raster.tileType,null==(a=this.sourceJSON)?void 0:a.defaultResamplingMethod);this._set("interpolation",b)}};h._configDefaultSlice=function(){const {multidimensionalInfo:a}=this.raster.rasterInfo;if(r.isSome(a)){if(!this.multidimensionalDefinition){const b=a.variables[0],c=[];b.dimensions.forEach(e=>{c.push(new t({variableName:b.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))});this.multidimensionalDefinition=c}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}};
h._configDefaultRenderer=function(){const a=this.raster.rasterInfo;this.bandIds||(this.bandIds=m.getDefaultBandCombination(a));if(!this.renderer){var b,c;this.renderer=m.createDefaultRenderer(a,{bandIds:this.bandIds,variableName:null==(b=this.multidimensionalDefinition)?void 0:null==(c=b[0])?void 0:c.variableName})}this.symbolizer?(this.symbolizer.rendererJSON=m.normalizeRendererJSON(this.renderer.toJSON()),this.symbolizer.rasterInfo=a):this.symbolizer=new F({rendererJSON:this.renderer.toJSON(),rasterInfo:a});
this.symbolizer.bind()||v.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")};l._createClass(p,[{key:"multidimensionalDefinition",set:function(a){this.raster&&(this._sliceId=this.raster.getSliceIndex(a));this._set("multidimensionalDefinition",a)}},{key:"url",set:function(a){this._set("url",C.sanitizeUrl(a,v))}},{key:"renderer",set:function(a){this._set("renderer",a);this.updateRenderer()}}]);return p}(d);f.__decorate([g.property()],d.prototype,"_cachedRendererJson",void 0);
f.__decorate([g.property()],d.prototype,"_sliceId",void 0);f.__decorate([g.property()],d.prototype,"_compatibleFullExtent",void 0);f.__decorate([g.property()],d.prototype,"_rasterJobHandler",void 0);f.__decorate([g.property()],d.prototype,"bandIds",void 0);f.__decorate([g.property()],d.prototype,"copyright",void 0);f.__decorate([g.property({type:G}),n.aliasOf("rasterInfo.extent")],d.prototype,"fullExtent",void 0);f.__decorate([g.property()],d.prototype,"interpolation",void 0);f.__decorate([g.property()],
d.prototype,"ioConfig",void 0);f.__decorate([g.property({type:[t]})],d.prototype,"multidimensionalDefinition",null);f.__decorate([g.property()],d.prototype,"raster",void 0);f.__decorate([g.property({readOnly:!0}),n.aliasOf("raster.rasterInfo")],d.prototype,"rasterInfo",void 0);f.__decorate([g.property()],d.prototype,"sourceJSON",void 0);f.__decorate([g.property({type:H}),n.aliasOf("rasterInfo.spatialReference")],d.prototype,"spatialReference",void 0);f.__decorate([g.property({type:u}),n.aliasOf("rasterInfo.storageInfo.tileInfo")],
d.prototype,"tileInfo",void 0);f.__decorate([g.property(D.url)],d.prototype,"url",null);f.__decorate([g.property({types:x.rasterRendererTypes})],d.prototype,"renderer",null);f.__decorate([g.property()],d.prototype,"symbolizer",void 0);return d=f.__decorate([A.subclass("esri.layers.ImageryTileMixin")],d)};Object.defineProperty(q,"__esModule",{value:!0})});