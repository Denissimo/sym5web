// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/graphics/sources/GeoJSONSource":function(){define("exports ../../../chunks/_rollupPluginBabelHelpers ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/has ../../../core/Loadable ../../../core/Logger ../../../core/maybe ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/jsonMap ../../../core/accessorSupport/decorators/subclass ./support/clientSideDefaults ../../support/TimeInfo ../../../rest/support/FeatureSet ../../../geometry/Extent ../../../geometry/Polygon ../../../geometry/support/typeUtils".split(" "),
function(n,v,c,D,E,Q,R,S,J,T,u,X,Y,K,d,L,f,M,U,V){const N=S.getLogger("esri.layers.graphics.sources.GeoJSONSource");n.GeoJSONSource=function(F){function x(){var b=F.apply(this,arguments)||this;b.type="geojson";b.fullExtent=null;b.timeInfo=null;return b}v._inheritsLoose(x,F);var l=x.prototype;l.load=function(b){b=J.isSome(b)?b.signal:null;this.addResolvingPromise(this._startWorker(b));return Promise.resolve(this)};l.destroy=function(){var b;null==(b=this._connection)?void 0:b.close();this._connection=
null};l.applyEdits=function(b){return this.load().then(()=>this._applyEdits(b))};l.openPorts=function(){return this.load().then(()=>this._connection.openPorts())};l.queryFeatures=function(b,e={}){return this.load(e).then(()=>this._connection.invoke("queryFeatures",b?b.toJSON():null,e)).then(q=>f.fromJSON(q))};l.queryFeaturesJSON=function(b,e={}){return this.load(e).then(()=>this._connection.invoke("queryFeatures",b?b.toJSON():null,e))};l.queryFeatureCount=function(b,e={}){return this.load(e).then(()=>
this._connection.invoke("queryFeatureCount",b?b.toJSON():null,e))};l.queryObjectIds=function(b,e={}){return this.load(e).then(()=>this._connection.invoke("queryObjectIds",b?b.toJSON():null,e))};l.queryExtent=function(b,e={}){return this.load(e).then(()=>this._connection.invoke("queryExtent",b?b.toJSON():null,e)).then(q=>({count:q.count,extent:M.fromJSON(q.extent)}))};l.querySnapping=function(b,e={}){return this.load(e).then(()=>this._connection.invoke("querySnapping",b,e))};l._applyEdits=function(b){if(!this._connection)throw new E("geojson-layer-source:edit-failure",
"Memory source not loaded");const e=this.layer.objectIdField,q=[],r=[],w=[];if(b.addFeatures)for(const k of b.addFeatures)q.push(this._serializeFeature(k));if(b.deleteFeatures)for(const k of b.deleteFeatures)"objectId"in k&&null!=k.objectId?r.push(k.objectId):"attributes"in k&&null!=k.attributes[e]&&r.push(k.attributes[e]);if(b.updateFeatures)for(const k of b.updateFeatures)w.push(this._serializeFeature(k));return this._connection.invoke("applyEdits",{adds:q,updates:w,deletes:r}).then(({fullExtent:k,
timeExtent:y,featureEditResults:z})=>{this.fullExtent=k;this.timeInfo&&(k=this.timeInfo.clone(),k.read({timeExtent:y}),this.timeInfo=k);return this._createEditsResult(z)})};l._createEditsResult=function(b){return{addFeatureResults:b.addResults?b.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:b.updateResults?b.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:b.deleteResults?b.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],
updateAttachmentResults:[],deleteAttachmentResults:[]}};l._createFeatureEditResult=function(b){const e=!0===b.success?null:b.error||{code:void 0,description:void 0};return{objectId:b.objectId,globalId:b.globalId,error:e?new E("geojson-layer-source:edit-failure",e.description,{code:e.code}):null}};l._serializeFeature=function(b){const {attributes:e}=b;return(b=this._geometryForSerialization(b))?{geometry:b.toJSON(),attributes:e}:{attributes:e}};l._geometryForSerialization=function(b){({geometry:b}=
b);return J.isNone(b)?null:"mesh"===b.type||"extent"===b.type?U.fromExtent(b.extent):b};l._startWorker=function(){var b=v._asyncToGenerator(function*(e){this._connection=yield T.open("GeoJSONSourceWorker",{strategy:Q("feature-layers-workers")?"dedicated":"local",signal:e});const {fields:q,spatialReference:r,hasZ:w,geometryType:k,objectIdField:y,url:z,timeInfo:G}=this.layer;var A="defaults"===this.layer.originOf("spatialReference");A={url:z,fields:q&&q.map(t=>t.toJSON()),geometryType:V.typeKebabDictionary.toJSON(k),
hasZ:w,objectIdField:y,timeInfo:G?G.toJSON():null,spatialReference:A?null:r&&r.toJSON()};e=yield this._connection.invoke("load",A,{signal:e});for(const t of e.warnings)N.warn(t.message,{layer:this.layer,warning:t});e.featureErrors.length&&N.warn(`Encountered ${e.featureErrors.length} validation errors while loading features`,e.featureErrors);this.fullExtent=M.fromJSON(e.layerDefinition.extent);this.timeInfo=L.fromJSON(e.layerDefinition.timeInfo);this.sourceJSON=e.layerDefinition;this.capabilities=
d.createCapabilities(e.layerDefinition.hasZ,!0)});return function(e){return b.apply(this,arguments)}}();return x}(R);c.__decorate([u.property()],n.GeoJSONSource.prototype,"capabilities",void 0);c.__decorate([u.property()],n.GeoJSONSource.prototype,"type",void 0);c.__decorate([u.property()],n.GeoJSONSource.prototype,"fullExtent",void 0);c.__decorate([u.property({constructOnly:!0})],n.GeoJSONSource.prototype,"layer",void 0);c.__decorate([u.property()],n.GeoJSONSource.prototype,"sourceJSON",void 0);
c.__decorate([u.property()],n.GeoJSONSource.prototype,"timeInfo",void 0);n.GeoJSONSource=c.__decorate([K.subclass("esri.layers.graphics.sources.GeoJSONSource")],n.GeoJSONSource);n.default=n.GeoJSONSource;Object.defineProperty(n,"__esModule",{value:!0})})},"*noref":1}});
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/ReadOnlyMultiOriginJSONSupport ../core/urlUtils ../core/accessorSupport/decorators/property ../core/has ../core/accessorSupport/ensureType ../core/Logger ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../geometry/support/typeUtils ./Layer ./graphics/sources/GeoJSONSource ./mixins/BlendLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/FeatureReduction ./support/FeatureReductionCluster ./support/FeatureReductionSelection ./support/featureReductionUtils ./support/FeatureTemplate ./support/FeatureType ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ../rest/support/Query ../support/popupUtils ../symbols/support/ElevationInfo ../geometry/Extent ../geometry/SpatialReference".split(" "),function(n,
v,c,D,E,Q,R,S,J,T,u,X,Y,K,d,L,f,M,U,V,N,F,x,l,b,e,q,r,w,k,y,z,G,A,t,Z,aa,ba,O,ca,B,da,ea,fa,W){D=ba.defineFieldProperties();d=function(P){function H(a){a=P.call(this,a)||this;a.copyright=null;a.definitionExpression=null;a.displayField=null;a.editingEnabled=!0;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.fieldsIndex=null;a.fullExtent=null;a.geometryType=null;a.hasZ=void 0;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.objectIdField=null;a.popupEnabled=!0;a.popupTemplate=
null;a.screenSizePerspectiveEnabled=!0;a.source=null;a.spatialReference=W.WGS84;a.templates=null;a.title="GeoJSON";a.type="geojson";a.typeIdField=null;a.types=null;a.url=null;return a}v._inheritsLoose(H,P);var m=H.prototype;m.destroy=function(){var a;null==(a=this.source)?void 0:a.destroy()};m.load=function(a){const g=new q["default"]({layer:this});this._set("source",g);this.addResolvingPromise(g.load(a).then(()=>{this.read(g.sourceJSON,{origin:"service",url:this.parsedUrl});this.revert(["objectIdField",
"fields","timeInfo"],"service");O.fixRendererFields(this.renderer,this.fieldsIndex);O.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}));return Promise.resolve(this)};m.readFeatureReduction=function(a,g){return t.read(a,g)};m.writeWebSceneFeatureReduction=function(a,g,h,p){t.writeTarget(a,g,"layerDefinition.featureReduction",p)};m.applyEdits=function(){var a=v._asyncToGenerator(function*(g,h){const p=yield new Promise(function(I,C){n(["./graphics/editingSupport"],I,C)});yield this.load();return p.applyEdits(this,
this.source,g,h)});return function(g,h){return a.apply(this,arguments)}}();m.on=function(a,g){return P.prototype.on.call(this,a,g)};m.createPopupTemplate=function(a){return da.createPopupTemplate(this,a)};m.createQuery=function(){const a=new B,g=this.get("capabilities.data");a.returnGeometry=!0;g&&g.supportsZ&&(a.returnZ=!0);a.outFields=["*"];a.where=this.definitionExpression||"1\x3d1";const {timeOffset:h,timeExtent:p}=this;a.timeExtent=null!=h&&null!=p?p.offset(-h.value,h.unit):p||null;return a};
m.getFieldDomain=function(a,g){let h,p=!1;g=(g=g&&g.feature)&&g.attributes;const I=this.typeIdField&&g&&g[this.typeIdField];null!=I&&this.types&&(p=this.types.some(C=>C.id==I?((h=C.domains&&C.domains[a])&&"inherited"===h.type&&(h=this._getLayerDomain(a)),!0):!1));p||h||(h=this._getLayerDomain(a));return h};m.getField=function(a){return this.fieldsIndex.get(a)};m.queryFeatures=function(a,g){return this.load().then(()=>this.source.queryFeatures(B.from(a)||this.createQuery(),g)).then(h=>{if(null!=h&&
h.features)for(const p of h.features)p.layer=p.sourceLayer=this;return h})};m.queryObjectIds=function(a,g){return this.load().then(()=>this.source.queryObjectIds(B.from(a)||this.createQuery(),g))};m.queryFeatureCount=function(a,g){return this.load().then(()=>this.source.queryFeatureCount(B.from(a)||this.createQuery(),g))};m.queryExtent=function(a,g){return this.load().then(()=>this.source.queryExtent(B.from(a)||this.createQuery(),g))};m._getLayerDomain=function(a){if(!this.fields)return null;let g=
null;this.fields.some(h=>{h.name===a&&(g=h.domain);return!!g});return g};v._createClass(H,[{key:"capabilities",get:function(){return this.source?this.source.capabilities:null}},{key:"createQueryVersion",get:function(){this.commitProperty("definitionExpression");this.commitProperty("timeExtent");this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("capabilities");return(this._get("createQueryVersion")||0)+1}},{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},
{key:"isTable",get:function(){return this.loaded&&null==this.geometryType}},{key:"parsedUrl",get:function(){return this.url?L.urlToObject(this.url):null}},{key:"renderer",set:function(a){O.fixRendererFields(a,this.fieldsIndex);this._set("renderer",a)}}]);return H}(r.BlendLayer(y.TemporalLayer(k.ScaleRangeLayer(w.RefreshableLayer(d.ReadOnlyMultiOriginJSONMixin(e))))));c.__decorate([f.property({readOnly:!0,json:{read:!1,write:!1}})],d.prototype,"capabilities",null);c.__decorate([f.property({type:String})],
d.prototype,"copyright",void 0);c.__decorate([f.property({readOnly:!0})],d.prototype,"createQueryVersion",null);c.__decorate([f.property({readOnly:!0})],d.prototype,"defaultPopupTemplate",null);c.__decorate([f.property({type:String})],d.prototype,"definitionExpression",void 0);c.__decorate([f.property({type:String})],d.prototype,"displayField",void 0);c.__decorate([f.property({type:Boolean})],d.prototype,"editingEnabled",void 0);c.__decorate([f.property({type:ea})],d.prototype,"elevationInfo",void 0);
c.__decorate([f.property({types:{key:"type",base:z["default"],typeMap:{selection:A,cluster:G}},json:{write:{target:"layerDefinition.featureReduction"}}})],d.prototype,"featureReduction",void 0);c.__decorate([F.reader("featureReduction",["layerDefinition.featureReduction"])],d.prototype,"readFeatureReduction",null);c.__decorate([l.writer("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:t.webSceneFeatureReductionTypes}})],d.prototype,"writeWebSceneFeatureReduction",null);c.__decorate([f.property(D.fields)],
d.prototype,"fields",void 0);c.__decorate([f.property(D.fieldsIndex)],d.prototype,"fieldsIndex",void 0);c.__decorate([f.property({type:fa,aliasOf:"source.fullExtent"})],d.prototype,"fullExtent",void 0);c.__decorate([f.property({type:["point","polygon","polyline","multipoint"],json:{read:{reader:b.featureGeometryTypeKebabDictionary.read}}})],d.prototype,"geometryType",void 0);c.__decorate([f.property({type:Boolean})],d.prototype,"hasZ",void 0);c.__decorate([f.property({type:String})],d.prototype,"id",
void 0);c.__decorate([f.property({type:Boolean,readOnly:!0})],d.prototype,"isTable",null);c.__decorate([f.property({type:Boolean})],d.prototype,"labelsVisible",void 0);c.__decorate([f.property({type:[ca]})],d.prototype,"labelingInfo",void 0);c.__decorate([f.property({type:Boolean})],d.prototype,"legendEnabled",void 0);c.__decorate([f.property({type:["show","hide"]})],d.prototype,"listMode",void 0);c.__decorate([f.property({type:String})],d.prototype,"objectIdField",void 0);c.__decorate([f.property({readOnly:!0})],
d.prototype,"parsedUrl",null);c.__decorate([f.property({type:Boolean})],d.prototype,"popupEnabled",void 0);c.__decorate([f.property({type:E})],d.prototype,"popupTemplate",void 0);c.__decorate([f.property({types:K.rendererTypes,json:{read:{source:"drawingInfo.renderer"}}})],d.prototype,"renderer",null);c.__decorate([f.property({type:Boolean})],d.prototype,"screenSizePerspectiveEnabled",void 0);c.__decorate([f.property({readOnly:!0})],d.prototype,"source",void 0);c.__decorate([f.property({type:W})],
d.prototype,"spatialReference",void 0);c.__decorate([f.property({type:[Z]})],d.prototype,"templates",void 0);c.__decorate([f.property()],d.prototype,"title",void 0);c.__decorate([f.property({json:{read:!1},readOnly:!0})],d.prototype,"type",void 0);c.__decorate([f.property({type:String,readOnly:!0})],d.prototype,"typeIdField",void 0);c.__decorate([f.property({type:[aa]})],d.prototype,"types",void 0);c.__decorate([f.property({type:String})],d.prototype,"url",void 0);return d=c.__decorate([x.subclass("esri.layers.GeoJSONLayer")],
d)});