// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("require ../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../request ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/watchUtils ../core/accessorSupport/decorators/property ../core/has ../core/accessorSupport/utils ../core/accessorSupport/ensureType ../core/jsonMap ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/capabilities ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FetchAssociatedFeatureLayer ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/I3SLayerDefinitions ./support/LabelClass ./support/labelingInfo ./support/LayerFloorInfo ./support/RangeInfo ../renderers/support/styleUtils ../rest/support/Query ../support/popupUtils ../webdoc/support/opacityUtils".split(" "),
function(C,q,e,D,x,qa,ra,sa,ta,ua,va,wa,E,F,m,G,k,d,y,H,I,f,xa,J,ya,za,u,K,L,M,N,O,P,Q,R,S,v,T,U,V,W,X,z,w,Y,A,Z,aa,ba,ca,da,ea){const fa=["3DObject","Point"],r=G.getLogger("esri.layers.SceneLayer");x=W.defineFieldProperties();d=function(n){function t(...a){a=n.call(this,...a)||this;a.featureReduction=null;a.rangeInfos=null;a.operationalLayerType="ArcGISSceneServiceLayer";a.type="scene";a.fields=null;a.floorInfo=null;a.outFields=null;a.nodePages=null;a.materialDefinitions=null;a.textureSetDefinitions=
null;a.geometryDefinitions=null;a.serviceUpdateTimeStamp=null;a.definitionExpression=null;a.path=null;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.cachedDrawingInfo={color:!1};a.popupEnabled=!0;a.popupTemplate=null;a.objectIdField=null;a.globalIdField=null;a._fieldUsageInfo={};a.screenSizePerspectiveEnabled=!0;return a}q._inheritsLoose(t,n);var g=t.prototype;g.normalizeCtorArgs=function(a,b){return"string"===typeof a?{url:a,...b}:a};g.getField=function(a){return this.fieldsIndex.get(a)};
g.getFieldDomain=function(a,b){var c,h,p,l;return(b=null==(c=this.getFeatureType(null==b?void 0:b.feature))?void 0:null==(h=c.domains)?void 0:h[a])&&"inherited"!==b.type?b:null!=(p=null==(l=this.getField(a))?void 0:l.domain)?p:null};g.getFeatureType=function(a){return a&&k.isSome(this.associatedLayer)?this.associatedLayer.getFeatureType(a):null};g.readNodePages=function(a,b,c){"Point"===b.layerType&&(a=b.pointNodePages);return null==a||"object"!==typeof a?null:w.I3SNodePageDefinition.fromJSON(a,c)};
g.readCachedDrawingInfo=function(a){if(null==a||"object"!==typeof a)a={};null==a.color&&(a.color=!1);return a};g.readObjectIdField=function(a,b){!a&&b.fields&&b.fields.some(c=>{"esriFieldTypeOID"===c.type&&(a=c.name);return!!a});return a||void 0};g.readGlobalIdField=function(a,b){!a&&b.fields&&b.fields.some(c=>{"esriFieldTypeGlobalID"===c.type&&(a=c.name);return!!a});return a||void 0};g.readProfile=function(a,b){a=b.store.profile;if(null!=a&&B[a])return B[a];r.error("Unknown or missing profile",{profile:a,
layer:this});return"mesh-pyramids"};g.load=function(a){const b=k.isSome(a)?a.signal:null,c=this.loadFromPortal({supportedTypes:["Scene Service"]},a).catch(y.throwIfAbortError).then(()=>this._fetchService(b)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,b),this._setAssociatedFeatureLayer(b)])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>ba.loadStyleRenderer(this,{origin:"service"},
b)).then(()=>z.fixRendererFields(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(a));this.addResolvingPromise(c);return Promise.resolve(this)};g.createQuery=function(){const a=new ca;"mesh"!==this.geometryType&&(a.returnGeometry=!0,a.returnZ=!0);a.where=this.definitionExpression||"1\x3d1";a.sqlFormat="standard";return a};g.queryExtent=function(a,b){return this._getAssociatedLayerForQuery().then(c=>c.queryExtent(a||this.createQuery(),b))};g.queryFeatureCount=function(a,
b){return this._getAssociatedLayerForQuery().then(c=>c.queryFeatureCount(a||this.createQuery(),b))};g.queryFeatures=function(a,b){return this._getAssociatedLayerForQuery().then(c=>c.queryFeatures(a||this.createQuery(),b)).then(c=>{if(null!=c&&c.features)for(const h of c.features)h.layer=this,h.sourceLayer=this;return c})};g.queryObjectIds=function(a,b){return this._getAssociatedLayerForQuery().then(c=>c.queryObjectIds(a||this.createQuery(),b))};g.queryAttachments=function(a,b){return this._getAssociatedLayerForQuery().then(c=>
c.queryAttachments(a,b))};g.getFieldUsageInfo=function(a){const b={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[a]||b:(r.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),b)};g.createPopupTemplate=function(a){return da.createPopupTemplate(this,a)};g._getAssociatedLayerForQuery=function(){const a=this.associatedLayer;return k.isSome(a)&&a.loaded?Promise.resolve(a):this._loadAssociatedLayerForQuery()};
g._loadAssociatedLayerForQuery=function(){var a=q._asyncToGenerator(function*(){yield this.load();if(k.isNone(this.associatedLayer))throw new m("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{yield this.associatedLayer.load()}catch(b){throw new m("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:b});}return this.associatedLayer});return function(){return a.apply(this,
arguments)}}();g.hasCachedStatistics=function(a){return null!=this.statisticsInfo&&this.statisticsInfo.some(b=>b.name===a)};g.queryCachedStatistics=function(){var a=q._asyncToGenerator(function*(b,c){yield this.load(c);if(!this.statisticsInfo)throw new m("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const h=this.fieldsIndex.get(b);if(!h)throw new m("scenelayer:field-unexisting",`Field '${b}' does not exist on the layer`);for(const p of this.statisticsInfo)if(p.name===
h.name)return b=H.join(this.parsedUrl.path,p.href),F(b,{query:{f:"json",token:this.apiKey},responseType:"json",signal:c?c.signal:null}).then(l=>l.data);throw new m("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available");});return function(b,c){return a.apply(this,arguments)}}();g.saveAs=function(){var a=q._asyncToGenerator(function*(b,c){return this._debouncedSaveOperations(1,{...c,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},b)});return function(b,
c){return a.apply(this,arguments)}}();g.save=function(){var a=q._asyncToGenerator(function*(){return this._debouncedSaveOperations(0,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"})});return function(){return a.apply(this,arguments)}}();g.applyEdits=function(){var a=q._asyncToGenerator(function*(b,c){const h=yield new Promise(function(p,l){C(["./graphics/editingSupport"],p,l)});yield this.load();if(k.isNone(this.associatedLayer))throw new m(`${this.type}-layer:not-editable`,
"Service is not editable");yield this.associatedLayer.load();return h.applyEdits(this,this.associatedLayer.source,b,c)});return function(b,c){return a.apply(this,arguments)}}();g.on=function(a,b){return n.prototype.on.call(this,a,b)};g.validateLayer=function(a){if(a.layerType&&-1===fa.indexOf(a.layerType))throw new m("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported",
"Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});{a=this.normalReferenceFrame;var b=this.spatialReference;let c=!1,h=!1;if(null==a)h=c=!0;else switch(b=b&&b.isGeographic,a){case "east-north-up":case "earth-centered":c=!0;h=b;break;case "vertex-reference-frame":c=!0;h=!b;break;default:c=
!1}if(!c)throw new m("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!h)throw new m("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.");}};g._getTypeKeywords=function(){const a=[];if("points"===this.profile)a.push("Point");else if("mesh-pyramids"===this.profile)a.push("3DObject");else throw new m("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+
this.profile);return a};g._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(const a of this.fields){const b=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(h=>h.name===a.name)),c=!!(k.isSome(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(h=>h&&a.name===h.name));this._fieldUsageInfo[a.name]={supportsLabelingInfo:b,supportsRenderer:b,supportsPopupTemplate:b||c,supportsLayerQuery:c}}};g._applyAssociatedLayerOverrides=function(){this._applyAssociatedLayerFieldsOverrides();
this._applyAssociatedLayerPopupOverrides()};g._applyAssociatedLayerFieldsOverrides=function(){if(!k.isNone(this.associatedLayer)&&this.associatedLayer.fields){var a=null;for(const b of this.associatedLayer.fields){const c=this.getField(b.name);c?(!c.domain&&b.domain&&(c.domain=b.domain.clone()),c.editable=b.editable,c.nullable=b.nullable,c.length=b.length):(a||(a=this.fields?this.fields.slice():[]),a.push(b.clone()))}a&&this._set("fields",a)}};g._applyAssociatedLayerPopupOverrides=function(){if(!k.isNone(this.associatedLayer)){var a=
["popupTemplate","popupEnabled"],b=J.getProperties(this);for(let c=0;c<a.length;c++){const h=a[c],p=this.originIdOf(h),l=this.associatedLayer.originIdOf(h);p<l&&(2===l||3===l)&&b.setAtOrigin(h,this.associatedLayer[h],l)}}};g._setAssociatedFeatureLayer=function(){var a=q._asyncToGenerator(function*(b){if(-1!==["mesh-pyramids","points"].indexOf(this.profile)){b=new V.FetchAssociatedFeatureLayer(this.parsedUrl,this.portalItem,this.apiKey,b);try{this.associatedLayer=yield b.fetch()}catch(c){y.isAbortError(c)||
this._logWarningOnPopupEnabled()}}});return function(b){return a.apply(this,arguments)}}();g._logWarningOnPopupEnabled=function(){I.whenValidOnce(this,["popupTemplate","popupEnabled"],()=>this.popupEnabled&&null!=this.popupTemplate).then(()=>()=>{const a=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?r.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${a}`):r.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${a}`)})};
g._validateElevationInfo=function(){const a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"absolute-height"!==a.mode&&r.warn(".elevationInfo\x3d","Mesh scene layers only support absolute-height elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&r.warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};q._createClass(t,[{key:"types",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.types:[]}},{key:"typeIdField",
get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.typeIdField:null}},{key:"formTemplate",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.formTemplate:null}},{key:"fieldsIndex",get:function(){return new X(this.fields)}},{key:"elevationInfo",set:function(a){this._set("elevationInfo",a);this.loaded&&this._validateElevationInfo()}},{key:"geometryType",get:function(){return ha[this.profile]||"mesh"}},{key:"renderer",set:function(a){z.fixRendererFields(a,
this.fieldsIndex);this._set("renderer",a)}},{key:"capabilities",get:function(){var a=k.isSome(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:S.zeroCapabilities;const {query:b,editing:{supportsGlobalId:c,supportsRollbackOnFailure:h,supportsUploadWithItemId:p,supportsReturnServiceEditsInSourceSpatialReference:l},data:{supportsZ:ia,supportsM:ja,isVersioned:ka,supportsAttachment:la},operations:{supportsEditing:ma,supportsUpdate:na,supportsQuery:oa,supportsQueryAttachments:pa}}=
a;a=a.operations.supportsChangeTracking;return{query:b,editing:{supportsGlobalId:c,supportsReturnServiceEditsInSourceSpatialReference:l,supportsRollbackOnFailure:h,supportsGeometryUpdate:!1,supportsUploadWithItemId:p},data:{supportsAttachment:la,supportsZ:ia,supportsM:ja,isVersioned:ka},operations:{supportsQuery:oa,supportsQueryAttachments:pa,supportsEditing:ma&&a,supportsAdd:!1,supportsDelete:!1,supportsUpdate:na&&a}}}},{key:"editingEnabled",get:function(){return this._isOverridden("editingEnabled")?
this._get("editingEnabled"):this.userHasEditingPrivileges},set:function(a){null!=a?this._override("editingEnabled",a):this._clearOverride("editingEnabled")}},{key:"defaultPopupTemplate",get:function(){return k.isSome(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}},{key:"displayField",get:function(){return k.isSome(this.associatedLayer)?this.associatedLayer.displayField:null}}]);return t}(R.SceneService(N.ArcGISService(O.OperationalLayer(P.PortalLayer(Q.ScaleRangeLayer(d.MultiOriginJSONMixin(M.APIKeyMixin(L))))))));
e.__decorate([f.property({types:{key:"type",base:T["default"],typeMap:{selection:U}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],d.prototype,"featureReduction",void 0);e.__decorate([f.property({type:[aa["default"]],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],d.prototype,"rangeInfos",void 0);e.__decorate([f.property({json:{read:!1}})],
d.prototype,"associatedLayer",void 0);e.__decorate([f.property({type:["show","hide"]})],d.prototype,"listMode",void 0);e.__decorate([f.property({type:["ArcGISSceneServiceLayer"]})],d.prototype,"operationalLayerType",void 0);e.__decorate([f.property({json:{read:!1},readOnly:!0})],d.prototype,"type",void 0);e.__decorate([f.property({...x.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],d.prototype,"fields",void 0);e.__decorate([f.property()],d.prototype,"types",null);e.__decorate([f.property()],
d.prototype,"typeIdField",null);e.__decorate([f.property()],d.prototype,"formTemplate",null);e.__decorate([f.property({readOnly:!0})],d.prototype,"fieldsIndex",null);e.__decorate([f.property({type:Z,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],d.prototype,"floorInfo",void 0);e.__decorate([f.property(x.outFields)],d.prototype,"outFields",void 0);e.__decorate([f.property({type:w.I3SNodePageDefinition,readOnly:!0,json:{read:!1}})],d.prototype,"nodePages",
void 0);e.__decorate([u.reader("service","nodePages",["nodePages","pointNodePages"])],d.prototype,"readNodePages",null);e.__decorate([f.property({type:[w.I3SMaterialDefinition],readOnly:!0})],d.prototype,"materialDefinitions",void 0);e.__decorate([f.property({type:[w.I3STextureSetDefinition],readOnly:!0})],d.prototype,"textureSetDefinitions",void 0);e.__decorate([f.property({type:[w.I3SGeometryDefinition],readOnly:!0})],d.prototype,"geometryDefinitions",void 0);e.__decorate([f.property({readOnly:!0})],
d.prototype,"serviceUpdateTimeStamp",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"attributeStorageInfo",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"statisticsInfo",void 0);e.__decorate([f.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],d.prototype,"definitionExpression",void 0);e.__decorate([f.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],
d.prototype,"path",void 0);e.__decorate([f.property(v.elevationInfo)],d.prototype,"elevationInfo",null);e.__decorate([f.property({type:String})],d.prototype,"geometryType",null);e.__decorate([f.property(v.labelsVisible)],d.prototype,"labelsVisible",void 0);e.__decorate([f.property({type:[Y],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:A.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:A.reader},write:!0}})],d.prototype,"labelingInfo",void 0);
e.__decorate([f.property(v.legendEnabled)],d.prototype,"legendEnabled",void 0);e.__decorate([f.property({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(n,t){var g,a;if("number"===typeof n&&0<=n&&1>=n)return n;n=null==(g=t.layerDefinition)?void 0:null==(a=g.drawingInfo)?void 0:a.transparency;return void 0!==n?ea.transparencyToOpacity(n):
void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],d.prototype,"opacity",void 0);e.__decorate([f.property({types:E.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],d.prototype,"renderer",null);e.__decorate([f.property({json:{read:!1}})],d.prototype,"cachedDrawingInfo",void 0);e.__decorate([u.reader("service","cachedDrawingInfo")],d.prototype,"readCachedDrawingInfo",null);e.__decorate([f.property({readOnly:!0,
json:{read:!1}})],d.prototype,"capabilities",null);e.__decorate([f.property({type:Boolean,json:{read:!1}})],d.prototype,"editingEnabled",null);e.__decorate([f.property(v.popupEnabled)],d.prototype,"popupEnabled",void 0);e.__decorate([f.property({type:D,json:{name:"popupInfo",write:!0}})],d.prototype,"popupTemplate",void 0);e.__decorate([f.property({readOnly:!0,json:{read:!1}})],d.prototype,"defaultPopupTemplate",null);e.__decorate([f.property({type:String,json:{read:!1}})],d.prototype,"objectIdField",
void 0);e.__decorate([u.reader("service","objectIdField",["objectIdField","fields"])],d.prototype,"readObjectIdField",null);e.__decorate([f.property({type:String,json:{read:!1}})],d.prototype,"globalIdField",void 0);e.__decorate([u.reader("service","globalIdField",["globalIdField","fields"])],d.prototype,"readGlobalIdField",null);e.__decorate([f.property({readOnly:!0,type:String,json:{read:!1}})],d.prototype,"displayField",null);e.__decorate([f.property({type:String,json:{read:!1}})],d.prototype,
"profile",void 0);e.__decorate([u.reader("service","profile",["store.profile"])],d.prototype,"readProfile",null);e.__decorate([f.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],d.prototype,"normalReferenceFrame",void 0);e.__decorate([f.property(v.screenSizePerspectiveEnabled)],d.prototype,"screenSizePerspectiveEnabled",void 0);d=e.__decorate([K.subclass("esri.layers.SceneLayer")],d);const B={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids",
"features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},ha={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return d});