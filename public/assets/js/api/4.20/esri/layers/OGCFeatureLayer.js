// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.20/esri/copyright.txt for details.
//>>built
define("../chunks/_rollupPluginBabelHelpers ../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/MultiOriginJSONSupport ../core/accessorSupport/decorators/property ../core/has ../core/accessorSupport/ensureType ../core/Logger ../core/jsonMap ../core/accessorSupport/decorators/subclass ../geometry/support/typeUtils ./Layer ./graphics/sources/OGCFeatureSource ./mixins/APIKeyMixin ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionCluster ./support/FeatureReductionSelection ./support/FeatureType ./support/Field ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ../rest/support/Query ../support/popupUtils ../symbols/support/ElevationInfo ../geometry/Extent ../geometry/SpatialReference".split(" "),
function(l,c,r,z,Y,Z,aa,ba,ca,da,ea,fa,A,b,d,ha,ia,ja,ka,B,t,C,D,E,F,G,H,I,J,K,L,n,M,N,O,P,Q,R,p,S,T,u,U,V,W,X){r=R.defineFieldProperties();b=function(q){function m(a){a=q.call(this,a)||this;a.collectionId=null;a.copyright=null;a.definitionExpression=null;a.description=null;a.displayField=null;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.fieldsIndex=null;a.fullExtent=null;a.geometryType=null;a.hasZ=void 0;a.labelingInfo=null;a.labelsVisible=!0;a.legendEnabled=!0;a.objectIdField=null;
a.operationalLayerType="OGCFeatureLayer";a.popupEnabled=!0;a.popupTemplate=null;a.screenSizePerspectiveEnabled=!0;a.source=new D["default"]({layer:l._assertThisInitialized(a)});a.spatialReference=null;a.title=null;a.type="ogc-feature";a.typeIdField=null;a.types=null;a.url=null;return a}l._inheritsLoose(m,q);var f=m.prototype;f.destroy=function(){var a;null==(a=this.source)?void 0:a.destroy()};f.load=function(a){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},a).then(()=>
this._fetchService(a)));return this.when()};f.on=function(a,e){return q.prototype.on.call(this,a,e)};f.createPopupTemplate=function(a){return U.createPopupTemplate(this,a)};f.createQuery=function(){return new u};f.getField=function(a){return this.fieldsIndex.get(a)};f.getFieldDomain=function(a,e){var h;let g,k=!1;e=null==e?void 0:null==(h=e.feature)?void 0:h.attributes;const v=this.typeIdField&&(null==e?void 0:e[this.typeIdField]);null!=v&&this.types&&(k=this.types.some(w=>{if(w.id==v){var x,y;g=
null==(x=w.domains)?void 0:x[a];"inherited"===(null==(y=g)?void 0:y.type)&&(g=this._getLayerDomain(a));return!0}return!1}));k||g||(g=this._getLayerDomain(a));return g};f.queryFeatures=function(a,e){return this.load().then(()=>this.source.queryFeatures(u.from(a)||this.createQuery(),e)).then(h=>{var g;null==h?void 0:null==(g=h.features)?void 0:g.forEach(k=>{k.layer=k.sourceLayer=this});return h})};f._fetchService=function(){var a=l._asyncToGenerator(function*(e){yield this.source.load(e);this.read(this.source.featureDefinition,
{origin:"service"});p.fixRendererFields(this.renderer,this.fieldsIndex);p.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)});return function(e){return a.apply(this,arguments)}}();f._getLayerDomain=function(a){if(!this.fields)return null;for(const e of this.fields)if(e.name===a&&e.domain)return e.domain;return null};l._createClass(m,[{key:"defaultPopupTemplate",get:function(){return this.createPopupTemplate()}},{key:"renderer",set:function(a){p.fixRendererFields(a,this.fieldsIndex);this._set("renderer",
a)}}]);return m}(E.APIKeyMixin(G.CustomParametersMixin(F.BlendLayer(L.TemporalLayer(K.ScaleRangeLayer(H.OperationalLayer(I.PortalLayer(J.RefreshableLayer(b.MultiOriginJSONMixin(C))))))))));c.__decorate([d.property({readOnly:!0,json:{origins:{service:{read:!0}}}})],b.prototype,"capabilities",void 0);c.__decorate([d.property({type:String,json:{write:!0}})],b.prototype,"collectionId",void 0);c.__decorate([d.property({type:String})],b.prototype,"copyright",void 0);c.__decorate([d.property({readOnly:!0})],
b.prototype,"defaultPopupTemplate",null);c.__decorate([d.property({type:String})],b.prototype,"definitionExpression",void 0);c.__decorate([d.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"collection.description"}}}}})],b.prototype,"description",void 0);c.__decorate([d.property({type:String})],b.prototype,"displayField",void 0);c.__decorate([d.property({type:V})],b.prototype,"elevationInfo",void 0);c.__decorate([d.property({types:{key:"type",base:M["default"],typeMap:{selection:O,
cluster:N}}})],b.prototype,"featureReduction",void 0);c.__decorate([d.property({type:[Q],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],b.prototype,"fields",void 0);c.__decorate([d.property(r.fieldsIndex)],b.prototype,"fieldsIndex",void 0);c.__decorate([d.property({readOnly:!0,type:W,json:{origins:{service:{read:{source:"layerDefinition.extent"}}}}})],b.prototype,"fullExtent",void 0);c.__decorate([d.property({type:t.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{read:{source:"layerDefinition.geometryType",
reader:t.featureGeometryTypeKebabDictionary.read}}}}})],b.prototype,"geometryType",void 0);c.__decorate([d.property({type:Boolean,json:{origins:{service:{read:{source:"layerDefinition.hasZ"}}}}})],b.prototype,"hasZ",void 0);c.__decorate([d.property({type:[S],json:{origins:{"web-map":{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:T.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}}}})],b.prototype,"labelingInfo",void 0);c.__decorate([d.property(n.labelsVisible)],b.prototype,
"labelsVisible",void 0);c.__decorate([d.property(n.legendEnabled)],b.prototype,"legendEnabled",void 0);c.__decorate([d.property({type:String,json:{origins:{service:{read:{source:"layerDefinition.objectIdField"}}}}})],b.prototype,"objectIdField",void 0);c.__decorate([d.property({type:["OGCFeatureLayer"]})],b.prototype,"operationalLayerType",void 0);c.__decorate([d.property(n.popupEnabled)],b.prototype,"popupEnabled",void 0);c.__decorate([d.property({type:z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],
b.prototype,"popupTemplate",void 0);c.__decorate([d.property({types:A.rendererTypes,json:{origins:{service:{read:{source:"layerDefinition.drawingInfo.renderer"},write:!1}},read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],b.prototype,"renderer",null);c.__decorate([d.property({type:Boolean})],b.prototype,"screenSizePerspectiveEnabled",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"source",void 0);c.__decorate([d.property({readOnly:!0,
type:X,json:{origins:{service:{read:!0}}}})],b.prototype,"spatialReference",void 0);c.__decorate([d.property({type:String,json:{origins:{service:{read:{source:"collection.title"}},"web-map":{write:{ignoreOrigin:!0}}}}})],b.prototype,"title",void 0);c.__decorate([d.property({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0);c.__decorate([d.property({type:String,readOnly:!0})],b.prototype,"typeIdField",void 0);c.__decorate([d.property({type:[P]})],b.prototype,"types",void 0);c.__decorate([d.property({type:String,
json:{write:!0}})],b.prototype,"url",void 0);return b=c.__decorate([B.subclass("esri.layers.OGCFeatureLayer")],b)});